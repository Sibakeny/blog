-- MySQL dump 10.13  Distrib 8.0.19, for osx10.15 (x86_64)
--
-- Host: localhost    Database: sbkn_blog_development
-- ------------------------------------------------------
-- Server version	8.0.19

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `ar_internal_metadata`
--

DROP TABLE IF EXISTS `ar_internal_metadata`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `ar_internal_metadata` (
  `key` varchar(255) NOT NULL,
  `value` varchar(255) DEFAULT NULL,
  `created_at` datetime(6) NOT NULL,
  `updated_at` datetime(6) NOT NULL,
  PRIMARY KEY (`key`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `ar_internal_metadata`
--

LOCK TABLES `ar_internal_metadata` WRITE;
/*!40000 ALTER TABLE `ar_internal_metadata` DISABLE KEYS */;
INSERT INTO `ar_internal_metadata` VALUES ('environment','development','2020-04-20 11:41:31.049272','2020-04-20 11:41:31.049272'),('schema_sha1','a585161c892e5af7deeb18735e194af6f09ebf88','2020-04-20 11:41:31.067561','2020-04-20 11:41:31.067561');
/*!40000 ALTER TABLE `ar_internal_metadata` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `article_categories`
--

DROP TABLE IF EXISTS `article_categories`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `article_categories` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `article_id` bigint DEFAULT NULL,
  `created_at` datetime(6) NOT NULL,
  `updated_at` datetime(6) NOT NULL,
  `category_id` bigint DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `index_article_categories_on_article_id` (`article_id`),
  KEY `index_article_categories_on_category_id` (`category_id`)
) ENGINE=InnoDB AUTO_INCREMENT=153 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `article_categories`
--

LOCK TABLES `article_categories` WRITE;
/*!40000 ALTER TABLE `article_categories` DISABLE KEYS */;
INSERT INTO `article_categories` VALUES (1,10,'2020-04-20 12:04:50.486521','2020-04-20 12:04:50.486521',1),(2,10,'2020-04-20 12:04:50.492396','2020-04-20 12:04:50.492396',4),(3,10,'2020-04-20 12:04:50.498723','2020-04-20 12:04:50.498723',8),(4,10,'2020-04-20 12:04:50.508313','2020-04-20 12:04:50.508313',9),(5,12,'2020-04-20 12:10:22.000745','2020-04-20 12:10:22.000745',1),(6,12,'2020-04-20 12:10:22.116593','2020-04-20 12:10:22.116593',7),(7,12,'2020-04-20 12:10:22.235743','2020-04-20 12:10:22.235743',8),(8,12,'2020-04-20 12:10:22.352149','2020-04-20 12:10:22.352149',9),(9,13,'2020-04-20 12:14:07.701518','2020-04-20 12:14:07.701518',1),(10,13,'2020-04-20 12:14:07.839240','2020-04-20 12:14:07.839240',4),(11,13,'2020-04-20 12:14:07.979672','2020-04-20 12:14:07.979672',8),(12,13,'2020-04-20 12:14:08.120671','2020-04-20 12:14:08.120671',9),(13,15,'2020-04-23 13:27:19.942683','2020-04-23 13:27:19.942683',1),(14,15,'2020-04-23 13:27:19.947454','2020-04-23 13:27:19.947454',4),(15,16,'2020-04-23 13:27:47.352879','2020-04-23 13:27:47.352879',4),(16,17,'2020-04-23 13:28:22.669391','2020-04-23 13:28:22.669391',6),(17,17,'2020-04-23 13:28:22.674695','2020-04-23 13:28:22.674695',8),(18,17,'2020-04-23 13:28:22.679064','2020-04-23 13:28:22.679064',9),(19,18,'2020-04-23 13:28:46.769951','2020-04-23 13:28:46.769951',1),(20,18,'2020-04-23 13:28:46.779225','2020-04-23 13:28:46.779225',4),(21,18,'2020-04-23 13:28:46.789345','2020-04-23 13:28:46.789345',8),(22,18,'2020-04-23 13:28:46.801441','2020-04-23 13:28:46.801441',9),(23,19,'2020-04-23 13:29:46.380093','2020-04-23 13:29:46.380093',10),(24,20,'2020-04-23 13:30:09.554091','2020-04-23 13:30:09.554091',1),(25,20,'2020-04-23 13:30:09.560111','2020-04-23 13:30:09.560111',4),(26,21,'2020-04-23 13:30:34.296387','2020-04-23 13:30:34.296387',1),(27,21,'2020-04-23 13:30:34.308625','2020-04-23 13:30:34.308625',4),(28,21,'2020-04-23 13:30:34.321288','2020-04-23 13:30:34.321288',8),(29,21,'2020-04-23 13:30:34.333557','2020-04-23 13:30:34.333557',9),(30,22,'2020-04-23 13:30:55.453178','2020-04-23 13:30:55.453178',1),(31,22,'2020-04-23 13:30:55.465187','2020-04-23 13:30:55.465187',4),(32,22,'2020-04-23 13:30:55.477188','2020-04-23 13:30:55.477188',8),(33,22,'2020-04-23 13:30:55.488895','2020-04-23 13:30:55.488895',9),(34,23,'2020-04-23 13:31:13.571848','2020-04-23 13:31:13.571848',1),(35,23,'2020-04-23 13:31:13.583614','2020-04-23 13:31:13.583614',4),(36,24,'2020-04-23 13:31:50.439067','2020-04-23 13:31:50.439067',1),(37,24,'2020-04-23 13:31:50.451568','2020-04-23 13:31:50.451568',4),(38,24,'2020-04-23 13:31:50.463420','2020-04-23 13:31:50.463420',8),(39,24,'2020-04-23 13:31:50.475015','2020-04-23 13:31:50.475015',9),(40,25,'2020-04-23 13:32:12.007858','2020-04-23 13:32:12.007858',1),(41,25,'2020-04-23 13:32:12.017674','2020-04-23 13:32:12.017674',4),(42,25,'2020-04-23 13:32:12.027261','2020-04-23 13:32:12.027261',8),(43,25,'2020-04-23 13:32:12.037634','2020-04-23 13:32:12.037634',9),(44,26,'2020-04-23 13:32:28.470080','2020-04-23 13:32:28.470080',1),(45,26,'2020-04-23 13:32:28.476413','2020-04-23 13:32:28.476413',4),(46,27,'2020-04-23 13:32:44.811952','2020-04-23 13:32:44.811952',1),(47,27,'2020-04-23 13:32:44.823776','2020-04-23 13:32:44.823776',4),(48,28,'2020-04-23 13:33:06.869144','2020-04-23 13:33:06.869144',1),(49,28,'2020-04-23 13:33:06.879882','2020-04-23 13:33:06.879882',4),(50,28,'2020-04-23 13:33:06.891001','2020-04-23 13:33:06.891001',8),(51,28,'2020-04-23 13:33:06.902555','2020-04-23 13:33:06.902555',9),(52,29,'2020-04-23 13:33:24.981426','2020-04-23 13:33:24.981426',10),(53,30,'2020-04-23 13:33:43.815923','2020-04-23 13:33:43.815923',1),(54,30,'2020-04-23 13:33:43.826151','2020-04-23 13:33:43.826151',4),(55,31,'2020-04-23 13:34:11.522174','2020-04-23 13:34:11.522174',1),(56,31,'2020-04-23 13:34:11.529100','2020-04-23 13:34:11.529100',4),(57,32,'2020-04-23 13:34:36.438699','2020-04-23 13:34:36.438699',1),(58,33,'2020-04-23 13:35:27.437112','2020-04-23 13:35:27.437112',10),(59,34,'2020-04-23 13:35:48.125644','2020-04-23 13:35:48.125644',1),(60,34,'2020-04-23 13:35:48.137874','2020-04-23 13:35:48.137874',4),(61,35,'2020-04-23 13:36:16.141315','2020-04-23 13:36:16.141315',1),(62,35,'2020-04-23 13:36:16.151013','2020-04-23 13:36:16.151013',4),(63,36,'2020-04-23 13:36:46.842591','2020-04-23 13:36:46.842591',1),(64,36,'2020-04-23 13:36:46.854758','2020-04-23 13:36:46.854758',4),(65,36,'2020-04-23 13:36:46.866397','2020-04-23 13:36:46.866397',8),(66,36,'2020-04-23 13:36:46.877203','2020-04-23 13:36:46.877203',9),(67,37,'2020-04-23 13:37:12.862311','2020-04-23 13:37:12.862311',10),(68,38,'2020-04-23 13:37:29.083951','2020-04-23 13:37:29.083951',1),(69,38,'2020-04-23 13:37:29.094824','2020-04-23 13:37:29.094824',4),(70,39,'2020-04-23 13:37:45.431117','2020-04-23 13:37:45.431117',1),(71,39,'2020-04-23 13:37:45.442062','2020-04-23 13:37:45.442062',4),(72,40,'2020-04-23 13:38:06.156601','2020-04-23 13:38:06.156601',6),(73,40,'2020-04-23 13:38:06.168529','2020-04-23 13:38:06.168529',8),(74,40,'2020-04-23 13:38:06.179147','2020-04-23 13:38:06.179147',9),(75,41,'2020-04-23 13:38:25.137974','2020-04-23 13:38:25.137974',6),(76,41,'2020-04-23 13:38:25.148983','2020-04-23 13:38:25.148983',8),(77,41,'2020-04-23 13:38:25.179983','2020-04-23 13:38:25.179983',9),(78,42,'2020-04-23 13:38:41.189303','2020-04-23 13:38:41.189303',4),(79,43,'2020-04-23 13:39:00.088954','2020-04-23 13:39:00.088954',1),(80,43,'2020-04-23 13:39:00.100060','2020-04-23 13:39:00.100060',4),(81,44,'2020-04-23 13:39:27.128173','2020-04-23 13:39:27.128173',1),(82,44,'2020-04-23 13:39:27.139921','2020-04-23 13:39:27.139921',4),(83,45,'2020-04-23 13:39:58.789558','2020-04-23 13:39:58.789558',1),(84,45,'2020-04-23 13:39:58.799922','2020-04-23 13:39:58.799922',4),(85,45,'2020-04-23 13:39:58.809486','2020-04-23 13:39:58.809486',8),(86,45,'2020-04-23 13:39:58.819577','2020-04-23 13:39:58.819577',9),(87,46,'2020-04-23 13:40:20.995536','2020-04-23 13:40:20.995536',1),(88,46,'2020-04-23 13:40:21.007439','2020-04-23 13:40:21.007439',4),(89,47,'2020-04-23 13:40:42.940790','2020-04-23 13:40:42.940790',1),(90,47,'2020-04-23 13:40:42.947370','2020-04-23 13:40:42.947370',4),(91,47,'2020-04-23 13:40:42.953168','2020-04-23 13:40:42.953168',8),(92,47,'2020-04-23 13:40:42.960049','2020-04-23 13:40:42.960049',9),(93,48,'2020-04-23 13:41:10.779265','2020-04-23 13:41:10.779265',1),(94,48,'2020-04-23 13:41:10.790605','2020-04-23 13:41:10.790605',4),(95,48,'2020-04-23 13:41:10.796520','2020-04-23 13:41:10.796520',10),(96,49,'2020-04-23 13:41:33.618637','2020-04-23 13:41:33.618637',1),(97,49,'2020-04-23 13:41:33.624881','2020-04-23 13:41:33.624881',4),(98,49,'2020-04-23 13:41:33.629964','2020-04-23 13:41:33.629964',8),(99,49,'2020-04-23 13:41:33.634689','2020-04-23 13:41:33.634689',9),(100,50,'2020-04-23 13:42:00.344313','2020-04-23 13:42:00.344313',1),(101,50,'2020-04-23 13:42:00.355249','2020-04-23 13:42:00.355249',4),(102,51,'2020-04-23 13:42:20.859684','2020-04-23 13:42:20.859684',1),(103,51,'2020-04-23 13:42:20.871602','2020-04-23 13:42:20.871602',4),(104,52,'2020-04-23 13:42:39.685371','2020-04-23 13:42:39.685371',1),(105,52,'2020-04-23 13:42:39.696573','2020-04-23 13:42:39.696573',4),(106,52,'2020-04-23 13:42:39.707851','2020-04-23 13:42:39.707851',8),(107,52,'2020-04-23 13:42:39.719505','2020-04-23 13:42:39.719505',9),(108,53,'2020-04-23 13:42:57.270127','2020-04-23 13:42:57.270127',1),(109,53,'2020-04-23 13:42:57.280542','2020-04-23 13:42:57.280542',4),(110,53,'2020-04-23 13:42:57.289756','2020-04-23 13:42:57.289756',8),(111,53,'2020-04-23 13:42:57.297670','2020-04-23 13:42:57.297670',9),(112,54,'2020-04-23 13:43:14.558699','2020-04-23 13:43:14.558699',1),(113,54,'2020-04-23 13:43:14.570048','2020-04-23 13:43:14.570048',4),(114,54,'2020-04-23 13:43:14.580946','2020-04-23 13:43:14.580946',6),(115,54,'2020-04-23 13:43:14.592605','2020-04-23 13:43:14.592605',8),(116,54,'2020-04-23 13:43:14.599868','2020-04-23 13:43:14.599868',9),(117,55,'2020-04-23 13:43:31.163556','2020-04-23 13:43:31.163556',1),(118,55,'2020-04-23 13:43:31.175002','2020-04-23 13:43:31.175002',4),(119,55,'2020-04-23 13:43:31.187107','2020-04-23 13:43:31.187107',8),(120,56,'2020-04-23 13:43:53.881902','2020-04-23 13:43:53.881902',1),(121,56,'2020-04-23 13:43:53.893222','2020-04-23 13:43:53.893222',4),(122,56,'2020-04-23 13:43:53.904297','2020-04-23 13:43:53.904297',6),(123,56,'2020-04-23 13:43:53.910984','2020-04-23 13:43:53.910984',8),(124,56,'2020-04-23 13:43:53.917151','2020-04-23 13:43:53.917151',9),(125,58,'2020-04-23 13:44:29.053876','2020-04-23 13:44:29.053876',1),(126,58,'2020-04-23 13:44:29.065461','2020-04-23 13:44:29.065461',4),(127,59,'2020-04-23 13:49:45.472287','2020-04-23 13:49:45.472287',1),(128,59,'2020-04-23 13:49:45.483894','2020-04-23 13:49:45.483894',4),(129,60,'2020-04-23 13:50:03.643104','2020-04-23 13:50:03.643104',1),(130,60,'2020-04-23 13:50:03.653826','2020-04-23 13:50:03.653826',4),(131,60,'2020-04-23 13:50:03.665678','2020-04-23 13:50:03.665678',8),(132,60,'2020-04-23 13:50:03.677196','2020-04-23 13:50:03.677196',9),(133,61,'2020-04-23 13:50:23.660778','2020-04-23 13:50:23.660778',1),(134,61,'2020-04-23 13:50:23.671231','2020-04-23 13:50:23.671231',4),(135,61,'2020-04-23 13:50:23.684027','2020-04-23 13:50:23.684027',8),(136,61,'2020-04-23 13:50:23.694895','2020-04-23 13:50:23.694895',9),(137,62,'2020-04-23 13:50:41.721289','2020-04-23 13:50:41.721289',1),(138,62,'2020-04-23 13:50:41.732482','2020-04-23 13:50:41.732482',4),(139,62,'2020-04-23 13:50:41.744078','2020-04-23 13:50:41.744078',8),(140,62,'2020-04-23 13:50:41.755620','2020-04-23 13:50:41.755620',9),(141,64,'2020-04-23 13:51:13.693817','2020-04-23 13:51:13.693817',1),(142,64,'2020-04-23 13:51:13.704692','2020-04-23 13:51:13.704692',4),(143,65,'2020-04-23 13:51:32.952320','2020-04-23 13:51:32.952320',5),(144,66,'2020-04-23 13:51:51.124747','2020-04-23 13:51:51.124747',5),(145,67,'2020-04-23 13:52:07.351538','2020-04-23 13:52:07.351538',5),(146,68,'2020-04-23 13:52:22.181518','2020-04-23 13:52:22.181518',5),(147,69,'2020-04-23 13:52:41.055455','2020-04-23 13:52:41.055455',1),(148,69,'2020-04-23 13:52:41.067105','2020-04-23 13:52:41.067105',3),(149,69,'2020-04-23 13:52:41.078193','2020-04-23 13:52:41.078193',4),(150,69,'2020-04-23 13:52:41.089907','2020-04-23 13:52:41.089907',7),(151,69,'2020-04-23 13:52:41.101424','2020-04-23 13:52:41.101424',8),(152,69,'2020-04-23 13:52:41.112883','2020-04-23 13:52:41.112883',9);
/*!40000 ALTER TABLE `article_categories` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `article_view_counters`
--

DROP TABLE IF EXISTS `article_view_counters`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `article_view_counters` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `count` int NOT NULL DEFAULT '0',
  `article_id` bigint DEFAULT NULL,
  `created_at` datetime(6) NOT NULL,
  `updated_at` datetime(6) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `index_article_view_counters_on_article_id` (`article_id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `article_view_counters`
--

LOCK TABLES `article_view_counters` WRITE;
/*!40000 ALTER TABLE `article_view_counters` DISABLE KEYS */;
INSERT INTO `article_view_counters` VALUES (1,17,13,'2020-04-26 00:47:50.513167','2020-04-26 00:47:50.513167'),(2,3,17,'2020-04-26 01:34:37.608036','2020-04-26 01:34:37.608036'),(3,5,16,'2020-04-26 05:00:49.973228','2020-04-26 05:00:49.973228'),(4,11,14,'2020-04-26 05:00:55.410887','2020-04-26 05:00:55.410887'),(5,6,18,'2020-04-26 05:01:10.403815','2020-04-26 05:01:10.403815'),(6,1,20,'2020-04-26 05:02:10.806763','2020-04-26 05:02:10.806763'),(7,5,15,'2020-04-26 05:02:28.820857','2020-04-26 05:02:28.820857'),(8,2,21,'2020-04-26 05:23:44.113584','2020-04-26 05:23:44.113584'),(9,1,46,'2020-04-26 05:25:01.515530','2020-04-26 05:25:01.515530'),(10,1,40,'2020-04-26 05:42:48.192080','2020-04-26 05:42:48.192080'),(11,10,19,'2020-04-26 08:58:12.228118','2020-04-26 08:58:12.228118'),(12,1,22,'2020-04-26 11:14:06.848841','2020-04-26 11:14:06.848841'),(13,2,69,'2020-04-26 11:28:41.234247','2020-04-26 11:28:41.234247');
/*!40000 ALTER TABLE `article_view_counters` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `articles`
--

DROP TABLE IF EXISTS `articles`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `articles` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `title` varchar(255) DEFAULT NULL,
  `body` text,
  `created_at` datetime(6) NOT NULL,
  `updated_at` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=71 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `articles`
--

LOCK TABLES `articles` WRITE;
/*!40000 ALTER TABLE `articles` DISABLE KEYS */;
INSERT INTO `articles` VALUES (13,'rails チェックボックスを自動的に作る　collection_check_boxes','# 初めに\ncollection_check_boxesというとても便利なものがあると知ったので使ってみました。\n\n例えばカテゴリを選択する際に既に登録されているカテゴリからチェックボックスで選択する場合に使える\n\n\n# 使い方\n\ncollection_check_boxesについてはrails guidesで\n\n> objectが属するクラスのmethodの既存の戻り値をコレクションにしたcheck_boxタグを返します。\n\nだそうです。\n\n\n\n使い方としては\n\n```erb\n<%= collection_check_boxes(:article, :tag_ids, Tag.all, :id, :name) do |tag| %>\n\n  <%= tag.label do %>\n    <%= tag.check_box %>\n    <%= tag.text %>\n  <% end %>\n\n<% end %>\n\n```\n\nみたいな感じで使えます。\n\n\nこれで既存のタグのチェックボックスが作られます。\n\n# 実際に使ってみる\n\nまず\n\n```\n\nrails new qiita_collection_check_boxes\n\nrails g model article title\nrails g model tag name\nrails g model article_tags article:references tag:references\nrails db:migrate\n\nrails g controller articles \n```\n\nみたいにする\n\nrails routes.rbを\n\n```ruby \nresources :articles \n```\n\nとして\n\narticles_controllerを\n\n```ruby \nclass ArticlesController < ApplicationController\n  def index\n    @articles = Article.all \n  end\n\n  def new \n    @article = Article.new \n  end \n\n  def create \n    @article = Article.new(article_params)\n    if @article.save \n      redirect_to articles_path \n    else \n      render :new \n    end \n  end \n\n  private \n\n  def article_params \n    params.require(:article).permit(:title, tag_ids: [])\n  end   \nend\n```\n\nこんな感じにする。\n\nここで重要なのがストロングパラメータの\n\n```\ntag_ids: []\n```\n\nのところ\n\nいまいち仕組みが分かっていないんですがcollection_check_boxesでtag_idsを取得してそれが複数の可能性があるから配列にしています。\n\nただなんでこれで自動的に中間テーブルの作成を行ってくれるのかはわかりません。\n\nですがとりあえずこれで中間テーブルまで自動的に作成されます。\n\n \n \n \nmodelファイルはこんな感じ\n\n```ruby:article_tag.rb \nclass ArticleTag < ApplicationRecord\n  belongs_to :article\n  belongs_to :tag\nend\n\n```\n\n \n \n \n```ruby:article.rb \nclass Article < ApplicationRecord\n    has_many :article_tags\n    has_many :tags, through: :article_tags\nend\n```\n\n \n \n \n```ruby:tag.rb \n\nclass Tag < ApplicationRecord\n    has_many :article_tags\n    has_many :articles, through: :article_tags \nend\n```\n\n \n \n \nこれでOK\n\n後はviewを作るのみ\n\n　\n\n```erb:new.html.erb \n<%= form_with model: @article, local: true do |f| %>\n    <%= f.label :title %>\n    <%= f.text_field :title %>\n\n    <%= collection_check_boxes(:article, :tag_ids, Tag.all, :id, :name) do |tag| %>\n        <%= tag.label do %>\n            <%= tag.check_box %>\n            <%= tag.text %>\n        <% end %>\n    <% end %>\n    <%= f.submit %>\n<% end %>\n```\n\n\ncollection_check_boxesは\n\n> objectが属するクラスのmethodの既存の戻り値をコレクションにしたcheck_boxタグを返します。\n\nということでしたが\n\nTag.allをしてその一つ一つのid,nameというメソッドの戻り値を取得しています。\n\ntag.labelの中にtag.textと書いていますがこれがtag.nameではうまく動きません。\n\nこのあたりもいまいち仕組みが分かってません。\n\nですがこれで実行すると\n\n![collection.png](https://qiita-image-store.s3.amazonaws.com/0/207921/dd8a60e3-0192-959f-66ee-f2f49d302545.png)\n\n\nこんな感じで既存のタグが出てきてくれます。\n\n\nおわり:sunny:\n\n\n\n','2020-04-20 12:14:07.439586','2020-04-26 05:32:43.015783'),(14,'マイグレーションについて','# はじめに\n先週からエンジニアとして働き始めました。\n\nといってもずっとgitの使い方でつまづいていて何もしてないんですが....\n\n\nマイグレーションに関して少し指摘を受けて忘れないように忘備録として残します。\n\n自分は結構おっちょこちょいなのでうっかり大切なデータ消しちゃったとかやりそうなのでマイグレーションとかは特に気を付けなければ…\n\n何か間違っている点やアドバイスなどがあればコメントしていただけるととても助かります。\n\n# マイグレーションファイルの作り方\n\nマイグレーションファイルを作成するときはあんま何も考えず\n\n> とりあえず変更出来てればよいか…\n\n位の考えだったのですが実際はそんなことはなく\n\n \n \n \n```\nrails db:migrate\nrails db:rollback\n```\n\nが問題なく実行できることを確認する必要があるようです。\n\n\n理由に関してはあんまりうまく理解できなかったのですが....\n\n\n# マイグレーションの流れ\n\nマイグレーションの流れとしては\n\n\nまず\n\n```\nrails db:migrate:status\n```\n\nで今の状況を確認します\n\nそうするとこんな感じに履歴が見れます\n\n\n```sql\ndatabase: tt_db\n\n Status   Migration ID    Migration Name\n--------------------------------------------------\n   up     20190224051828  Create users\n   up     20190224052935  Add address to users\n   up     20190224053300  Change address column\n   up     20190224054338  Add birthday not null\n   up     20190224055456  Add good to users\n```\n\nこのupというのはmigrationされた状態ということ\n\n今では5個のマイグレーションファイルがありすべてマイグレーションが実行されている状態であることが分かります。\n\n\nそしてそれを確認したら次に\n\n```\nrails db\n```\n\nでデータベースにアクセスします。\n\nそして\n\n```sql\nselect * from schema_migrations;\n```\n\nを実行します\n\nそうすると\n\n```sql\ntt_db=> select * from schema_migrations;\n    version\n----------------\n 20190224051828\n 20190224052935\n 20190224053300\n 20190224054338\n 20190224055456\n(5 rows)\n```\n\nこういった感じでマイグレーションファイル情報が出てきます。\n\n\nこれはrails db:migrate:statusで出てきたupの情報と一致しているはずです。\n\n\n次に現在のテーブル定義を確認しておきます\n\n```sql\ntt_db=> \\d users;\n                                           Table \"public.users\"\n     Column      |            Type             | Collation | Nullable |              Default\n-----------------+-----------------------------+-----------+----------+-----------------------------------\n id              | bigint                      |           | not null | nextval(\'users_id_seq\'::regclass)\n name            | character varying           |           |          |\n email           | character varying           |           |          |\n password        | character varying           |           |          |\n created_at      | timestamp without time zone |           | not null |\n updated_at      | timestamp without time zone |           | not null |\n address         | text                        |           |          |\n birthday        | date                        |           |          |\n password_digest | character varying           |           |          |\n good            | character varying           |           |          |\nIndexes:\n    \"users_pkey\" PRIMARY KEY, btree (id)\n```\n\nこんなかんじでpostgresqlの場合は\\d テーブル名でテーブルの情報が確認できます。\n\n\nそして次に\\qでデータベースから離脱してマイグレーションファイルを作成していきます。\n\n今回はheightという身長を保存するカラムを作成していきます。\n\nその場合は\n\n```\nrails g migration add_height_to_users\n```\n\nこれを実行\n\nそうするとdb/migrate以下にマイグレーションファイルがこんな感じで作成されているはずです。\n\n\n```ruby \nclass AddHeightToUsers < ActiveRecord::Migration[5.2]\n  def change\n  end\nend\n```\n\nここに変更する内容を書いていきますがrails db:migrate rails db:rollbackを確実に実行できるようにしていくために\n\n```ruby \nclass AddHeightToUsers < ActiveRecord::Migration[5.2]\n  def up\n　　　add_column :users, :height, :string\n  end\n\n  def down\n     remove_column :users, :height\n  end \nend\n```\n\nみたいにmigrateされるときとrollbackされるときの処理を別々に書いていきます。\n\n\nrails db:migrateを実行する前に現在のマイグレーションファイルの状態をrails db:migrate:statusで確認します\n\nそうすると\n\n```\ndatabase: tt_db\n\n Status   Migration ID    Migration Name\n--------------------------------------------------\n   up     20190224051828  Create users\n   up     20190224052935  Add address to users\n   up     20190224053300  Change address column\n   up     20190224054338  Add birthday not null\n   up     20190224055456  Add good to users\n  down    20190224063318  Add height to users\n```\n\nこんな感じになっているはずです。\n\nこの最後のdownがいま作ったマイグレーションファイルです。\n\nこれを確認したらrails db:migrateを実行します\n\n成功するのでrails dbでデータベースにアクセスして問題なく変わっているか確認します。\n\n\n```\ntt_db=> \\d users;\n                                           Table \"public.users\"\n     Column      |            Type             | Collation | Nullable |              Default\n-----------------+-----------------------------+-----------+----------+-----------------------------------\n id              | bigint                      |           | not null | nextval(\'users_id_seq\'::regclass)\n name            | character varying           |           |          |\n email           | character varying           |           |          |\n password        | character varying           |           |          |\n created_at      | timestamp without time zone |           | not null |\n updated_at      | timestamp without time zone |           | not null |\n address         | text                        |           |          |\n birthday        | date                        |           |          |\n password_digest | character varying           |           |          |\n good            | character varying           |           |          |\n height          | character varying           |           |          |\nIndexes:\n    \"users_pkey\" PRIMARY KEY, btree (id)\n```\n\nこんな感じで最後にheightカラムが作成されています。\n\n\nついでに\n\n　\nselect * from schema_migrations;で問題なく情報が一つ増えていることを確認します。\n\n```sql\ntt_db=> select * from schema_migrations;\n    version\n----------------\n 20190224051828\n 20190224052935\n 20190224053300\n 20190224054338\n 20190224055456\n 20190224063318\n(6 rows)\n```\n\nマイグレーションを実行する前は5rowsだったので問題なくできています。\n\nそしたらデータベースから離脱して\n\nrails db:migrate:statusでupが6つになっていることを確認します。\n\n\n```\ndatabase: tt_db\n\n Status   Migration ID    Migration Name\n--------------------------------------------------\n   up     20190224051828  Create users\n   up     20190224052935  Add address to users\n   up     20190224053300  Change address column\n   up     20190224054338  Add birthday not null\n   up     20190224055456  Add good to users\n   up     20190224063318  Add height to users\n```\n\n\n次にためしにデータを作成します。\n\n\n```ruby\nirb(main):001:0> user = User.new\n=> #<User id: nil, name: nil, email: nil, password: nil, created_at: nil, updated_at: nil, address: nil, birthday: nil, password_digest: nil, good: nil, height: nil>\nirb(main):002:0> user.name = \"pon\"\n=> \"pon\"\nirb(main):003:0> user.email = \"pon@gmail.com\"\n=> \"pon@gmail.com\"\nirb(main):004:0> user.password =\"pon\"\n=> \"pon\"\nirb(main):005:0> user.height = \"180cm\"\n=> \"180cm\"\nirb(main):006:0> user.save\n   (0.2ms)  BEGIN\n  User Create (0.7ms)  INSERT INTO \"users\" (\"name\", \"email\", \"password\", \"created_at\", \"updated_at\", \"height\") VALUES ($1, $2, $3, $4, $5, $6) RETURNING \"id\"  [[\"name\", \"pon\"], [\"email\", \"pon@gmail.com\"], [\"password\", \"pon\"], [\"created_at\", \"2019-02-24 06:45:18.618771\"], [\"updated_at\", \"2019-02-24 06:45:18.618771\"], [\"height\", \"180cm\"]]\n   (7.5ms)  COMMIT\n=> true\nirb(main):007:0>\n```\n\nrails dbでデータベースに接続してデータを確認すると\n\n```\n id | name |     email     | password |         created_at         |         updated_at         | address | birthday | password_digest | good | height\n----+------+---------------+----------+----------------------------+----------------------------+---------+----------+-----------------+------+--------\n  3 | pon  | pon@gmail.com | pon      | 2019-02-24 06:45:18.618771 | 2019-02-24 06:45:18.618771 |         |          |                 |      | 180cm\n(1 row)\n```\n\nこんな感じで情報が出てきます。\n\nここまでしたら\n\nrails db:rollbackで前の状態に戻します\n\n```\n== 20190224063318 AddHeightToUsers: reverting =================================\n-- remove_column(:users, :height)\n   -> 0.0007s\n== 20190224063318 AddHeightToUsers: reverted (0.0013s) ========================\n```\n\n問題なくrollbackできるはず\n\nrails db:migrate:statusを確認\n\n\n\n```\ndatabase: tt_db\n\n Status   Migration ID    Migration Name\n--------------------------------------------------\n   up     20190224051828  Create users\n   up     20190224052935  Add address to users\n   up     20190224053300  Change address column\n   up     20190224054338  Add birthday not null\n   up     20190224055456  Add good to users\n  down    20190224063318  Add height to users\n```\n\n\n一つdownになっているやつがいまrollbackしたものです。\n\n\nここでrails dbでデータベースにアクセスしてusersの情報をみてみると\n\n```sql\ntt_db=> select * from users;\n id | name |     email     | password |         created_at         |         updated_at         | address | birthday | password_digest | good\n----+------+---------------+----------+----------------------------+----------------------------+---------+----------+-----------------+------\n  3 | pon  | pon@gmail.com | pon      | 2019-02-24 06:45:18.618771 | 2019-02-24 06:45:18.618771 |         |          |                 |\n(1 row)\n```\n\nheightのカラムがなくなっています。\n\nここまでは良いのですがこのあとまたrails db:migrateを実行すると\n\n\n```sql\ntt_db=> select * from users;\n id | name |     email     | password |         created_at         |         updated_at         | address | birthday | password_digest | good | height\n----+------+---------------+----------+----------------------------+----------------------------+---------+----------+-----------------+------+--------\n  3 | pon  | pon@gmail.com | pon      | 2019-02-24 06:45:18.618771 | 2019-02-24 06:45:18.618771 |         |          |                 |      |\n(1 row)\n```\n\nこんな感じでheightの情報が消えています。\n\nこんな感じでカラムが一度消えてしまうと情報も消えてしまいます。\n\nこれはカラムの内容を変更するときに特に気を付けなくてはいけないです。\n\n\n\n\n\nemailというカラムをmailというカラムに変更したい場合に\n\nrails g migration change_users_email_to_mail\n\nとして\n\n```ruby\nclass ChangeUsersEmailToMail < ActiveRecord::Migration[5.2]\n  def up\n          remove_column :users, :email\n          add_column :users, :mail, :string\n  end\n\n  def down\n          remove_column :users, :mail\n          add_column :users, :email, :string\n  end\nend\n```\n\nとしてmigrate rollbackが通るようにして\n\nrails db:migrate:statusで現在の状況を確認して追加しようとしているのがdownとして問題なく入っているのを確認して\n\nrails db:migrateを実行すると\n\nusersテーブルの中身は\n\n```sql\ntt_db=> select * from users;\n id | name | password |         created_at         |         updated_at         | address | birthday | password_digest | good | height | mail\n----+------+----------+----------------------------+----------------------------+---------+----------+-----------------+------+--------+------\n  3 | pon  | pon      | 2019-02-24 06:45:18.618771 | 2019-02-24 06:45:18.618771 |         |          |                 |      |        |\n(1 row)\n```\n\nこんな感じでmailの中身が消えた状態になってしまっています。\n\n\nこれが本番の環境で大切な情報が消えてしまったとなったら大変です....\n\n\nなので気を付けるようにしましょう。\n\n# 追記\n\nカラム名の変更であれば\n\nrename_columnをつかえるっぽいです。\n\nなのでrename_columnを使えばデータは消えずに問題ないですがカラムの型を変更する場合はどうしたらよいかわからないです。\n\n\n# ちなみに\n\n既にデプロイしているプロジェクトの大切な情報を含んでいるカラムを変更したい場合どうしたらよいのでしょうか？\n\nわかる方教えてください( ;∀;)\n\n\n\n\n\n\n\n','2020-04-22 10:48:57.910562','2020-04-26 05:33:15.542302'),(15,'attr_accessorの仕組みが分かった','# 初めに\nattr_accessorってrubyの勉強してたら結構出てきますよね。\n最近になってやっとattr_accessorがどういった仕組みをしているかがわかりました。\n\n## attr_accessorの使い方\n\nattr_accessorはこんな感じで使いますよね\n\n```ruby:attr_sample.rb\nclass User\n  attr_accessor :age\nend\n\nuser = User.new\nuser.age = 18\np user.age\n=> 18\n```\n\n## attr_accessorの仕組み\n\nまずさっきのコードは\n\n```ruby:attr_sample2.rb\nclass User\n  def age=(value)\n    @age = value\n  end\n\n  def age\n    @age \n  end \nend\n\nuser = User.new\nuser.age = 18\np user.age\n=> 18\n```\n\n\nこれと同じ\n\n\nそれでattr_accessor :ageの一行でどのように実装しているのかというと\n\n\n```ruby:attr_code.rb\n\nclass Object  \n\n    def self.new_accessor(*args)\n        args.each do |attr|\n            define_method(attr) do\n                instance_variable_get(\"@#{attr}\")\n            end \n\n            define_method(\"#{attr}=\") do |value|\n                instance_variable_set(\"@#{attr}\", value)\n            end\n        end \n    end \nend \n\nclass User \n    new_accessor :age, :name\nend \n\nuser = User.new \nuser.age = 19\nuser.name = \'taro\'\np user.age\np user.name\n=> 19\n=> \'taro\'\n```\n\n\nみたいな感じです（多分…）\n\nまずnew_accessorというクラスメソッドをObjectクラスをオープンして作っています。\n\nそうすることによってObjectクラスが継承されているクラスすべてで使うことができます。\n\nnew_accessorの中身はdefine_methodでattrというメソッドとattr=というメソッドを作っています。\n\nattrではinstance_variable_get で @attr　の値を取得していて\n\nattr=ではinstance_variable_set で @attr　に値をセットしています\n\n（attrは*argから得た値で今回の場合はageとnameです）\n\n\n*argで不特定の個数の値をとることによって何個でもメソッドが作ることができます。\n\n\n\n素晴らしい！！\n\n\n\nなにか間違っていることがあるかもしれないのでその際はご指摘いただけたらと思います。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n','2020-04-23 13:27:19.926203','2020-04-23 13:27:19.926203'),(16,'『メタプログラミングRuby』でのバリデーションてきなやつ','# 初めに\n\n『メタプログラミングRuby』を読んでいていろいろ気づくことがあります。\nそのうちの一つにProcの必要性です。\nProc.callとかいつ使うんだよとか思ってましたがブロックの中身を後で決める場合にはとてもべんりなわけです。\n\n\n# とりあえずコードを見てください\n\n『メタプログラミングRuby』に書かれていたattr_checkedというメソッドで一番わかりやすかったやつ。\n\n```ruby:attr_checked.rb\nclass Class\n  def attr_checked(attribute, &validation)\n    define_method \"#{attribute}=\" do |value|\n      raise \'Invalid attribute\' unless validation.call(value)\n      instance_variable_set(\"@#{attribute}\",value)\n    end\n\n    define_method attribute do \n      instance_variable_get \"@#{attribute}\"\n    end \n  end \nend \n\nclass Person\n  attr_checked :age do |v|\n      v >= 18 \n  end \nend\n\nperson = Person.new\nperson.age = 20\np person.age\n=> 20\n\nperson1 = Person.new\nperson.age = 10\np person.age\n=> `block in attr_checked\': Invalid attribute (RuntimeError)\n```\n\n\n最初見たときは何が書いているか全くわかりませんでしたがdefine_methodとproc.callがわかればどういったコードなのかわかります。\n\n\n#define_method\n\ndefine_methodはメソッドを定義するものでattribute=,attributeというメソッドを定義しています。\n\n\n# proc.callの出番\n\n```ruby\nraise \'Invalid attribute\' unless validation.call(value)\n```\n\nの部分ですがまずraiseはエラーを発生させます。\n\nなのでunless validation.call(value)がtrueになったらエラーが起きるというわけです。\n\n\nattr_checkedでattributeと&validationが渡されていますね。\n\n今回の場合はattributeは:ageで&validationが:ageの後に書かれているブロックの部分です。\n\nvalidationではなくて&validationと書くことによってブロックを受け取ることができてそのブロックを実行するために必要になるのがcallです。\n\n\n# validatoin.call(value)\n\n\nvalidation.call(value)によって年齢が　v >= 18　にチェックされtrueかfalseを返します。\n\nそしてfalseが返ってきた場合にraiseでエラーを発生させているというわけですね。\n\n\n\n# そのほかの書き方\n\n\n上に書いたコードが一番わかりやすかったのですが他にもバリデーション的なやつをほかのコードでも実装していました。\n\nその一つがこれ。\n\n\n\n```ruby:add_checked_attribute.rb\nclass Person\nend \n\ndef add_checked_attribute(klass, attribute, &validation)\n    klass.class_eval do \n      define_method \"#{attribute}=\" do |value|\n        raise \'invalid attribute\' unless validation.call(value)\n        instance_variable_set(\"@#{attribute}\", value)\n      end \n  \n      define_method attribute do\n        instance_variable_get(\"@#{attribute}\")\n      end\n    end \nend\n\n\n\nadd_checked_attribute(Person, :age) {|v| v >= 18}\nperson1 = Person.new\nperson1.age = 20\np person1.age\n=> 20\n\nperson = Person.new\nperson.age = 10\np person2.age \n=> add_checked_attribute\': invalid attribute (RuntimeError)\n```\n\nclass Classの中に書いている場合は定義したどのクラスでも使えますが今回はそうではないのでどのクラスで使うか指定してあげなければいけません。\n\nそのために使うのがclass_evalで例えば\n\n```ruby:class_eval.rb\n\nclass Person\nend\n\n\nPerson.class_eval do\n  def self.greet\n    p \"hello!!\"\n  end \nend \n\nPerson.greet\n=> \"hello!!\"\n```\n\n\nみたいなことができます。\n\nadd_checked_attributeの第一引数でクラスをklassでもらってその値を使ってklass.class_evalを書いています。\n\n\n# おわり\n\n『メタプログラミングRuby』で書いてあったバリデーション的なのはとりあえずこんなかんじでした。\n\n間違っているところがあればご指摘いただければと思います。\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n','2020-04-23 13:27:47.345086','2020-04-26 05:33:49.092508'),(17,'ロリポップにSSL入れたらJavaScriptが動かなくなった話','# 初めに\n前のバイト先の知り合いからホームページ作成の仕事をもらいました。\nそれでサイトをつくりそれをロリポップを使って公開したのですが「SSLを導入してない!!」と怒られたので導入しました。\n\n# なぜかJavaScriptが動かなくなった\nまずSSLを導入しそのあとhttpにアクセスされたらhttpsにリダイレクトするようにしました。\n\nこれで終わり…と思ったのですがなぜがJavaScriptが動いてない。\n\nコンソールを見てみると酷いことになってました。\n\n![無題.png](https://qiita-image-store.s3.amazonaws.com/0/207921/eef9f899-5a62-86f5-3c3d-abe764ccfdf9.png)\n\n\n# httpsを使っているサイトからhttpにアクセス出来ない\nエラーを見たところjqueryを使うのにhttp://code.jquery.comにアクセスしていてそれがこれがいけないっぽい。\n\nとりあえずhttps://code.jquery.comに変更したらうまくうごきました。めでたしめでたし\n\n\n\n\n# ちなみに\n\nロリポップでhttpsにリダイレクトする設定をしたい場合はロリポップFTPを使って.htaccessというファイルを作ってパーミッションを604にして中身に\n\n\nRewriteEngine On\nRewriteCond %{HTTPS} off\nRewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]\n\n\nこれを書いたらいけると思います。\n\nまたhttpsにリダイレクトさせるわけではなくhttpにアクセスできなくしたい場合は\n\n.htaccessに\n\nSSLRequireSSL \n\nとかけばOKです。\n','2020-04-23 13:28:22.661841','2020-04-26 05:34:04.911570'),(18,'Bootstrapを使う際のRailsでのフラッシュの仕組み','# 初めに\n「Ruby on Rails tutorial」　や　「Ruby on Rails 5 の上手な使い方」にのっていたflashメッセージの表示するシステムを忘れないように書きます。\n\n# flashについて\n\n```ruby:flash.rb\nflash[:notice] = \"フラッシュです\"\nredirect_to path\n```\n\n見たいな感じで使います。\n\n# bootstrapのカラーについて\nbootstrapでは\nalert alert-***　\nみたいなクラスを設定することでいい感じでデザインしてくれます。\n![al.png](https://qiita-image-store.s3.amazonaws.com/0/207921/8be69064-476c-076c-4188-775630588dfa.png)\n\nこんな感じです\n\nいろんな色が用意されていて\n\nalert-success\nalert-danger\nalert-info\nalert-warning\n\nがあります。\n\nこの四種類のalertを別々に書いてやろうとすると…\n\n```erb:flash-all.rb\nif flash[:notice]\n  <div class=\"alert alert-notice\">\n    <%= flash[:notice] %>\n  </div>\nelsif flash[:info]\n  <div class=\"alert alert-info\">\n    <%= flash[:info] %>\n  </div>\nelsif flash[:danger]\n  <div class=\"alert alert-danger\">\n    <%= flash[:danger] %>\n  </div>\nelsif flash[:warning]\n  <div class=\"alert alert-danger\">\n    <%= flash[:danger] %>\n  </div>\nend\n\n```\n\nと結構長くなってしまいます。\n\n\n# application_helper.rbにヘルパーメソッドを書く\n\n\nこの長いのをどうにかするためにapplication_helper.rbに\n\n\n```ruby:application_helper.rb\n\ndef flash_message(message, klass)\n  content_tag(:div, class: \"alert alert-#{klass}\") do\n    concat content_tag(:button, \'x\', class: \'close\', data: {dismiss: \'alert\'})\n    concat raw(message)\n  end\nend\n\n\n```\n\n# application.html.erbでさっきのメソッドを使う\n\n```erb:application.html.erb\n\n<%= flash_message(flash[:success], :success) if flash[:success] %>\n<%= flash_message(flash[:error], :danger) if flash[:error] %>\n<%= flash_message(flash[:alert], :warning) if flash[:alert] %>\n<%= flash_message(flash[:notice], :info) if flash[:notice] %>\n\n```\n\n\nこうすれば解決です。\n\nちょっとすっきりしました。\n\n何か間違いがあればご指摘いただければと思います。\n\n\n参考文献\n「Ruby on Rails5 の上手な使い方」\nhttps://www.amazon.co.jp/Rails-5の上手な使い方-現場のエンジニアが教えるRailsアプリケーション開発の実践手法-Engineers-Books/dp/4798153095/ref=sr_1_4?ie=UTF8&qid=1544168971&sr=8-4&keywords=ruby+on+rails+5\n\n\n\n\n\n\n\n\n\n\n\n','2020-04-23 13:28:46.759818','2020-04-26 05:35:07.647284'),(19,'SQLの基礎をつらつら','# はじめに\n最近就職活動をしていて思うのは結構どの会社でもSQLの知識は重要であるということ。\n\nやはりある程度の企業になるとたくさんのデータをどのようにさばくのかが問題になるんだと思う。\n\nなので最近になって急いでSQLの勉強を始めてとりあえず入門書を読み終えたのでまとめてみる。\n\n# CREATE TABLE\n\nCREATE TABLE TableName　でテーブルが作成できる。\n下にデータを書いて情報を入れれる。\n\n\n``` sql:create_table\nCREATE TABLE Person\n(name VARCHAR(50) NOT NULL, age INTEGER NOT NULL);\n```\n\n# DROP TABLE\n\n```sql:drop_table\nDROP TABLE Person;\n```\n\nでテーブルを削除\n\n\n# ALTER TABLE\n\nテーブルのカラムを追加、削除する。\n\n```sql:alter_table\nALTER TABLE Person ADD COLUMN age INTEGER NOT NULL;\n=> age:integer を追加\n\nALTER TABLE Person DROP COLUMN age;\n=> age:integer を削除\n```\n\n# INSERT INTO\nテーブルにデータを追加する\n\n```sql:insert_into\nINSERT INTO Person VALUES (\'TARO\');\n=> \'TARO\'を追加\n```\n\n\n# SELECT\n\nデータを出力する\n\n```sql:select\n\nSELECT * FROM Person;\n=> Personのデータすべてを出力\n\nSELECT name FROM Person;\n=> Personのnameだけを出力\n\n```\n\n\n# DISTINCT\n重複を省く\n\n```sql:distinct\nSELECT DISTINCT category FROM Book;\n=> カテゴリを出力（重複なし）\n```\n\n# WHERE\n検索する\n\n```sql:where\nSELECT category, title FROM Book WHERE category = \'SF\'\n=> SFカテゴリの本を出力\n```\n\n# COUNT\n数える\n\n```sql:count\nSELECT COUNT(*) FROM Book;\n=> BOOKの数\n```\n\n# AVG SUM MAX MIN\nAVGは平均\nSUMは合計\nMINは最小値\nMAXは最大値\n\n```sql:asmm\nSELECT MAX(age), MIN(age), AVG(age), SUM(age) FROM Person;\n```\n\n# GROUP BY\nグループ化できる。\n\n```sql:groupby\nSELECT category, COUNT(*)\nFROM Book\nGROUP BY category;\n```\n\nカテゴリごとの本の数\n\n正直なんでCOUNT(category)じゃなくてCOUNT(*)なのかわからん\n\n# HAVING\nGROUP BYによって集められたデータをさらに条件を付けて表示する\n\n```sql:having\nSELECT category, COUNT(*)\nFROM Book\nGROUP BY category\nHAVING COUNT(*) >= 100;\n=> カウントが100を超えるものを表示\n```\n\n\n# UPDATE\n\nUPDATEで情報を更新できる\n\n```sql:update\nUPDATE Person SET name = \'UPDATE\' WHERE name = \'TARO\';\n```\n\n# CURRENT_DATE CURRENT_TIME\n現在の日付を取得\n\n```sql:current_date\nSELECT CURRENT_DATE;\n```\n\n現在の日時を取得\n\n```sql:current_time\nSELECT CURRENT_TIME;\n```\n\n\n# LIKE\n文字を曖昧検索できる\n\n%STRで後方一致\n%STR%で中間一致\nSTR%で前方一致\n\n\n# BETWEEN\n範囲検索できる\n\n```sql:between\nSELECT age FROM Person WHERE age BETWEEN 16 AND 19\n=> 16歳から19歳の人を表示\n```\n\n\n\n# EXISTS\nまだよくわからん\n\n# CASE\n値を評価してそのあとの処理を書く\n\n```sql:young-adult\nSELECT age \nCASE WHEN age < 18\nTHEN \'young : \' || name\nCASE WHEN age >= 18\nTHEN \'adult : \' || name\nELSE NULL END AS yord FROM Person;\n```\n\nこれで年齢が18歳未満の人にはyoung : nameが表示され18以上の人にはadult : nameが表示される\n\n\n# INNER JOIN\n\n\nテーブルを結合できる\n\n```sql:join\nSELECT University.name, Person.name, Person.age\nFROM Person INNER JOIN University ON Person.name = University.person_name;\n\n```\n\n\nこれで大学と大学にいる人の名前、年齢を表示\n\n\n\n# おわり\n\nとりあえず疲れました。\nSQLの超入門書を終えてみて何となくわかったようなわからないような気がします（笑）\n\n知識が圧倒的に足りていないのはわかっているので他の本も買って勉強したいと思います。\n\n書くの疲れた…\n','2020-04-23 13:29:46.371516','2020-04-26 05:34:47.359359'),(20,'Bcryptを使わないでパスワード暗号化したい','#初めに\nRailsでbcryptを使えばパスワードの暗号化やユーザー登録時のpassword_confirmationを簡単に実装できる。\n\n\nけど暗号化とかかっこいいので自分でもやってみたいということでbcryptを使わないでパスワードの暗号化をしたい。\n\n#とりあえず\n\n```\nrails new secure\nrails g model user name:string mail:string password:string\nrails g controller users index show edit new\n```\n\nして準備完了\n\n\n#普通に登録しログインできるようにする\n\n```ruby:users_controller.rb\n\nclass UsersController < ApplicationController\n  def index\n    @users = User.all\n  end\n\n  def show\n    @user = User.find params[:id]\n  end\n\n  def new\n    @user = User.new\n  end\n\n  def create\n    @user = User.create(user_params)\n    if @user.save\n      redirect_to users_path \n    else \n      render :new \n    end \n  end \n\n  def edit\n    @user = User.find params[:id]\n  end\n\n  def update\n    if User.update(user_params)\n      redirect_to users_path\n    else \n      render :edit\n    end \n  end \n\n  private\n\n  def user_params\n    params.require(:user).permit(:name,:mail,:password)\n  end \n\nend\n```\n\nあとはviewを適当に書けばOK\n\n#とりあえずcryptをつかってみる\n\n\n```ruby:crypt\n\nirb(main):001:0> str = \"hello world\"\n=> \"hello world\"\nirb(main):002:0> p str.crypt(\"asdf\")\n\"asodDSQaBIZi.\"\n=> \"asodDSQaBIZi.\"\n```\n\n\nといった感じでstr.crypt(salt)という構文で暗号化ができる。\n\nこのsaltの値をどうしようかと思うのですがとりあえず\"secretkey\"ってことにしときます。\n\nusers_helper.rbに\n\n```ruby:users_helper.rb\nmodule UsersHelper\n\n    def secure_pass(password)\n        secure_password = password.crypt(\"secretkey\")\n        return secure_password\n    end\n    \nend\n```\n\nこう書いて\n\nusers_controller.rbのcreateを\n\n```ruby:users_controller.rb\n  def create\n    password = user_params[:password]\n    @user = User.create(user_params.merge(password: secure_pass(password)))\n    if @user.save\n      redirect_to users_path \n    else \n      render :new \n    end \n  end\n```\n\n\nみたいにすれば登録されるパスワードは暗号化されてる:sunny:\n\n\n次にログイン機能で\n\nとりあえずsessions_controllerを作って\n\n```ruby:sessions_controller.rb\nclass SessionsController < ApplicationController\n  include UsersHelper\n\n  def new\n  end\n\n  def create \n    user = User.find_by(mail: params[:mail])\n    if user.password == secure_pass(params[:password])\n      session[:user_id] = user.id \n      redirect_to users_path\n    else \n      render :new\n    end \n  end\n\nend\n```\n\nこんな感じにした\n\nこれでログインできるし登録されるパスワードの値はse64GVO8lvmmUみたいな感じで暗号化されてます。\n\n\nあとはsaltの部分、今回はsecretkeyとしているところをどうしたらいいか\n\n\n#追記\n\nsecretkeyをconfig/credentials.yml.encに保存しようとしたがうまくいかなくて困ってましたがWSLを使えばできるとアドバイスをもらいまして...\n\nWSLを使って設定できるようになりました。(環境変数PATHが変なことなってて結構つまづいた…)\n\n\n\nということでwindowsにインストールしたubuntu上で\n\n```\nEDITOR=\"vi\" rails credentials:edit\n```\n\nを行ってそこに\n\n```\nsalt:\n  salt_key: secretkey\n```\n\nみたいな感じで設定した\n\nこのsalt_keyの使い方は\n\n```\nRails.application.credentials.salt[:salt_key]\n\n```\n\n\nみたいな感じで呼び出すことができます。\n\n\nこれを使ってusers_helper.rbに\n\n```ruby:users_helper.rb\nmodule UsersHelper\n\n    def secure_pass(password)\n        secure_password = password.crypt(Rails.application.credentials.salt[:salt_key])\n        return secure_password\n    end\n    \nend\n```\n\nこんな感じで書いて使うことができます:sunny:\n\n\n教えてくださった方ありがとうございました。\n\n\n\n#ちなみに\n\nBcryptを使うとgem install bcryptして\nmodels/user.rbに\n\n```ruby:user.rb\nclass User < ApplicationRecord\n    has_secure_password\nend\n```\n\nとかけばおわりとすごく簡単だしpassword_confirmationも実装してくれる\n\n\n\n\n\n\n\n\n\n\n','2020-04-23 13:30:09.541463','2020-04-23 13:30:09.541463'),(21,'簡単なデザイン実装gemを作る','# 初めに\nruby on railsでbootstrapを使ってデザインを整えることがある\n\nそのさいいつも適当にコピペして作っていたのでgemで最初に簡単なbootstrapデザインを実装出来たらよいのではないかということで作ってみる\n\n#ちなみに\n今回はとりあえず動けばよいということで機能は後々追加していくことにする\n\n\n# gemパッケージ作成\n\nとりあえずgemパッケージを作成するには\n\n```ruby:pach.rb\ngem install bundler\nbundle gem gemname -b\n```\n\nでとりあえずファイルが作られる\n\n\n# gemspec編集\n\nこのあとgemspecを編集する\n\n最初はこんな感じになっている\n\n```ruby:gemspec.rb\n\nlib = File.expand_path(\"../lib\", __FILE__)\n$LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)\nrequire \"gemname/version\"\n\nGem::Specification.new do |spec|\n  spec.name          = \"gemname\"\n  spec.version       = Gemname::VERSION\n  spec.authors       = [\"sibakenY\"]\n  spec.email         = [\"sibakoro.919@gmail.com\"]\n\n  spec.summary       = %q{TODO: Write a short summary, because RubyGems requires one.}\n  spec.description   = %q{TODO: Write a longer description or delete this line.}\n  spec.homepage      = \"TODO: Put your gem\'s website or public repo URL here.\"\n\n  # Prevent pushing this gem to RubyGems.org. To allow pushes either set the \'allowed_push_host\'\n  # to allow pushing to a single host or delete this section to allow pushing to any host.\n  if spec.respond_to?(:metadata)\n    spec.metadata[\"allowed_push_host\"] = \"TODO: Set to \'http://mygemserver.com\'\"\n\n    spec.metadata[\"homepage_uri\"] = spec.homepage\n    spec.metadata[\"source_code_uri\"] = \"TODO: Put your gem\'s public repo URL here.\"\n    spec.metadata[\"changelog_uri\"] = \"TODO: Put your gem\'s CHANGELOG.md URL here.\"\n  else\n    raise \"RubyGems 2.0 or newer is required to protect against \" \\\n      \"public gem pushes.\"\n  end\n\n  # Specify which files should be added to the gem when it is released.\n  # The `git ls-files -z` loads the files in the RubyGem that have been added into git.\n  spec.files         = Dir.chdir(File.expand_path(\'..\', __FILE__)) do\n    `git ls-files -z`.split(\"\\x0\").reject { |f| f.match(%r{^(test|spec|features)/}) }\n  end\n  spec.bindir        = \"exe\"\n  spec.executables   = spec.files.grep(%r{^exe/}) { |f| File.basename(f) }\n  spec.require_paths = [\"lib\"]\n\n  spec.add_development_dependency \"bundler\", \"~> 1.17\"\n  spec.add_development_dependency \"rake\", \"~> 10.0\"\nend\n```\n\n\nこれのTODOって書いてあるところは編集しておかないとエラーが出てしまう。\n\n\nとりあえず適当に編集してそのあとlibのなかにある***.rbってファイルにいろいろ書く\n\n\nとりあえず今回はapp/views/layoutsのapplication.html.erbを編集してbootstrapでそこそこきれいに見えるようheaderとfooterを追加して<%= yield %>のところを.containerでくくりたいと思う。\n\n\n完成したコードがこんな感じ\n\n```ruby:b_format.rb\nrequire \"b_format/version\"\nrequire \'boot_format_erb.rb\'\n\nmodule BFormat\n  class Error < StandardError; end\n\n\n  def self.bformat\n    @directory_all = []\n    Dir.chdir \'app/views\' do\n        @directory_all << Dir.glob(\"*\")\n    end \n    @directory_all.flatten!\n    @directory_all.each do |name|\n        if name == \"layouts\"\n            Dir.chdir \'app/views/layouts\'\n            File.open \'_header.html.erb\', \"w\" do |file|\n                file.write APPLICATION_HTML_BOOT_HEADER\n            end \n            File.open \'_footer.html.erb\', \"w\" do |file|\n                file.write APPLICATION_HTML_BOOT_FOOTER\n            end \n            File.open \'application.html.erb\', \"r\" do |file|\n                @data = file.read\n                @data.gsub!(\"<%= yield %>\", APPLICATION_HTML_BOOT_BODY)  \n            end \n            File.open \'application.html.erb\', \"w\" do |file|\n                file.write @data \n            end \n        end \n    end \n  end \n\n\n\nend\n```\n\n@directory_allはviewsの中にあるディレクトリを入れるもので後々の機能としてlayouts以外のものにもいろいろ手を加えるようにしたいから作った。\n今回は用なし…\n\n```ruby\nDir.chdir \'app/views/layouts\'\n```\n\nで現在のディレクトリをlayoutsにして、そこから\n\n```ruby\nFile.open \'_header.html.erb\', \"w\" do |file|\n    file.write APPLICATION_HTML_BOOT_HEADER\nend \nFile.open \'_footer.html.erb\', \"w\" do |file|\n    file.write APPLICATION_HTML_BOOT_FOOTER\nend \nFile.open \'application.html.erb\', \"r\" do |file|\n    @data = file.read\n    @data.gsub!(\"<%= yield %>\", APPLICATION_HTML_BOOT_BODY)  \nend \nFile.open \'application.html.erb\', \"w\" do |file|\n    file.write @data \nend \n```\n\n\nこれでファイルを開いてAPPLICATION_HTML_BOOT_HEADERとかをファイルに書き込んでいます。\n\nパーシャルを使うことにしたので\n\n_header.html.erb と _footer.html.erbというファイルを作ってそこにテンプレートを書き込む感じ\n\napplication.html.erbに関しては<%= yield %>と書かれてい場所を書き換えて保存しています。\n\n\nAPPLICATION_HTML_BOOT_HEADER,FOOTER,BODYのそれぞれのコードはboot_format_erb.rbという別のファイルに保存してそれを\n\n\n```ruby\n\nrequire \'boot_format_erb.rb\'\n\n```\n\n\nとして読み込んでいます\n\n\nboot_format_erb.rbはこんな感じ\n\n```ruby:boot_format_erb.rb\nAPPLICATION_HTML_BOOT_BODY = <<EOS\n<%= render partial: \'_header.html.erb\' %>\n<% if flash[:notice] %>\n  <div class=\"alert alert-success\">\n    <%= flash[:notice] %>\n  </div>\n<% end %>\n<div class=\"container min-height\">\n  <%= yield %>\n</div>\n<%= render partial: \"_footer.html.erb\" %>\nEOS\n\nAPPLICATION_HTML_BOOT_HEADER = <<EOS\n<nav class=\"navbar navbar-default navbar-static-top\">\n  <div class=\"container\">\n    <div class=\"navbar-header\">\n      <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n        <span class=\"sr-only\">Toggle navigation</span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n        <span class=\"icon-bar\"></span>\n      </button>\n      <a class=\"navbar-brand\" href=\"#\">Your Site Title !</a>\n    </div>\n    <div id=\"navbar\" class=\"navbar-collapse collapse\">\n      <ul class=\"nav navbar-nav\">\n        <li><a href=\"#\">Home</a></li>\n        <li><a href=\"#\">Contact</a></li>\n      </ul>\n      <ul class=\"nav navbar-nav navbar-right\">\n        <% unless session[:user_id] %>\n          <li><a href=\"#\">Log in</a></li>\n          <li><a href=\"#\">Create Account</a></li>\n        <% else %>\n          <li><a href=\"#\">MyPage</a></li>\n          <li><%= link_to \"Logout\", \"#\"%></li>\n        <% end %>\n      </ul>\n    </div><!--/.nav-collapse -->\n  </div>\n</nav>\nEOS\n\nAPPLICATION_HTML_BOOT_FOOTER = <<EOS\n<footer class=\"footer\">\n  <div class=\"container\">\n    <p class=\"text-muted\">Your Site Title</p>\n  </div>\n</footer>\nEOS\n```\n\n\n\n# gemをリリース\n\ngemをリリースするには\n\n\n```ruby\nrake release\n```\n\nとコマンドを打てばよいのですがその前にすることがあります。\n\n\nまず\nhttps://rubygems.org/\nここにアクセスしてアカウントを作ります。\n\nそのあとログインしマイページ的なところに書いてあるEdit profileをクリックします。\n\n下に\n\n```\ncurl -u sibakenY https://rubygems.org/api/v1/api_key.yaml > ~/.gem/credentials; chmod 0600 ~/.gem/credentials\n```\n\nこんな感じのコマンドが出ます。\n\nsibakenYはアカウント名です。\n\n#windowsの場合うまくいかない\n\n\nwindowsの場合さっきのコマンドがうまくできません。（少なくとも自分の場合は…）\n\n\nなので今回はこのコマンドだけはWSLを使ってubuntuからコマンドを打ちました。\n\n\n#rake release \n\nrake releaseするときにgit commitをしていないと\n\n\n```\n\nrake aborted!\nThere are files that need to be committed first.\n```\n\nこんな感じで怒られると思うのでcommitしてからrake releaseする\n\n\n#最後に\n\nあとはgem install gemnameでインストールできる。\n\n\nだけど問題点があってどうやってコマンドでメソッドを実行させるのかわからない…\n\n\nとりあえず動作確認に\n\n```ruby:gem.rb\nrequire \'b_format\'\n\nBFormat.bformat \n```\n\nというファイルをルートディレクトリに作ってこれを実行する感じにして動作確認をしましたがやはりコマンドで実行したりしたい。\n\n# thor\n\nrubyでコマンドラインを作るならthorってライブラリを使うらしいけど軽く調べた程度じゃよくわからなかったので今回はこれで終わり。\n\nまた今度調べて実装していきたい\n\n\n\n\n\n','2020-04-23 13:30:34.281203','2020-04-26 05:35:31.713627'),(22,'RailsのAjaxの苦手意識を消したい','# 初めに\nRailsのAjaxやら非同期やらが難しそうでなかなか手が出せずにいたけどそろそろ勉強してみる\n\n\n# とりあえず投稿文字の反映をさせる\n\n```ruby\nrails g controller words index \n```\n\nでとりあえずコントローラーをつくる\n\nindexに\n\n```ruby:index.html.erb\n<h1 id=\"word\"></h1>\n<%= form_with url: \'/words/post\' do |f| %>\n    <%= f.text_field :word %>\n    <%= f.submit %>\n<% end %>\n```\n\nと書く。\n\nform_withはデフォルトで非同期通信を行ってくれるらしいのでこのままで大丈夫。\n\nurlをアクション名で指定したかったがうまくできなかったので/words/postを書いている。\n\nそのあとwords_controller.rbに\n\n```ruby:words_controller.rb\nclass WordsController < ApplicationController\n  \n  def index\n  end\n\n  def post\n    @word = params[:word]\n  end \n  \nend\n```\n\n\nと書く\n\npostにparams[:word]が送られてそれを@wordに入れている。\n\nこの時にviewsに書いてあるpost.js.erbが実行されるらしい。\n\nということで@wordを表示するためのコードをpost.js.erbに書く\n\n\n```javascript:post.js.erb\n$(\'#word\').html(\"<%= @word %>\");\n```\n\n\nよくわからないがidがwordとなっているものの中身を<%= @word %>にするというコード\n\nこれで実行すると入力した文字が画面に表示されることになる。\n\n\n# 検索結果の表示\n\n\nつぎにAjaxでの検索結果の表示を実装したいと思う。\n\n\nとりあえず\n\n```\nrails g model user name:string age:integer\nrails g controller users \n```\n\nをしてモデルとコントローラーを作る。\n\n\n検索するためにデモのデータが必要になるから\n\nGemfileに\n\n```\ngem \'faker\'\n```\n\nしてbundle install\n\nそのあと\n\ndb/seedに\n\n```ruby:db/seeds.rb\n\n100.times do \n    user = User.new(name: Faker::Name.first_name, age: rand(100))\n    user.save \n    if user.save\n        puts \"#{user.name}を作成\"\n    end \nend \n```\n\nとすると100件のサンプルデータが作成できる。\n\n\nコントローラーに検索結果を表示するためのindexを検索する際のアクションsearchを設定する\n\n```ruby:users_controller.rb\nclass UsersController < ApplicationController\n\n    def index \n    end \n\n    def search\n        @user = User.where \'name like ?\', \'%\' + params[:name] + \'%\'\n        @user = @user.to_json.html_safe\n    end \n    \nend\n```\n\nsearchは@user に検索結果を入れてそのあとjsonの型式にしている。\nなんでこれが必要かはよくわからないけど必要なよう。\nhtml_safeはHTML形式のコードをそのまま出力するために必要。\n\n\n\nさっきと同じように非同期でsearchアクションを行うとsearch.js.erbが実行されるので検索結果を表示するコードをsearch.js.erbに書きます。\n\n```javascript:search.js.erb\nvar user = <%= @user %>\nvar result = \'\'\nuser.forEach(function(e){\n    result += \'<li>\' + e.name + \':  \' + e.age + \'</li>\'\n});\n$(\'#result\').html(result);\n```\n\nuser に　@user　を入れてそれをforEachで繰り返し処理しています。\nresultに<li>taro 18</li>みたいな感じで値を入れていきます。\n\n\nindex.html.erbは\n\n```ruby:index.html.erb\n<%= form_with url: \'/users/search\' do |f| %>\n    <%= f.text_field :name %>\n    <%= f.submit %>\n<% end %>\n\n<table id=\"result\"></table>\n```\n\nこんな感じです。\n\n検索結果がvar resultに入れられて$(\'#result\').html(result)でidがresultのところに検索結果が入っているresultを入れるという感じ。\n\n\n# 最後に\n\nまだほんとに基本中の基本しかわからないのでこれから知識を増やしていきたい。\n何か間違っているところがあればご指摘いただければと思います。\n\n\n\n\n','2020-04-23 13:30:55.438557','2020-04-26 05:35:51.736999'),(23,'Railsのルーティングについて整理','# 初めに\nRailsのルーティングについて曖昧でなんとなくやっていたので知識を整理する\n\n# resourceとresources\n\nresourceとresourcesはどちらも自動で基本的に使うルーティングを設定してくれます。\n\n例えば\n\nresources :cats　とすれば\n\n\n```\n                     cats GET    /cats(.:format)                                cats#index\n                          POST   /cats(.:format)                                cats#create\n                  new_cat GET    /cats/new(.:format)                            cats#new\n                 edit_cat GET    /cats/:id/edit(.:format)                       cats#edit\n                      cat GET    /cats/:id(.:format)                            cats#show\n                          PATCH  /cats/:id(.:format)                            cats#update\n                          PUT    /cats/:id(.:format)                            cats#update\n                          DELETE /cats/:id(.:format)                            cats#destroy\n\n\n```\n\n\nと設定してくれる。\n\n基本的に複数あるものに対してのルーティングに使われる\n\n\n逆にresourceは\n\n```\n                 new_cats GET    /cats/new(.:format)                          cats#new\n                edit_cats GET    /cats/edit(.:format)                         cats#edit\n                     cats GET    /cats(.:format)                              cats#show\n                          PATCH  /cats(.:format)                              cats#update\n                          PUT    /cats(.:format)                              cats#update\n                          DELETE /cats(.:format)                              cats#destroy\n                          POST   /cats(.:format)                              cats#create\n\n\n```\n\n\nという感じで複数無いことが前提になっているのでidを指定することがないルーティングになっている。\n\n\nちなみにresourcesは\n\n```\nresources :users, :posts, :groups\n```\n\nみたいに設定できるっぽい\n\n\n\n#resourcesの制限\n\n~~resourcesでつかうpathに制限を付けれて~~\nresourcesで使うアクションに制限を付けれる。\n同じpathに複数のpathが割り当てられているのでpathに制限をかけているわけではない。\n\n\n\n```\nresources :cats, only: [:index]\nresources :cats, except: [:index]\n```\n\nこんな感じに設定する\nonlyは指定したのだけexceptはそれ以外\n\n\n\n# ヘルパーメソッドについて\n\n~~ヘルパーメソッドはcats_path とか new_cat_pathみたいな感じでルーティングを指定できるもののこと~~\n\n\nヘルパーメソッドはcats_pathで/catsやcat_pathで/cats/:idといったパス文字列を生成するもの\n\nlink_to や redirect_toなどにurlを直接書かないほうがなんか良いらしいのでこのようにヘルパーメソッドを使ったほうが良い。\n\nちなみにresourcesに対してのヘルパーメソッドはそれぞれ\n\n```\nindex => cats_path\nshow => cat_path(@cat)\nnew => new_cat_path\ncreate => cats_path\nedit => edit_cat_path\nupdate => cat_path(@cat)\ndestroy => cat_path\n\n```\n\n\nindex,create,destoryはヘルパーメソッドが同じだメソッドがgetかpostかdeleteかで何を行うかを識別している。\n\n\n\n# AS\n\nルートには名前を付けることができて\n\n```\nget \'cats/index\', as: \'hello_world\'\n```\n\nこんな感じで設定すると\n\n\n~~hello_world_pathでcats/indexにアクセスしてくれる。~~\n\nhello_world_pathでcats/indexというパス文字列を作成してくれる。\n\n\n\n# namespace\n\n\nnamespaceを使うとurlの前に任意のpathを入れれる。\n説明が下手だけと見れもらえばわかる\n\n```\nnamespace :admin do\n  resources :cats\nend \n```\n\nとするとルートは\n\n```\n           new_admin_cats GET    /admin/cats/new(.:format)           admin/cats#new\n          edit_admin_cats GET    /admin/cats/edit(.:format)          admin/cats#edit\n               admin_cats GET    /admin/cats(.:format)               admin/cats#show\n                          PATCH  /admin/cats(.:format)               admin/cats#update\n                          PUT    /admin/cats(.:format)               admin/cats#update\n                          DELETE /admin/cats(.:format)               admin/cats#destroy\n                          POST   /admin/cats(.:format)               admin/cats#create\n\n```\n\nこんな感じにすべてadmin/が最初につく\n\nちなみにこれに対応するようなコントローラーを作りたい場合は\n\n```\nrails g controller Admin::cats\n```\n\nみたいにする\n\n\nまたルートの設定をcontrollerごとにまとめれるようで\n\n\n```\ncontroller :cats do \n    resources :cats \n  end \n\n  controller :dogs do \n    resources :dogs \n  end \n```\n\nこんな感じに書くこともできる\n\n\n# 終わりに\nscopeとnamespaceの違いがnamespaceはcontrollerと関係がある場合だかなんだかあるらしいがよくわからなかったので勉強しなおしてまた編集したいと思う。\n\nまた何か間違っているところがあればご指摘いただければと思います。\n\n\n\n\n\n','2020-04-23 13:31:13.556255','2020-04-26 05:37:11.150983'),(24,'ActionCableでリアルタイムDMを実装する','# 初めに\nAjaxとか勉強していたらActionCableという自分以外の人にもリアルタイムで投稿を表示することができる機能があることを知ったので勉強してみた。\n\n正直中身に関してはいまいちよくわかってないのでいろいろ間違っているかもしれませんがその時は教えてください…\n\n# とりあえず\n\nとりあえずrails newしてmodelとcontrollerをつくる\n\n```\nrails new action_dm\nrails g model user name:string\nrails g model room name:string\nrails g model comment body:text user_id:integer room_id:integer\n\nrails db:migrate\n\nrails g controller users index \nrails g controller rooms show\nrails g controller sessions\nrails g controller comments\n```\n\ngem \"jquery-rails\'\nbundle install\n\nしてそのあと\n\nassets/javascripts/application.jsに\n\n```\n//= require jquery\n```\nを\n//= require rails-ujs\nの上に書く\n\nこれでOK\nuserは名前だけ持っていてログインも名前で行う。\nroomはダイレクトメッセージを行うところですべてのユーザー間にroomが作られるようにする\nコメントを表示する際に名前も表示したいのでcommentにuser_idをいれた\n\n# モデルにアソシエーションを書いとく\n\n```ruby:comment.rb\nbelongs_to :room\n```\n\n```ruby:room.rb\nhas_many :comments\n```\n\n```ruby:user.rb\nhas_many :comments\n```\n\nuserとroomはたくさんのcommentを持つのでhas_manyした\ncommentはとりあえずルームに紐づけていればよい\n\n\n# User作成できるようにする\n\nuserを作成してログインできるようにcontrollerとviewsをいじっていく\n\nまずusers_controller\n\n```ruby:users_controller.rb\nclass UsersController < ApplicationController\n  before_action :set_current_user\n\n  def index\n    @user = User.new\n    @rooms = Room.all\n    @users = User.all\n  end\n\n  def create \n    @user = User.create(user_params)\n    if @user.save \n      redirect_to users_path \n    else\n      render :new\n    end \n  end \n\n  private \n\n  def user_params \n    params.require(:user).permit(:name)\n  end \nend\n```\n\n\nindexには@user,@rooms,@usersがあってuser作成やroomへのリンクuser一覧、ログインすべてindex.html.erbで行うため必要。\n\n\nbefore_actionのset_current_userはapplication_controller.rbに書いてある\n\napplication_controller.rbはこんな感じ\n\n```ruby:application_controller.rb\nclass ApplicationController < ActionController::Base\n\n    def set_current_user\n        if session[:user_id]\n            @current_user ||= User.find session[:user_id]\n        end \n    end \n\n    helper_method :set_current_user\nend\n```\n\n@current_userがあれば@current_userを代入してなければUser.find session[:user_id]で見つかったuserを@current_userに代入する。\n\n次にviewをつくる\n\nindex.html.erbはこんな感じ\n\n```erb:index.html.erb\n\n<p>ユーザー一覧</p>\n\n<% @users.each do |user| %>\n    <%= user.name %>\n<% end %>\n\n<p>現在のアカ</p>\n<%= @current_user&.name %>\n\n<p>アカ作成</p>\n<%= form_with model: @user, local: true do |f| %>\n    <%= f.text_field :name %>\n    <%= f.submit %>\n<% end %>\n\n<p>ログイン</p>\n<%= form_with url: sessions_new_path do |f| %>\n    <%= f.text_field :name %>\n    <%= f.submit %>\n<% end %>\n\n<p>ログアウト</p>\n<%= link_to \"ログアウト\", \"sessions/destroy\", method: :delete %>\n\n\n<p>DM</p>\n\n\n<% @users.each do |user| %>\n    <% unless user.id == session[:user_id] %>\n        <%= link_to \"#{user.name}\", \"/rooms/create/#{user.id}\", method: :post %>\n    <% end %>\n<% end %>\n```\n\n現在のアカに関しては@current_userがnilの時に@current_user.nameがエラーを出すので&.を使っています。これを使うと@current_userがnilでもエラーが出ない\n\ncssに\n\n```css\np {\n  border-bottom: 1px solid gray;\n}\n```\n\nと書いておく\n\nとりあえずこれでユーザーを作成しログインすることができるようになった\n\n\n# roomを作る\n\nこのroomがDMを行う場所\n\nまずrooms/show.html.erbを\n\n```erb:show.html.erb\n<h1>DM</h1>\n\n<h2>comments</h2>\n\n<div id=\"comments\">\n    <%= render @room.comments %>\n</div>\n\n<%= render \'comments/new\', room: @room %>\n```\n\nこの<%= render @room.comments %>に関していまいちよくわかってないが\n\n```erb:comment\n<% @room.comments.each do |comment| %>\n   <%= render \'comments/comment\', comment: comment %>\n<% end %>\n```\n\n\nの省略した書き方？だと思う\n\ncomments/_comment.html.erbは\n\n```erb:_comment.html.erb\n<p><%= username(comment.user_id) %>:<%= comment.body %> -- <%= comment.created_at.to_s(:long) %></p>\n```\n\nコメントを作成するための _new.html.erbは\n\n```erb:_new.html.erb\n<%= form_for([ @room, Comment.new ], remote: true) do |form| %>\n    Your comment:<br>\n    <%= form.text_field :body, size: \'50x20\' %>\n    <%= form.submit %>\n<% end %>\n```\n\n\n次にrooms_controller.rb\n\n```ruby:rooms_controller.rb\nclass RoomsController < ApplicationController\n\n  def show\n    protect_room(params[:id])\n    @room = Room.find params[:id]\n  end\n\n  def create\n    @r = find_room(params[:id])\n    if @r \n      redirect_to \"/rooms/#{@r.id}}\"\n    else \n      @room = Room.new(name: \"room@#{params[:id]}@#{session[:user_id]}\")\n      @room.save\n      redirect_to \"/rooms/#{@room.id}\"\n    end \n  end \n\n\n  private\n\n  def protect_room(room_id)\n    @room = Room.find room_id\n    id = @room.name.split(\"@\")\n    unless id.find { |i| i.to_i == session[:user_id].to_i }\n      redirect_to users_path \n    end \n  end \n\n  def find_room(id)\n    @rooma = Room.find_by(name: \"room@#{id}@#{session[:user_id]}\")\n    @roomb = Room.find_by(name: \"room@#{session[:user_id]}@#{id}\")\n    @r = @rooma || @roomb \n    return @r \n  end \n\nend\n```\n\nまずroomは最初から作成されているわけではなくメッセージを送るためroomに入ろうとしたときに作成されるようにした。\n\n例えばAとBがいた場合にroomがない状態でAがBにメッセージを送るためroomに入ろうとするとroomが\"room@(Bのid)@(Aのid)\"という形でroomが作られる。\n\n\n\nBがAにメッセージを送ろうとしたときにまたroomが作成されないようにするためにfind_roomという確認メソッドを作った\n\n```ruby\n  def find_room(id)\n    @rooma = Room.find_by(name: \"room@#{id}@#{session[:user_id]}\")\n    @roomb = Room.find_by(name: \"room@#{session[:user_id]}@#{id}\")\n    @r = @rooma || @roomb \n    return @r \n  end  \n```\n\nroomの名前\n\nというのを作った\nお互いの間にroomがない場合はnilを返す感じ\n\n\nroomに他人を入れないようにするために\nprotect_room(room_id)メソッドを作った\n\n\n```ruby\n  def protect_room(room_id)\n    @room = Room.find room_id\n    id = @room.name.split(\"@\")\n    unless id.find { |i| i.to_i == session[:user_id].to_i }\n      redirect_to users_path \n    end \n  end\n```\n\n名前にお互いのidが記入されているのでそれを取得してsession[:user_id:と比較している\n\n\nここまででuser作成とroom作成はおわり\n\n\n# comment作成\n\naction cableを使うのはこのcommentでcommentを作成したときに自動的にお互いに反映されるようにする\n\n\nまずchannelを作る\n\n```\nrails g channel comments\n```\n\nこのあと編集するのは二つのファイルで一つがサーバー用でもう一つがクライアントサイド用(多分..)\n\n/assets/javascript/comments.coffeeがクライアントサイド用で\n\nこんな感じにする\n\n```channels/comments.coffee\nApp.comments = App.cable.subscriptions.create \"CommentsChannel\",\n  connected: ->\n    # Called when the subscription is ready for use on the server\n\n  disconnected: ->\n    # Called when the subscription has been terminated by the server\n\n  received: (data) ->\n    $(\'#comments\').append data.comment\n    # Called when there\'s incoming data on the websocket for this channel\n\n```\n\n\nreceivedでデータを受け取ったときに$(\'#comments\').append data.commentが行われる。\n\n\nサーバーサイドのファイルが/channels/comments_channel.rbにあり\n\n```ruby:comments_channel.rb\nclass CommentsChannel < ApplicationCable::Channel\n  def self.broadcast(comment)\n    broadcast_to comment.room, comment: CommentsController.render(partial: \'comments/comment\', locals: { comment: comment })\n  end \n\n  def subscribed\n    Room.all.each do |room|\n      stream_for room \n    end \n  end\n\n  def unsubscribed\n    # Any cleanup needed when channel is unsubscribed\n  end\nend\n```\n\nsubscribedでaction cableを使うものを指定している。\nなので例えばstream_for Room.last　とするそれだけaction cableを使える\n\nstream_forとstream_fromの違いとしてはモデルに関連するストリームを作成する場合はstream_forでそうではない場合はstream_fromだそう\n\n\nstream_forの場合CommentsChannel.broadcast_to(@room,@comment)と書けばブロードキャスト？できるそう\n\n\n今回の場合はcomments#createでCommentsChannel.broadcast(comment)が行われている\n\n\nさいごにrouteはこんな感じ\n\n```routes.rb\nRails.application.routes.draw do\n  resources :users\n  resources :rooms, only: [:show] do \n    resources :comments \n  end \n  post \'sessions/new\'\n  delete \'sessions/destroy\'\n\n  post \"rooms/create/:id\", to: \"rooms#create\"\n  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html\nend\n```\n\nこれで\n![room.png](https://qiita-image-store.s3.amazonaws.com/0/207921/4b1684c0-80db-12dd-a6ab-59e9c29ab0c0.png)\n\n\n![room2.png](https://qiita-image-store.s3.amazonaws.com/0/207921/e43fd584-0991-dff6-4e3b-3f333c167873.png)\n\n\nみたいな感じで使える。\n\n\n# おわりに\n\n正直なんで動いでいるのか全く分らない..\n\nなにか間違っているところがあればご指摘いただけるとありがたいです。\n\n\n\nだれもいらないだろうけどGitHubも上げておきます。\nhttps://github.com/Sibakeny/action_dm\n\n\n# 参考文献\n\nRails Tour\nhttps://www.youtube.com/watch?v=OaDhY_y8WTo&t=1089s\n\nRailsGuides\nhttps://railsguides.jp/action_cable_overview.html\n\n\n\n\n\n\n\n\n\n\n\n\n\n','2020-04-23 13:31:50.420306','2020-04-26 05:37:43.258108'),(25,'Railsのactive_storageとmini_magick使ってみる','# 初めに\nActiveStorageという機能があってすごく便利だったのでやり方をまとめる\n\n#active_storage:install\nactive_storageを使うにはコンソールで\n\n```\nrails active_storage:install\n```\n\nを行う。\nそうすると必要なファイルが作られるのでrails db:migrateする\n\n# 保存、表示\n\nモデルファイルに\n\n```\nhas_one_attached :image\n```\n\nと書くか、もしくは\n\n```\nhas_many_attached :images\n```\n\nと書く\n\nhas_one_attachedはそのモデルに一つの画像を紐づける場合に使ってhas_many_attachedは複数の画像を紐づけるときに使う。\n\nもちろんhas_many_attached :imagesとかいたらimagesは配列としてわたるので\n\n表示する際に\n\n```erb\n<%= image_tag(@post.images) %>\n```\n\nと書くとうまくいかないので\n\n```erb\n<% images.count.times do |i| %>\n  <%= image_tag(@post.images[i]) %>\n<% end %>\n```\n\nみたいにする。\n\nhas_one_attached :image　の場合は一つしか画像を紐づけていないので\n\n```erb\n<%= image_tag(@post.image) %>\n```\n\nで画像を表示できる。\n\n\n# 画像投稿\n\n画像を投稿する際には\n\nhas_one_attached :image　の場合は\n\n投稿フォームに(postモデルに紐づけている場合)\n\n```erb\n<%= form_with(model: post, local: true) do |f| %>\n  \n  #省略\n\n  <%= f.label :image %>\n  <%= f.file_field :image %>\n\n  <%= f.submit %>\n<% end %>\n```\n\nでOK\n\nコントローラーには\n\n```ruby\ndef create\n  @post = Post.create(post_params)\nend\n\nprivate\n\ndef post_params\n  params.require(:post).permit(:image,:何か,:何か)\nend \n```\n\n\nて感じで書いておけば大丈夫\n\n\nhas_many_attached :images　の場合は\n\nフォームの\n\n```erb\n<%= f.file_field :image %>\n```\n\nのところを\n\n```erb\n<%= f.file_field :images, multiple: true %>\n```\n\n書けばOK\n\nコントローラーには\n\n```ruby\ndef create\n  @post = Post.create(post_params)\nend\n\nprivate\n\ndef post_params\n  params.require(:post).permit(images: [],:何か,:何か)\nend \n\n```\n\nみたいに書く\n\n \n# mini_magick\n\nmini_magickを使えば画像にいろいろできる（語彙力....）\n\n\nとりあえずGemfileに\n\n```\ngem \'mini_magick\', \'~> 4.8\'\n```\n\nを追加する。　おそらくコメントアウトされてあるのでそれを使う\n\n\nこのmini_magickを使う場合image_magickを使う必要がある。\n\nこのimage_magickだがwindows環境でうまく使えなかった(自分だけかもしれないが....)\n\nだがWSLでubuntuを使ってやってみたところうまくいった。\n\nubuntuでimage_magickをインストールするには\n\n```\nsudo apt-get install imagemagick\n```\n\nと書けばいける\n\n\nmini_magickの使い方だが画像に対して\n\n```\nimage.resize \"100x100\"\n=>リサイズ\nimage.path \n=> 画像の名前表示\n```\n\nみたいな感じ\n\n詳しくは\nhttps://github.com/minimagick/minimagick\n\n\n画像を表示する際にその画像をリサイズしたい場合は\n\n```ruby:post.rb\n\ndef thumbnail\n  return self.image.variant(resize: \'300x300\').processed\nend\n\n```\n\nとかいてview側で\n\n```erb\n<%= image_tag(@post.thumbnail) %>\n```\n\nと書いてやるようです。\n\n\n#active_storageのvalidation\n\nアクティブストレージで保存する画像に対してバリデーションをするには\n\nmodels/post.rbに\n\n```ruby\nvalidate :image_type\n\ndef image_type\n  if image.attached? && image.content_type.in?(%(\"image/jpeg image/png\"))\n    errors.add(:image, \'error message\')\n  elsif !image.attached?\n    errors.add(:image, \'error message\')\n  end\nend \n\n```\n\nみたいにやるそうです。\n\n\n# 参考にしたサイト\n\nDean Active Storage For Multiple Images | Validate & Resize | Ruby on Rails 5.2\nhttps://www.youtube.com/watch?v=A23zCePXe74&t=617s\n\n\n\n\n\n\n\n','2020-04-23 13:32:11.996325','2020-04-26 05:38:06.649238'),(26,'RailsのReferencesとindexについて','# 初めに\n\nRuby on Railsを勉強していてよくrails g model post user:referencesみたいなのを見かける。\n\nでもいまいちreferencesがなんなのかよくわからないので調べで見みた。\n\n# とりあえず\n\nとりあえずrails g model post body:text user:referencesを実行してみる。\n\nマイグレーションファイルはこんな感じ\n\n```ruby\nclass CreatePosts < ActiveRecord::Migration[5.2]\n  def change\n    create_table :posts do |t|\n      t.text :body\n      t.references :user, foreign_key: true\n\n      t.timestamps\n    end\n  end\nend\n```\n\nこのreferences が何なのか、foreign_keyは何なのかだが\n\nまずreferencesは今回の場合だとuser_id:integerを書くのと同じ。\n\nだがmodel/post.rbにbelongs_to:userというのを自動的に追加してくれる。\n\nforeign_key: trueについては外部キー制約とかいうらしくuser_idに何でも入れれるわけではなく実際にあるuser_idしか入れれないようにするものだそう....\n\nなのでuser:referencesと書いたらモデルにbelogns_to: userと追加してしかも外部キー制約も行うマイグレーションファイルを作ってくれる感じなのだそう。\n\n便利だね！\n\n\n# indexについて\n\nindexについてもよく見かけるがよくわかっていない。\n\nなんか検索を行う際にあったら少し高速になるぐらいに思っていた。\n\n\n調べてみたらこんな記事が出てきた。\n\nデータベースにindexを張る方法\nhttps://qiita.com/seiya1121/items/fb074d727c6f40a55f22\n\nこの記事の最初にindexが何たるかが書いてあってテーブルの中の特定のカラムを複製し検索を早めるためにあるんだとか。\n\nそしてむやみにindexを付ければよいわけではなく多いデータの良く検索されるカラムにindexを付与するのがよいそう\n\nちなみにindexを付与したい場合は\n\nマイグレーションファイルに\n\n```ruby\nadd_index :users, :name  \n```\n\nみたいに書けばいける。\n\nまたインデックスに一意制約を付けたい場合もある。\n\n例えばuserのemailは一意制約がついているべき。\n\nその時にindexに一意制約を付けるには\n\n\n```ruby\nadd_index :users, :email, unique: true\n```\n\nと書く\n\nまたemailの場合すべてを小文字にして登録するといったことが行われる。\n\nその際は\n\nbefore_save { self.email = email.downcase }\n\nと書けばOK\n\n# おわり\n\nrails の references と index　について理解が曖昧だったので調べながら書いてみました。\n\nなにか間違っているところがあればご指摘いただけるとありがたいです。\n\n\n\n\n\n\n\n\n\n','2020-04-23 13:32:28.463690','2020-04-26 05:38:19.315470'),(27,'RailsでのRSpecの設定やら書き方とかいろいろ','# 初めに\nRuby on Railsのテストにはmini testではなくrspecが用いられることが多いようで実際に会社で働こうと思ったらrpsecについて知っておかなくてはいけないと思い勉強したことの備忘録。\n\nいろいろ間違っているかも\n\n# 設定\n\nとりあえずgemfileに\n\n```\ngem \'rspec-rails\'\n```\n\nと書いてbundle installして\n\n```\nrails g rspec:install\n```\n\nを行えばrspecに関係するファイルが作られる。\n\nconfig/application.rbに\n\n```ruby \nconfig.generators do |g|\n  g.test_framework :rspec\nend\n```\n\nと書くとモデルやらコントローラーやらを作成したときにそれに関係するrspecのファイルを作ってくれる。\n\n逆にrspecのファイルを自動的に作ってほしくないときは\n\n```ruby\nconfig.generators do |g|\n  g.test_framework false\nend\n```\n\nとかいたらok\n\ncontrollerに関するrpsecのファイルは作成しなくてよいけど他のは作ってほしいみたいなときは\n\n```ruby\nconfig.generators do |g|\n  g.test_framework :rspec,\n  controller_specs: false\nend \n```\n\nみたいに設定できる\n\nrspecファイルを作りたい場合は\n\n```\nrails g rspec:model user\n```\n\nみたいな感じで書く。この場合はuser のmodelに対するrspecのファイルを作成する。\n\nほかにも\n\n```\nrails g rspec:job users\nrails g rspec:view users\nrails g rspec:helper users\nrails g rspec:feature users\n```\n\nみたいなかんじでできる。\n\n\n\nルートディレクトリに.rspecというファイルが作成されているがそこでrspecの出力に関する設定ができる。\n\nとりあえず\n\n```\n--require spec_helper\n--color\n--format d\n```\n\nこうしたらいい感じになる。\n\n\nrspecの実行に関しては\n\n```\nrspec\nもしくは\nbundle exec rspec\n```\n\nでいけるとおもう。\n\n\n#具体的になにをするか先に書く\n\nこんな感じでなにをするかさきに書く\n\n```ruby:user_spec.rb\nrequire \'rails_helper\'\n\nRSpec.describe User, type: :model do\n\n  it \"名前とメールアドレスとパスワードがあれば登録できる\"\n\n  it \"名前がなければ登録できない\"\n\n  it \"メールアドレスがなければ登録できない\"\n\n  it \"メールアドレスが重複していたら登録できない\"\n\n  it \"パスワードがなければ登録できない\"\n\n  it \"パスワードが暗号化されているか\"\n\n  \nend\n```\n\nこの状態で実行すると\n\n```\nUser\n  名前とメールアドレスとパスワードがあれば登録できる (PENDING: Not yet implemented)\n  名前がなければ登録できない (PENDING: Not yet implemented)\n  メールアドレスがなければ登録できない (PENDING: Not yet implemented)\n  メールアドレスが重複していたら登録できない (PENDING: Not yet implemented)\n  パスワードがなければ登録できない (PENDING: Not yet implemented)\n  パスワードが暗号化されているか (PENDING: Not yet implemented)\n\nPending: (Failures listed here are expected and do not affect your suite\'s status)\n\n  1) User 名前とメールアドレスとパスワードがあれば登録できる\n     # Not yet implemented\n     # ./spec/models/user_spec.rb:5\n\n  2) User 名前がなければ登録できない\n     # Not yet implemented\n     # ./spec/models/user_spec.rb:7\n\n  3) User メールアドレスがなければ登録できない\n     # Not yet implemented\n     # ./spec/models/user_spec.rb:9\n\n  4) User メールアドレスが重複していたら登録できない\n     # Not yet implemented\n     # ./spec/models/user_spec.rb:11\n\n  5) User パスワードがなければ登録できない\n     # Not yet implemented\n     # ./spec/models/user_spec.rb:13\n\n  6) User パスワードが暗号化されているか\n     # Not yet implemented\n     # ./spec/models/user_spec.rb:15\n\n\nFinished in 0.00456 seconds (files took 0.95882 seconds to load)\n6 examples, 0 failures, 6 pending\n```\n\nみたいに出る。\n\nこれので一つ一つテストを成功させていく。\n\n\n#データ作成をfactory_bot_railsで行う。\n\nテストに使うデータの作成にfactory_bot_railsというgemを使う\n\nとりあえず\n\n```\ngem \'factory_bot_rails\'\n```\n\nbundleする。\n\nspec/rails_helper.rbに\n\n```\nconfig.include FactoryBot::Syntax::Methods\n```\n\nと書いておく\n\nコマンドで\n\n```\nrails g factory_bot:model user\n```\n\nと書けば必要なファイルが作成される\n\n\nfactories/users.rbに\n\n```users.rb\nFactoryBot.define do \n    factory :user do \n        name {\"hiro\"}\n        sequence(:email) { |n| \"hiro#{n}@example.com\"}\n        password {\"password\"}\n    end \nend \n```\n\nこんな感じで書いておくと\n\n```\nuser = FactoryBot.create(:user)\n```\n\nでデータを作成してくれる\n\nなぜemail {\"hiro@example.com\"}ではないかというと\n\nemailは一意制約を付けているので\n\n```ruby \nuser1 = FactoryBot.create(:user)\nuser2 = FactoryBot.create(:user)\n```\n\nとするとエラーが出てしまう\n\n```ruby\nsequence(:email) { |n| \"hiro#{n}@example.com\"}\n```\n\nとかけばエラーが避けられる\n\nspec/models/user_spec.rbに具体的な処理を書く\n\n\n```ruby \nrequire \'rails_helper\'\n\nRSpec.describe User, type: :model do\n\n  it \"名前とメールアドレスとパスワードがあれば登録できる\" do \n    expect(FactoryBot.create(:user)).to be_valid\n  end \n\n  it \"名前がなければ登録できない\" do \n    expect(FactoryBot.build(:user, name: \"\")).to_not be_valid \n  end \n\n  it \"メールアドレスがなければ登録できない\" do \n    expect(FactoryBot.build(:user, email: \"\")).to_not be_valid \n  end \n\n  it \"メールアドレスが重複していたら登録できない\" do \n    user1 = FactoryBot.create(:user,name: \"taro\", email: \"taro@example.com\")\n    expect(FactoryBot.build(:user, name: \"ziro\", email: user1.email)).to_not be_valid\n  end \n\n  it \"パスワードがなければ登録できない\" do \n    expect(FactoryBot.build(:user, password: \"\")).to_not be_valid \n  end \n\n  it \"パスワードが暗号化されているか\" do \n    user = FactoryBot.create(:user)\n    expect(user.password_digest).to_not eq \"password\"\n  end \n\n  it \"password_confirmationとpasswordが異なる場合保存できない\" do \n    expect(FactoryBot.build(:user,password:\"password\",password_confirmation: \"passward\")).to_not be_valid \n  end \n\n\nend\n```\n\n\nとりあえずbundle exec rspecをすると....\n\n\n\n```\nUser\n  名前とメールアドレスとパスワードがあれば登録できる (FAILED - 1)\n  名前がなければ登録できない (FAILED - 2)\n  メールアドレスがなければ登録できない (FAILED - 3)\n  メールアドレスが重複していたら登録できない (FAILED - 4)\n  パスワードがなければ登録できない (FAILED - 5)\n  パスワードが暗号化されているか (FAILED - 6)\n\nFailures:\n\n  1) User 名前とメールアドレスとパスワードがあれば登録できる\n     Failure/Error: expect(FactoryBot.create(:user)).to be_valid\n\n     NoMethodError:\n       undefined method `password=\' for #<User:0x00007fffbd4d20f0>\n       Did you mean?  password_digest=\n     # ./spec/models/user_spec.rb:6:in `block (2 levels) in <top (required)>\'\n\n  2) User 名前がなければ登録できない\n     Failure/Error: expect(FactoryBot.create(:user, name: \"\")).to_not be_valid\n\n     NoMethodError:\n       undefined method `password=\' for #<User:0x00007fffbd5462c0>\n       Did you mean?  password_digest=\n     # ./spec/models/user_spec.rb:10:in `block (2 levels) in <top (required)>\'\n\n  3) User メールアドレスがなければ登録できない\n     Failure/Error: expect(FactoryBot.create(:user, email: \"\")).to_not be_valid\n\n     NoMethodError:\n       undefined method `password=\' for #<User:0x00007fffbd54d070>\n       Did you mean?  password_digest=\n     # ./spec/models/user_spec.rb:14:in `block (2 levels) in <top (required)>\'\n\n  4) User メールアドレスが重複していたら登録できない\n     Failure/Error: user1 = FactoryBot.create(:user,name: \"taro\", email: \"taro@example.com\")\n\n     NoMethodError:\n       undefined method `password=\' for #<User:0x00007fffbc254b08>\n       Did you mean?  password_digest=\n     # ./spec/models/user_spec.rb:18:in `block (2 levels) in <top (required)>\'\n\n  5) User パスワードがなければ登録できない\n     Failure/Error: expect(FactoryBot.create(:user, password: \"\")).to_not be_valid\n\n     NoMethodError:\n       undefined method `password=\' for #<User:0x00007fffbd56fa80>\n       Did you mean?  password_digest=\n     # ./spec/models/user_spec.rb:23:in `block (2 levels) in <top (required)>\'\n\n  6) User パスワードが暗号化されているか\n     Failure/Error: user = FactoryBot.create(:user)\n\n     NoMethodError:\n       undefined method `password=\' for #<User:0x00007fffbd57b6a0>\n       Did you mean?  password_digest=\n     # ./spec/models/user_spec.rb:27:in `block (2 levels) in <top (required)>\'\n\nFinished in 0.01216 seconds (files took 0.9921 seconds to load)\n6 examples, 6 failures\n\nFailed examples:\n\nrspec ./spec/models/user_spec.rb:5 # User 名前とメールアドレスとパスワードがあれば登録できる\nrspec ./spec/models/user_spec.rb:9 # User 名前がなければ登録できない\nrspec ./spec/models/user_spec.rb:13 # User メールアドレスがなければ登録できない\nrspec ./spec/models/user_spec.rb:17 # User メールアドレスが重複していたら登録できない\nrspec ./spec/models/user_spec.rb:22 # User パスワードがなければ登録できない\nrspec ./spec/models/user_spec.rb:26 # User パスワードが暗号化されているか\n\n```\n\n\nこんな感じでエラーがでる。\n\nモデルファイルを修正してエラーが出ないようにする\n\nmodels/user.rbに\n\n\n```\nclass User < ApplicationRecord\n    has_secure_password\n\n    validates :name, presence: true\n    validates :password, presence: true\n    validates :email, presence: true \n    validates :email, uniqueness: true\nend\n```\n\nこう書けばエラーが消えで全部緑で表示される:sunny:\n\n\n基本的にexpect()のところに検証したいものを入れて\n\nそのあとにbe_validであれば有効か無効かを検証したり\neqであれば等しいかどうかを検証する。\n\nexpect().toのところをto_notみたいにもできる\n\n\n# FactoryBot.create FactoryBot.buildの違い\n\nbuildはデータを実際に保存する必要がない場合や属性の検証のときに使う。\n今回の場合は全部buildで大丈夫\n\n# let\nletを使えば何回も同じコードを書かないですむ\n例えば\n\n```ruby\nlet(:user) { FactoryBot.build(:user) }\n```\n\nとすればそのあとは\nuserと書くだけで{ FactoryBot.build(:user) }が実行されてデータを作ってくれる。\n\n# let!\n\nlet!にするとその場でテストデータを作ってくれる。\nletの場合はそれが呼び出される時にコードを実行する\n\n# before\n\nbeforeはテストが実行される前に行われるもので基本的なデータをbeforeで作ったりどのテストでも行われているログイン処理とかをかいてテストを簡潔にできる。\n\n書き方は\n\n```\nbefore do\n  @user = User.new(name: \"test\", email: \"test@gmail.com\", password: \"password\")\n　@user.save\nend\n```\n\nみたいな感じ。\n\n\n個人的にモデル作成に関してはletを使えばいいかなと思う\nログイン処理とかに関してはbeforeを使うってかんじなのかな？わからないけど....\n\n# FeatureSpec と System Spec\n昔はFeatureSpecが使われてて今っぽいのがSystemSpecらしい\n\n具体的に何をするものかというと\n\n例えばユーザー登録画面を開いて入力欄に文字をいれて登録ボタンをおしてユーザー登録が成功したか\n\n\nみたいなのを検証するものがsystem specでそういったテストを統合テストとよぶ\n\nsystemspecを行おうまえにseleliumwebdriverやらchromedriverやらの設定が必要\n\nそれに関してはこちらを参考にしてください\n\nEC2 UbuntuでGoogle Chromeをヘッドレス実行してスクリーンショットを採取する手順\nhttps://qiita.com/shinsaka/items/37436e256c813d277d6d\n\n\n\nページにアクセスする場合は\n\n```\nvisit root_path\n```\n\nみたいに書いて\n\n入力は\n\n```\nfill_in \"Name\", with: \"Hiroto\"\nfill_in \"Email\", with: \"hiroto@gmail.com\"\n```\n\nみたいな感じ\n\nボタンクリックは\n\n```\nclick_button \"Create user\"\n```\n\n見たいな感じ\n\nたしか<%= f.label :*** %>のところに書いてある文字をfill_inで指定してwithで入力する文字を指定する感じ\n\nid=\"***\"で指定することもできる\n\n\n\n検証の仕方は\n\n```\nexpect(page).to have_content \"hello world\"\n```\n\nで訪れたページにhello worldという文字があるか検証できる\n\n\nユーザー登録ができているか確認する場合はこんな感じ\n\n\n```ruby:users_spec.rb\nrequire \'rails_helper\'\n\ndescribe \'ユーザー登録\', type: :system do \n\n    before do\n        driven_by :selenium_chrome_headless\n    end\n\n    it \"ユーザー登録ができるか\" do\n\n        expect {\n        visit new_user_url\n        fill_in \"Name\", with: \"yuki\"\n        fill_in \"Email\", with: \"yuki@gmail.com\"\n        fill_in \"Password\", with: \"password\"\n        fill_in \"Password confirmation\", with: \"password\"\n        click_button \"submit\"\n        expect(page).to have_content \"index\"\n        }.to change(User,:count).by(1)\n    end \n\n\nend \n```\n\nここで重要なのがexpect {}の中にexpect(page).to have_content \"index\"と書いている\n\nこれを書かないとclick_buttonが押された後処理が実行される前にchange(User,:count).by(1)を検証してしまうためテストが失敗する。\n\n大体こんな感じだと思う。\n\nfeature specを使ったときはitのところにscinarioと書いたりdatabase_cleanerをgem installしたりしたけどsystem specの場合はいらないみたい。\n\n\nなにか間違っているところがあればご指摘いただけるとありがたいです。\n\n\n\n\n\n\n\n\n\n\n\n\n','2020-04-23 13:32:44.791248','2020-04-26 05:38:47.740757'),(28,'Railsのフォームについて','# 初めに\n\nRailsのフォームについて忘備録としてまとめます。\n\n# form_with\n\nまえはform_tagとかform_forとかあったが今はform_withがスタンダードらしい\n\nform_withの場合モデルに関連するもの、関連しないものどちらも扱えるのでよい\n\n書き方はform_forとほとんど同じなはず\n\n# 基本的な形\n\n基本的な形はこんな感じ\n\n```erb \n<%= form_with @user do |f| %>\n  <%= f.label :name %>\n  <%= f.text_field :name %>\n  <%= f.label :age %>\n  <%= f.number_field :age %>\n  <%= f.submit %>\n<% end %>\n```\n\n# urlを指定\n\nurlを指定したい場合は\n\n```erb \n<%= form_with url: new_user_path do |f| %>\n```\n\nこうする。\n\n# ちなみに\n\nこんなこともできる\n\n```erb\n<%= form_with model: User.new do |f| %>\n```\n\nとか\n\n```erb \n<%= form_with model: User.first do |f| %>\n```\n\nこの場合はUser.firstをアップデートするときに使う\n\n\n# フォームをネストさせる\n\nフォームをネストさせたい場合\n\n例えばuserモデルとpostモデルがあるとして\n\nuser と postが一対多であるときは\n\nモデルファイルに\n\n```ruby:user.rb\nhas_many :posts\naccepts_nested_attributes_for :posts\n```\n\n```ruby:post.rb\nbelongs_to :user\n```\n\nとかいたら準備完了。\n\nフォームに\n\n```erb\n<%= form_with @user do |f| %>\n  <%= f.label :name %>\n  <%= f.text_field :name %>\n  <%= f.label :age %>\n  <%= f.number_field :age %>\n  <%= f.fields_for :posts do |m| %>\n    <%= m.label :body %>\n    <%= m.text_area :body %>\n  <% end %>\n  <%= f.submit %>\n<% end %>\n```\n\nみたいな感じで使える\n\n\n# form_withでのセレクトボタンやラジオボタン、チェックボックス\n\nまずチェックボックスについて\n\n\n```erb\n<%= f.check_box :admin %>\n```\n\nみたいな感じで行う\n\nこの場合:adminはboolean型でなければうまくいかない\n\n次にラジオボタン\n\n\n```erb\n<label><%= f.radio_button :feeling, \"fun\" %>fun</label>\n<label><%= f.radio_button :feeling, \"soso\" %>soso</label>\n<label><%= f.radio_button :feeling, \"not fun\" %>not fun</label>\n```\n\nみたいにできる。\n\n最後にセレクトボタン\n\n```erb\n<%= f.select :feeling, [[\"fun\",\"fun\"],[\"soso\",\"soso\"],[\"not fun\",\"not fun\"]] %>\n```\n\nこんな感じ\n\n#おまけ\n\n最近enum?についての記事を見た\n\n今まで使ったことなかったけどよさそうなので使ってみる。\n\n使い方は簡単で例えばpostモデルにsecret,frends_only,everyone_allowっていうstatusを作るとしたら（英語がよくわからんからそこは許して....）\n\npostにstatusというカラムをintegerで追加して\n\nmodels/post.rbに\n\n```ruby\nenum status: {secret: 0, frends_only: 1, all_people: 2}\n```\n\nと書いて終わり\n\n\nフォームに\n\n```erb\n<%= m.select :status, Post.statuses.keys.to_a, {} %>\n```\n\nと書いたらそれでセレクトボタンを作ってくれる\n\n値はpost.statusで数字ではなくsecretなどの文字を返してくれる。\n\n便利！\n\n多分二つのstatusならbooleanでいいけど三つ以上ならenumつかうとよい感じ:sunny:\n\n\nおわり。\n','2020-04-23 13:33:06.855108','2020-04-26 05:39:06.662710'),(29,'ERDPlusを使ってみる','# 始めに\n最近SQLの勉強を始めてます。\n\n正直なところSQLの楽しさがよくわからないですが必要なので勉強しなきゃですね…\n\nとりあえずER図というものがあるらしくそれをERDPlusというソフトで作ってみる\n\nERDPlusは無料だしインストールとかもいらないので良い:sunny:\n\n# とりあえず\n\nとりあえず\n\nhttps://erdplus.com\n\nここにアクセスしてアカウント作って右上のDiagramsを押したらER図の作成ページに移る。\n\nそこで+Newボタンを押してファイルを作成。\n\n下↓のボタンを押せば名前を編集したりできる。\n\n\n# 作るもの\n\n簡単なブログサイトのER図を作る。\n\nとりあえずテーブルはusers,posts,categoriesを使うこととする\n\n\n+Newを押したらER DiagramとかRelational Schemaとか出てくるがRelational Schemaを使う\n\n![erd.png](https://qiita-image-store.s3.amazonaws.com/0/207921/73ae5103-0f55-9639-5066-f8cf9cf08b2d.png)\n\n\nこんな感じになった。\n\n\nこれで個人的に戸惑ったのはpostsにuser_idとかを入れないこと\n\nconnectでつなぐと勝手に作ってくれるっポイ。\n\n# 出来たもの\n\n後で多対多のアソシエーションには中間テーブルが必要であることに気づきCategory_Post_Regという中間テーブルを作った\n\n出来たものがこれ\n\n![erd2.png](https://qiita-image-store.s3.amazonaws.com/0/207921/cefd50e4-425d-1f71-8b62-0decfb3685e6.png)\n\n\nこれだと一対多なのか一対一なのか多対多なのかわからないけどたぶんこれはsqlのデータの作成に使うためのもの？だから良いのかな？\n\n作ったものはExport SQLってのができて作成した図を元にSQLを書いてくれる\n\nそれがこれ\n\n```sql\n\nCREATE TABLE Users\n(\n  User_ID INT NOT NULL,\n  name VARCHAR(30) NOT NULL,\n  age INT NOT NULL,\n  sex VARCHAR(10) NOT NULL,\n  mail VARCHAR(100) NOT NULL,\n  address VARCHAR(100) NOT NULL,\n  PRIMARY KEY (User_ID),\n  UNIQUE (mail)\n);\n\nCREATE TABLE Posts\n(\n  Post_ID INT NOT NULL,\n  title VARCHAR(100) NOT NULL,\n  body VARCHAR(1000) NOT NULL,\n  User_ID INT NOT NULL,\n  PRIMARY KEY (Post_ID),\n  FOREIGN KEY (User_ID) REFERENCES Users(User_ID)\n);\n\nCREATE TABLE Categories\n(\n  Category_ID INT NOT NULL,\n  cname VARCHAR(100) NOT NULL,\n  PRIMARY KEY (Category_ID)\n);\n\nCREATE TABLE Category_Post_Reg\n(\n  RegID INT NOT NULL,\n  Category_ID INT NOT NULL,\n  Post_ID INT NOT NULL,\n  PRIMARY KEY (RegID),\n  FOREIGN KEY (Category_ID) REFERENCES Categories(Category_ID),\n  FOREIGN KEY (Post_ID) REFERENCES Posts(Post_ID)\n);\n```\n\n普通に書こうと思ったらかなり大変だけどこれならすぐ作れるしタイプミスもないから良い\n\n\nでも結局Railsの場合rails g modelでテーブルを作るからあんま関係ないかな\n\nアソシエーションに関して詳しく書きたい場合は+ NewでER Diagramを選択してER図を作る。\n\n#ER Diagram\n\nさっきのをER Diagramで作るとこんな感じになる\n\n![erd3.png](https://qiita-image-store.s3.amazonaws.com/0/207921/3a4ac0ee-ff9b-521a-b4a0-33d673dfc856.png)\n\n\n一対多なのか多対多なのかわかるようになった。\n\nこれだとExport SQLができないけどRailsの場合いらないからこっちを使ったほうが良いのかも\n\n\n# 終わりに\n\n基本的に英語で書かれているので英語が超苦手な自分としてはよくわからないところが多い。\n\nもっと機能あるだろうしなんかもっと設定できる感じだけどとりあえずはこれで良しとする:fist:\n\n\n\n\n','2020-04-23 13:33:24.967973','2020-04-26 05:39:19.861139'),(30,'Railsでwheneverを使って定期実行を実装してみる','# 初めに\nrailsで定期てきに何かを実行するというのを実装してみる。\n\n自分はWSLを使ってubuntuで行ったが少しつまづいたりしたので最初の設定とかについても書いていく。\n\n# まずcronを使えるようにする。\n\ncronはlinux上で定期実行を実現するために必要なもの（よくわかってない…）\n\nwslのubuntu上では最初はcronは起動していない状態だと思う。\n\nとりあえず今の状況を確認するには\n\n```\nservice cron status\n```\n\nで確認できる\n\ncronを起動したい場合は\n\n```\nsudo service cron start\n```\n\n止めたい場合は\n\n```\nsudo service cron stop\n```\n\nでOK\n\ncronが実際に動いているか確認するためにはログを見る\n\nログの場所は\n\n```\n/var/log/cron.log\n```\n\nだが最初はこのファイルがなくまたcronのログを記録してくれない。\n\nなので\n\n```\n/etc/rsyslog.d/50-default.conf\n```\n\nこのファイルを編集します\n\n```\nsudo nano /etc/rsyslog.d/50-default.conf\n```\n\nをして\n\n```\n＃cron.* /var/log/cron.log\n```\n\nとコメントアウトされているところの#を削除する。\n\nこれで最初の設定はOK\n\nログを出力したい場合は\n\n```\ntail /var/log/cron.log\n```\n\nでみれる。\n\nログに関していまいちわからないが 2>>となっているところは何かしらのエラーのログを書いてるとおもわれる\n\n\n#cronの使い方\n\n```\ncrontab -e\n```\n\nでcronの設定を行える\n\n具体的な設定方法については\n\n\nクーロン(cron)をさわってみるお\nhttps://qiita.com/katsukii/items/d5f90a6e4592d1414f99\n\nを参考に…\n\n\n# wheneverをつかう\n\nwheneverはrailsでcronを使って定期実行を行う際に使うgem\n\nとりあえず\n\n```\ngem \'whenever\'\n```\n\nbundle installをする\n\n\nそのあと\n\n```\nbundle exec wheneverize\n```\n\nこれで/config/schedule.rbというファイルが作成されるのでここに定期実行したいことを書いていく\n\n\n# schedule.rbのかきかた\n\nいまいちよくわかっていないが\n\nとりあえず\n\n```\nset :environment, \"development\"\nset :output, { :error => \"log/cron_error.log\" }\nset :path, \"appへのpath\"\n```\n\nをかいておく\n\nlog/cron_error.logについてはファイルの作成は自動では行ってくれないのでファイルは自分で作る必要がある\n\nappへのpathについては自分の作っているappのディレクトリでpwdと打てば出てくる\n\n\nそのあとに何時間ごとに何をするかを書いていく\n\n書き方は\n\n```\nevery 1.minutes do \nend \n=>一分ごとに行う\n\nevery 1.hours do \nend \n=> 一時間ごとに行う\n\nevery 1.day, :at => \'7:00\' do\nend\n=> 毎日朝の7時に行う\n```\n\nといった感じ\n\n1秒ごとは出来ないっぽい\n\n処理の書き方は\n\n```\nrunner \"railsでの処理\"\ncommand \"bashコマンドを行う\"\n```\n\nといった感じ\n\n基本的にrunnerを使うことになるのかな？\n\n# 毎分userをつくる\n\n例えばuserモデルがあったとして毎分userを作りたいとしたら\n\n```\nevery 1.minutes do \n  runner \'User.create(name: \"taro\")\nend\n```\n\nみたいにしたら毎分userが作れる。\n\n# 変更の反映\n\nschedule.rbを変更しただけでは変更は反映されないので\n\n```\nwhenever --update-crontab\n```\n\nを行って変更の反映を行う\n\n\n# wheneverでジョブの実行を行う\n\nwheneverでジョブの実行を行いたい場合は\n\nconfig/application.rbに\n\n```ruby \n    config.autoload_paths += Dir[\"#{config.root}/lib/**/\"]\n    config.eager_load_paths += Dir[\"#{config.root}/lib/**/\"]\n```\n\nこれを書く\n\nそしてlib以下に\nusertask.rbというファイルを作り\n\n```ruby:usertask.rb\nrequire \'faker\'\nrequire \"#{Rails.root}/app/models/user\"\n\nclass Tasks::Usertask\n  def self.create\n      User.create(name: Faker::Name.first_name)\n  end \nend\n```\n\nと書く\n\n\nschedule.rbに\n\n```ruby:schedule.rb\nevery 1.minutes do \n    runner \'Tasks::Usertask.create\'\nend \n```\n\nみたいに書けばランダムな名前のユーザーが毎分作られるようになる。\n\n\n#ちなみに\n\nいちおううまくいっているがlog/cron_error.logに\n\n```ruby\n/home/sibakeny/.rbenv/versions/2.4.2/lib/ruby/gems/2.4.0/gems/spring-2.0.2/lib/spring/application.rb:185: warning: Insecure world writable dir /home/sibakeny/.rbenv/versions in PATH, mode 040777\nRunning via Spring preloader in process 21328\n/home/sibakeny/.rbenv/versions/2.4.2/lib/ruby/gems/2.4.0/gems/spring-2.0.2/lib/spring/application.rb:185: warning: Insecure world writable dir /home/sibakeny/.rbenv/versions in PATH, mode 040777\nRunning via Spring preloader in process 21420\n/home/sibakeny/.rbenv/versions/2.4.2/lib/ruby/gems/2.4.0/gems/spring-2.0.2/lib/spring/application.rb:185: warning: Insecure world writable dir /home/sibakeny/.rbenv/versions in PATH, mode 040777\nRunning via Spring preloader in process 21512\n/home/sibakeny/.rbenv/versions/2.4.2/lib/ruby/gems/2.4.0/gems/spring-2.0.2/lib/spring/application.rb:185: warning: Insecure world writable dir /home/sibakeny/.rbenv/versions in PATH, mode 040777\nRunning via Spring preloader in process 21604\n/home/sibakeny/.rbenv/versions/2.4.2/lib/ruby/gems/2.4.0/gems/spring-2.0.2/lib/spring/application.rb:185: warning: Insecure world writable dir /home/sibakeny/.rbenv/versions in PATH, mode 040777\nRunning via Spring preloader in process 21736\n/home/sibakeny/.rbenv/versions/2.4.2/lib/ruby/gems/2.4.0/gems/spring-2.0.2/lib/spring/application.rb:185: warning: Insecure world writable dir /home/sibakeny/.rbenv/versions in PATH, mode 040777\nRunning via Spring preloader in process 21828\n/home/sibakeny/.rbenv/versions/2.4.2/lib/ruby/gems/2.4.0/gems/spring-2.0.2/lib/spring/application.rb:185: warning: Insecure world writable dir /home/sibakeny/.rbenv/versions in PATH, mode 040777\nRunning via Spring preloader in process 21920\n```\n\nみたいにエラーがすごいでる。\n\nなんか権限関係の警告みたい…\n\n# 終わり\n\nとりあえず定期実行は実装できるようになった。\n最初のcronの設定で少しつまづいたけどそれさえ乗り越えたらすごく簡単だった:sunny:\n\nおわり。\n\n# 参考文献\n\nWheneverを使ってRailsタスクを定期実行する\nhttp://marimomemo.hatenablog.jp/entry/2017/06/25/200415\n\n[ubuntu] cronのログが出力されない時の対処方法\nhttp://blue-bear.jp/kb/ubuntu-cron%E3%81%AE%E3%83%AD%E3%82%B0%E3%81%8C%E5%87%BA%E5%8A%9B%E3%81%95%E3%82%8C%E3%81%AA%E3%81%84%E6%99%82%E3%81%AE%E5%AF%BE%E5%87%A6%E6%96%B9%E6%B3%95/\n','2020-04-23 13:33:43.800888','2020-04-26 05:39:45.460649'),(31,'railsのapiを使ってみる','# はじめに\nrailsでapiを作るにはrails new appname --apiみたいにするのは知っていたけど具体的なapiの作り方がわからなかったから調べながら作ってみた。\n\n# 作るもの\nとりあえず作るものとしてはユーザーのデータを送ったり送られたデータをもとにユーザーを作成、編集するもの。\n\n\n# api用アプリとapiを使うアプリを作る\n\nまずapi用とそれを使うアプリを作る。\n\n```\nrails new api_user --api\nrails new get_api_data_user \n```\n\nみたいにつくる。\n\nまずapiから\n\n# api作成\n\nモデルとコントローラーを作る\n\n```ruby \nrails g model user name:string age:integer email:string password:string \nrails db:migrate\nrails g controller users index show create update\n```\n\nこれでok\n\nコントローラーに具体的な処理を書いていく\n\n\n基本的にapiの場合はjson形式で値をやり取りするっぽい？\n\nなのでviewsは使わず render json:\n\nみたいにjsonの値を出力していく\n\nそれでこんな感じ\n\n```ruby:users_controller.rb\nclass UsersController < ApplicationController\n  def index\n    @users = User.all \n    render json: @users \n  end\n\n  def show\n    @user = User.find params[:id]\n    render json: @user \n  end\n\n  def update\n    @user = User.find params[:id]\n    @user.update(user_params)\n  end\n\n  def create\n    @user = User.new(user_params)\n\n    @user.save\n  end\n\n  private \n\n  def user_params \n    params.require(:user).permit(:name,:age,:email,:password)\n  end \nend\n```\n\n最後にrender json:がついただけで普通:relaxed:\n\nroutesに\n\n```\nresources :users\n```\n\nとかいておわり。\n\n\n# apiを使う側のアプリを作成\n\napiにデータを送る場合にcurlというコマンドを使う\n\n```ruby\ncurl -X GET http://localhost:3000/users\n```\n\nと書いたらlocalhost:3000で動いているapiの/usersにアクセスしてデータをもらってくる\n\nでもそのデータをそのままは使わず\n\n```ruby \nJSON.parse(@users)\n```\n\nみたいにjson形式にする。\n\nこうしなかったら配列として扱えなかった。\n\nなのでusers_controller.rbのindexはこうなる。\n\n```ruby\n  def index\n    @users = `curl -X GET http://localhost:3000/users`\n    @users = JSON.parse(@users)\n  end\n```\n\nちなみに``でコンソールにコマンドをうつことができる。\n\nこれで@usersにさっきのapiからusersのデータをjson形式で持ってこられるのでusers/index.html.erbに\n\n```erb:index.html.erb\n<% @users.each do |user| %>\n    <p>name</p>\n    <p><%= user[\"name\"] %></p>\n    <p>age</p>\n    <p><%= user[\"age\"] %></p>\n    <p>email</p>\n    <p><%= user[\"email\"] %></p>\n    <p>password</p>\n    <p><%= user[\"password\"] %></p>\n<% end %>\n```\n\nでデータをみることができる。\n\nあくまでhashの形なのでuser[\"name\"]としないとデータはとれない。\n\n\ncreate updateに関してコントローラーはこんな感じ\n\n```ruby\n  def new \n  end \n\n  def create \n    `curl -X POST -H \'Content-Type:application/json\' -d \'{ \"name\": \"#{params[:name]}\", \"age\": \"#{params[:age]}\", \"email\": \"#{params[:email]}\", \"password\": \"#{params[:password]}\"}\' http://localhost:3000/users`\n    redirect_to users_index_path\n  end \n\n  def edit \n  end \n\n  def update \n    p `curl -X PATCH -H \'Content-Type:application/json\' -d \'{ \"name\": \"#{params[:name]}\", \"age\": \"#{params[:age]}\", \"email\": \"#{params[:email]}\", \"password\": \"#{params[:password]}\"}\' http://localhost:3000/users/#{params[:user_id]}`\n  end \n```\n\nさっきと違うのは-H \'Content-Type:application/json\'みたいしているところ\n\nこう書かないとうまくデータをapiに渡せない\n\n\nそれで全体はこうなる。\n\n```ruby:users_controller.rb\nclass UsersController < ApplicationController\n  def index\n    @users = `curl -X GET http://localhost:3000/users`\n    @users = JSON.parse(@users)\n  end\n\n  def new \n  end \n\n  def create \n    `curl -X POST -H \'Content-Type:application/json\' -d \'{ \"name\": \"#{params[:name]}\", \"age\": \"#{params[:age]}\", \"email\": \"#{params[:email]}\", \"password\": \"#{params[:password]}\"}\' http://localhost:3000/users`\n    redirect_to users_index_path\n  end \n\n  def edit \n  end \n\n  def update \n    p `curl -X PATCH -H \'Content-Type:application/json\' -d \'{ \"name\": \"#{params[:name]}\", \"age\": \"#{params[:age]}\", \"email\": \"#{params[:email]}\", \"password\": \"#{params[:password]}\"}\' http://localhost:3000/users/#{params[:user_id]}`\n  end \n\n  def show\n  end\nend\n```\n\n# おわりに\n\nアイディアが思い浮かばなかったから変なものができてしまった。\n\nちなみにapiを試すためにローカルで二つのサーバーを起動したい場合は\n\nrails s -p 4000\n\nみたいにすればlocalhost:4000にアクセスできる:sunny:\n\nちなみにユーザ登録とか検索とか画面を表示する以外の部分をほかのapiにやらせるのってありなのかな....？\n\nなんかデータを処理するのと表示するのをはっきり分けられてよさそう:eyes:\n\nおわり\n','2020-04-23 13:34:11.514907','2020-04-26 05:40:02.232664'),(32,'railsのログについて','# はじめに\nRailsのログについて調べてみた。\n\n# ログの書き方\n\nログの書き方は\n\n```ruby \nlogger.debug(\"message\")\n```\n\nみたいに書く\n\nログにはレベルがあるらしく\n\n下から\n\ndebug=>info=>warn=>error=>fatal=>unknown\n\nという感じらしい\n\nそしてデフォルトではすべてのログが出力されているから\n\n```ruby \nStarted GET \"/users\" for 127.0.0.1 at 2018-12-22 18:24:26 +0900\nProcessing by UsersController#index as HTML\n[0;33;49musers/indexにアクセス[0m\n  Rendering users/index.html.slim within layouts/application\n  Rendered users/index.html.slim within layouts/application (1.5ms)\nCompleted 200 OK in 26ms (Views: 23.4ms | ActiveRecord: 0.0ms)\n\n\nStarted GET \"/users\" for 127.0.0.1 at 2018-12-22 18:24:26 +0900\nProcessing by UsersController#index as HTML\n[0;33;49musers/indexにアクセス[0m\n  Rendering users/index.html.slim within layouts/application\n  Rendered users/index.html.slim within layouts/application (1.3ms)\nCompleted 200 OK in 24ms (Views: 22.1ms | ActiveRecord: 0.0ms)\n\n\nStarted GET \"/users\" for 127.0.0.1 at 2018-12-22 18:24:26 +0900\nProcessing by UsersController#index as HTML\n[0;33;49musers/indexにアクセス[0m\n  Rendering users/index.html.slim within layouts/application\n  Rendered users/index.html.slim within layouts/application (1.4ms)\nCompleted 200 OK in 25ms (Views: 22.9ms | ActiveRecord: 0.0ms)\n```\n\nこんな感じでいろいろ出力される\n\nログのレベルを変えると表示も変わる\n\n\nログのレベルの変え方は\n\nconfig/application.rbに\n\n```ruby\nconfig.log_level = :unknown\n```\n\nみたいに書く\n\nこの例だとunknownしか表示されない\n\ndebugにするとすべて表示される感じ。\n\n\nとりあえず試しに\n\nconfig.log_level = :unknownとしてdef indexに\n\n```ruby\ndef index\n    logger.unknown(\"users/indexにアクセス\")\n    @users = User.all \n  end\n```\n\nと書いてindexにアクセスしてみる\n\nそうするとログは\n\n```ruby \n[0;33;49musers/indexにアクセス[0m\n[0;33;49musers/indexにアクセス[0m\n```\n\nみたいに表示される。\n\n\n#ログの色を変える\n\nログの色を変えて表示したい場合はcolorizeというgemを使う\n\n```ruby:gemfile\ngem \'colorize\'\n```\n\nbundle install\n\nとしたら準備ok\n\n書き方は\n\n```ruby\nlogger.unknown(\"hello?\".colorize(:yellow))\n```\n\nみたいに文字列のあとにcolorize(:color)で色を付けられる。\n\n\n#例外処理のログを出力\n\n例外処理を行ってエラーが起きたらそのエラーのログを色付きで表示してみる。\n\ncreateアクションにこんなコードを書く\n\n```ruby:create\ndef create \n    begin\n      @user = Userrrr.create(user_params)\n    rescue => e \n      logger.unknown(\"ユーザー作成中にエラーが発生したよ～～～\\n#{e}\".colorize(:red))\n    ensure\n      redirect_to users_path\n    end \nend \n```\n\nUserのスペルが間違っているのでエラーが出る。\n\nrescueでエラーを補足して => e　みたいしてeにエラーの情報を渡せる。\n\nこれで\n\n```ruby:\n[0;31;49mユーザー作成中にエラーが発生したよ～～～\nuninitialized constant UsersController::Userrrr[0m\n```\n\nが色付きで表示される。\n\n# おわりに\n\ndevelopment.log以外のログファイルを作ってそこにログを出力させるということもできるらしいけどそれに関してはまた調べる。\n\n\nもうすぐクリスマスだなぁ\nおわり:snowman:\n\n','2020-04-23 13:34:36.428567','2020-04-26 05:40:14.501674'),(33,'postgresqlの設定','# はじめに\n\nとりあえずブラストワンピース有馬記念勝利おめでとう:sunny:\n\nそれで今回はpostgresqlの最初の設定について忘備録として書いていく。\n\nosはubuntu。\n\n\n# postgresqlインストール\n\npostgresqlをインストールするには\n\n```\nsudo apt-get install postgresql\n```\n\nでOK\n\nそのあと\n\n```\nsudo passwd postgres\n```\n\nでパスワードを設定する。\n\n# sqlサーバーに接続\n\nsqlサーバーに接続する\n\n```\nsu postgres\n```\n\nのあとパスワードが求められるから入力、そのあと\n\n```\npsql\n```\n\nと入力すれば\n\n```\npostgres=#\n```\n\nみたいな文字が出てくる。\n\n\nだがここで自分の場合は\n\n\n```\npsql: could not connect to server: No such file or directory\n        Is the server running locally and accepting\n        connections on Unix domain socket \"/var/run/postgresql/.s.PGSQL.5432\"?\n```\n\nこんなエラーがでた。\n\nそもそもs.PGSQL.5432なんてファイルないしどうしよう…と思って調べていたが動やらこのエラーはsqlのサーバーを起動していないために出るらしい。\n\n\nなのでこのエラーがでたら\n\n\n```\nsudo /etc/init.d/postgresql start\n```\n\nと打てばOK\n\n\n無事sqlが起動されエラーが出なくなるはず。\n\n\n# createuserができない\n\nとりあえず設定は終わったと思ってcreateuser -d -P nameとしてrailsのアプリで使うユーザを作成しようと思ったらこんなエラーがでた\n\n\n```\ncreateuser: could not connect to database postgres: FATAL:  role \"root\" does not exist\n```\n\nどうやらrootというroleがないことが問題らしい\n\n\nロールの作成の仕方は\n\n```\nsu postgres\npsql\n```\n\nと打って表示がpostgres=#となったら\n\n```\nCREATE ROLE rolename LOGIN CREATEDB CREATEROLE PASSWORD \'password\';\n```\n\nとすればOK\n\nCREATEROLEを書かないと\n\n```\ncreateuser: creation of new role failed: ERROR:  permission denied to create role\n```\n\nこのように怒られる。\n\n\nちなみにロールの情報を変更したい場合は\n\n```\nALTER ROLE name WITH CREATEROLE \n```\n\nのように変更できる。\n\n\n# railsでpostgresqlをつかう\n\nrailsでpostgresqlを使う場合\n\nまず\n\n```\ncreateuser usernmae\ncreatedb dbname\n```\n\nとしてuserとdbを作成する\n\nrails newするときに\n\n```\nrails new name -TB --database=postgresql\n```\n\nとすることでpostgresqlをつかうrailsアプリを作れる。\n\nconfig/database.ymlのdefault:　のところに\n\n```\nusername: username\npassword: pass\nhost: localhost\n```\n\nを追加で書き込む\n\ndevelopmentのところの\n\n```\ndatabase: dbname\n```\n\nも書き換える。\n\n\nこれでrailsでpostgresqlを使うことができるようになった:sunny:\n\n\n\n# 参考文献\n\n\n\nインストールからRails-PostgreSQL環境を整える\nhttps://qiita.com/torini/items/9952d91c4a7087b23481\n\n\nRails で postgresql を使う(インストールからマイグレーションまで)\nhttps://qiita.com/longtime1116/items/9045717ff8607bed07fe\n\n\n\n\n\n\n\n','2020-04-23 13:35:27.431295','2020-04-26 05:40:34.968036'),(34,'railsで動的にscopeを設定したい','# 初めに\nRailsでmodelにスコープを書くことがあるのですがスコープの数が多くなりすぎることがあります。\n\nそれで動的にスコープが定義出来たらと思って自分で試してみました。\n\n# 具体例\n\n具体的な例として記事に言語の設定があるとします。\n\nモデルはこんな感じ\n\n![erdplus-diagram.png](https://qiita-image-store.s3.amazonaws.com/0/207921/0d53f190-01c2-0bb4-20c1-361daad82354.png)\n\n\nそんでこのlangはinteger型でenumを使います\n\nなのでmodels/article.rbには\n\n```ruby:article.rb\nclass DataCollect < ApplicationRecord\n    enum lang: {ja: 0, en: 1, ar: 2, de: 3,el: 4, eo: 5, es: 6, fr: 7}\nend\n```\n\nこんな感じに設定します\n\n\nこれでarticleを作成するときにlangを設定してあげれはその記事の言語がわかるようになります。\n\n# scopeを作成\n\nscopeを作成するときに例えば\n\n```ruby\nArticle.ja.all\n```\n\nで日本語の記事がとれるようにするためにはmodels/article.rbに\n\n\n```ruby\nscope :ja, -> {where(lang: :ja)}\n```\n\nとすれば実装できます。\n\nしかし今回の例のように七個も言語があると\n\nmodels/article.rbは\n\n```ruby\nscope :ja, -> {where(lang: :ja)}\nscope :en, -> {where(lang: :en)}\nscope :ar, -> {where(lang: :ar)}\nscope :de, -> {where(lang: :de)}\nscope :el, -> {where(lang: :el)}\nscope :eo, -> {where(lang: :eo)}\nscope :es, -> {where(lang: :es)}\n```\n\nと書かなくてはいけなくて結構邪魔になります。\n\nもっと増えたらもっと邪魔になるわけでこれをもっと短く書きたい！\n\n\n# class_evalを使ってみた\n\nとりあえずclass_evalを使ってArticleのモデルにscopeを定義してみます。\n\n使い方はこんな感じになりました。\n\n```ruby \nArticle.class_eval { scope ja, -> {where(lang: ja)}\n```\n\nこれでscopeの設定ができるので後は配列を作ってループしたら出来上がり。\n\n```ruby \nLang = [ja, en, ar, de, el, eo, es, fr]\n\nLang.each do |l|\n  Article.classs_eval { scope l, -> {where(lang: l)}\nend \n```\n\nこれでOK\n\n# もう少しいじってみる\n\nもう少しいじってみることにして言語のファイルがconfig/localesにあるのですがそのファイルを見てscopeを定義してみたいと思います。\n\nどういうことかというと\n\n例えばconfig/localesに\n\n```\nen.yml\nja.yml\nen.yml\n```\n\nというファイルがあったらそれを見てen,ja,enというスコープを作るということです。\n\n\nconfig/localesのファイル名を取得するために\n\n```ruby \nDir.chdir(\"/mnt/c/users/owner/desktop/app_name/config/locales\")\nlang = Dir.glob(\"*\").map {|l| l.match(/../)[0] }\n```\n\nこうすればconfig/localesのファイル名が取得できます。\n\n\nこれでconfig/localesにある言語化ファイルがある言語のスコープを作成できました\n\n完成全体像はこちらです。\n\n```ruby \n\nclass Article < ApplicationRecord\n    enum lang: {ja: 0, en: 1, ar: 2, de: 3,el: 4, eo: 5, es: 6, fr: 7}\nend\n\n\n\n\nDir.chdir(\"/mnt/c/users/owner/desktop/latest_news/config/locales\")\nlang = Dir.glob(\"*\").map {|l| l.match(/../)[0] }\n\nlang.each do |l|\n    Article.class_eval { scope l, -> {where(lang: l)}}\nend \n```\n\n逆にわかりにくいですね（笑）\n\n\n\nおわり\n\nメリークリスマス:snowman:\n','2020-04-23 13:35:48.113364','2020-04-26 05:40:50.913765'),(35,'いろんな情報を収集するサイトをRailsで作成した。','# 初めに\n\n本日はクリスマスですね。\n\nアドベントカレンダーの最終日なので最近作っていたサイトを公開してみました。\n![latest.png](https://qiita-image-store.s3.amazonaws.com/0/207921/9973c12b-d529-07d2-7aa9-21e1c26842da.png)\n\nhttp://demo-sibakeny.info/home/top\n\nなぜか今javascriptがうまく機能しないところがあります。\n\n# サイトの内容\n\nまずどういったサイトかというと様々なサイトをスクレイピングして情報を収集して情報が更新されていたらその記事のタイトルとurlを取得するといった感じです。\n\n# このサイトを作ろう思った経緯\n\nこのサイトを作ろうと思った経緯ですが正直今いろんな情報があふれていてそれを集めるには自分でググっていかなきゃいけないと思います。\nその手間を省くために例えばニュースであればいろんなニュースサイトの最新記事の情報を集めてそのサイトへのリンクを張ることでグーグルで調べる手間が省けるだろうし世の中で起きていることがわかりやすくなると思ったからです。\n\n\n# こんな感じのサイト\n\nサイト名はLaNLibです。\n\n![latest2.png](https://qiita-image-store.s3.amazonaws.com/0/207921/37f6faf2-e98d-43e0-fd48-63b7f7cac769.png)\n\n\n\n基本的に10分ごとにいろんなサイトを巡回して更新されていたら情報を取得しています。\n\nまた日本語だけでなく英語の記事も集めていて最終的には世界的な動向を確認できるようにもなればなと思っています。\n\n#サイトを作るうえで工夫したこと\n\n\nサイトを作るうえで工夫したことはwheneverの設定です。\n\nとりあえずコードをどうぞ…\n\n\n```ruby:schedule.rb\nset :environment, \"development\"\nset :output, { :error => \"log/cron_error.log\" }\nset :path, \"/mnt/c/users/owner/desktop/appname\"\n\n\nDir.chdir(\'/mnt/c/users/owner/desktop/appname/lib/tasks\')\nDirectories = Dir.glob(\"*\")\nmethods = []\nDirectories.each do |drc|\n    File.open(\"#{drc}\") {|f|\n    data = f.read\n    @classname = data.to_s.match(/Tasks::(.+?)\\r/)[1]\n    datas = data.scan(/def self\\.(.+?)\\r/)\n    datas.flatten!\n    datas = datas.map {|d| [@classname.chomp,d.chomp]}\n    methods << datas \n}\nend \n\nmethods.flatten!(1)\n\nevery 10.minutes do \n    methods.each do |method|\n        eval \"runner \'Tasks::#{method[0]}.#{method[1]}\'\"\n    end\nend \n```\n\n\nこれ何をしているのかというとlib/tasksの中にスクレイピングをするメソッドを定義していてるのですがそれをwhenever --update-crontabをするときにファイルの中身を読み込んでクラス名とメソッドを取得して自動的に反映されるようにしています。\n\n\nなぜこんなことをしたかというと既に50個近くのスクレイピングのタスクがありそれをひとつずつ\n\n```ruby\nrunner Tasks::CrawlData.method\n```\n\nみたいにするのは気が遠くなるからです。\n\nこれによって自動的に反映されるため楽ですしスペルミスもないです。\n\n# evalは便利\n\n今回アプリを作っていく中でevalがとても便利であることがわかりました。\n\nメタプログラミングに関してはまだよくわかっていないですがこれからもっと勉強して書けるコードの幅を増やしていきたいなと思います。\n\n#おわりに\n\n今日はクリスマスですね。\n\n世の中は友達をワイワイしている中で自分は家でひとりプログラミングで遊んでいました。\n\nですが不思議と悪くないというかプログラミングで楽しく過ごせたクリスマスでした。\n\nおわり:snowman2:\n\n\n','2020-04-23 13:36:16.129358','2020-04-26 05:41:03.575562'),(36,'railsでajaxを使って投稿を削除しフラッシュ表示','# 下準備\n今回はbootstrap,slimを使ってやっていきます。\n\nとりあえず\n\n```ruby:gemfile\ngem \'bootstrap\'\ngem \'tether-rails\'\ngem \'popper_js\'\ngem \'jquery\'\ngem \'slim-rails\'\ngem \'html2slim\'\n```\n\nをbundle installします。\n\nそして\n\napp/assets/javascripts/application.jsに\n\n```javascript:application.js\n//= require jquery3\n//= require rails-ujs\n//= require popper\n//= require tether\n//= require bootstrap\n```\n\nを追加します。\n\nそれで\n\nassets/stylesheets/application.cssを\n\napplication.scssに名前をかえて\n\nなかに\n\n```scss:application.scss\n@import \'/*\';\n@import \'bootstrap\';\n@import \'tether\';\n```\n\nでOK\n\n\n# アプリを作っていく\n\nコマンドで\n\n```\nrails g model post body:text\nrails db:migrate\nrails g controller posts index new\n```\n\nをする。\n\n\nまずroutesの設定をしておく\n\n```ruby:routes.rb\nresources :posts\n```\n\nと書き加えてroutes.rbの設定はおわり\n\n\npostに関するアクションを作っていくため\n\nposts_controller.rbの中身を\n\n```ruby:posts_controller.rb\n\ndef index \n  @posts = Post.all\nend \n\ndef new\n  @post = Post.new\nend \n\ndef create \n  if Post.create(post_params)\n    redirect_to posts_path\n  else \n    render :new\n  end \nend \n\n\ndef destroy\n  @post = Post.find params[:id]\n  @post.destroy\n  redirect_to posts_path\nend \n\n\nprivate\n  def post_params\n    params.require(:post).permit(:body)\n  end \n\n```\n\n\nこれでとりあえずはindexでは一覧をnewとcreateで作成,destroyで削除の機能を追加できました。\n\n次にview側を作っていきます。\n\n\nindex.html.slimに\n\n```slim:index.html.slim\ndiv.container\n  br\n  br\n  - @posts.each do |post|\n    div.border-bottom.form-inline\n      p.col-md-10= post.body\n      = link_to \"削除\", post_path(post), class: \'btn btn-sm btn-primary\', method: :delete\n\n  br\n  br\n  = link_to \"追加\", new_post_path, class: \"btn btn-sm btn-success\"\n\n\n\n```\n\n\nnew.html.slimに\n\n```slim:new.html.slim\ndiv.container\n  br\n  br \n  = form_with model: @post do |f|\n    .form-group\n      = f.label :body\n      = f.text_field :body, class: \"form-control\"\n    .form-group\n      = f.submit \"投稿\", class: \"btn btn-primary\"\n\n```\n\n\n多分これで投稿を行ってそれを表示、削除ができるようになったはずです。\n\n\n# Ajax機能を追加\n\n\nつぎに非同期で投稿を削除できるようにしていきます。\n\nまず\n\nindex.html.slimの削除ボタンのところを\n\n```slim:index.html.slim\n= link_to \"削除\", post_path(post), class: \"btn btn-sm btn-primary\", method: :delete, remote: true\n```\n\nのように変更します。\n\n何が変わったかというと最後にremote: trueが追加されています。\n\nこれで非同期的に投稿を削除できます。\n\nですがこの状態だと削除した投稿がそのまま画面に表示されたままになっています。\n\n\nなのでviews/postsに\n\ndestroy.js.erbというファイルを作成して\n\n```javascript:destroy.js.erb\n$(\'#post-<%= @post_id %>\').html(\'\');\n```\n\n\nと書きます。\n\nこのdestroy.js.erbファイルは非同期でdestroyアクションが実行されたときに読み込まれます。\n\n```javascript\n$(\'#post-<%= @post_id %>\').html(\'\');\n```\n\nはなんかというとidがpost-<%= @post_id %>となっているものを非表示にする処理です。\n\n\nindex.html.slimを\n\n```slim:index.html.slim\ndiv.container\n    div id=\"alert-message\"\n    br\n    br \n    br\n    - @posts.each do |post|\n        div id=\"post-#{post.id}\" <= 追加\n            div.border-bottom.form-inline\n                p.col-md-10= post.body \n                = link_to \"削除\", post_path(post), class: \"btn btn-sm btn-primary\", method: :delete, remote: true\n    br \n    br \n    br \n    br \n    = link_to \"post追加\", new_post_path \n```\n\n\nのようにすることで削除ボタンが押されたらその投稿が非表示にすることができます。\n\ndestroy.js.erbにpostのidを渡すために\n\n\nposts_controller.rbのdestroyアクションに\n\n```ruby\n@post_id = @post.id\n```\n\nを追加します。\n\nこれで削除ボタンを押したら非同期で投稿が削除されます。\n\n\n# flash機能の追加\n\n次にflash機能を追加していきます。\n\nまずdestroyアクションに\n\n```\n@msg = \"削除が成功\"\n```\n\nを追加します。\n\nそして\n\ndestory.js.erbファイルに\n\n\n```javascript:destroy.js.erb\n\n$(\'#alert-message\').html(\'<div class=\"alert alert-success\"><%= @msg %></div>\')\n```\n\nと書けば削除ボタンが押されたときにid=alert-messageに@msgを表示させることができます。\n\n\nindex.html.slimに\n\n```slim:index.html.slim\n\ndiv.container\n    div id=\"alert-message\" <= 追加\n    br\n    br \n    br\n    - @posts.each do |post|\n        div id=\"post-#{post.id}\"\n            div.border-bottom.form-inline\n                p.col-md-10= post.body \n                = link_to \"削除\", post_path(post), class: \"btn btn-sm btn-primary\", method: :delete, remote: true\n    br \n    br \n    br \n    br \n    = link_to \"post追加\", new_post_path \n\n\n```\n\n\n\n\n\n\nとすることで削除したときにフラッシュが表示されます。\n\n\nうまくいけばこんな感じになるはず\n\n\n![ajax.png](https://qiita-image-store.s3.amazonaws.com/0/207921/e0b0a8d8-a1b2-e005-814b-ba75f3666f01.png)\n\n\n\nなにか間違っているところがあればご指摘いただけると助かります。\n\nおわり。\n\n\n \n\n\n\n\n\n\n\n\n\n\n','2020-04-23 13:36:46.828825','2020-04-26 05:41:24.336543'),(37,'railsでdbがsqliteの時に時間ごとにデータを集計する方法','# はじめに\n時間ごとにデータを集計したいと思ったが良い方法が思いつかずこんな頭のおかしいことをしていた。\n\n```ruby\nrequire \'active_support/concern\'\n\nmodule TimeRecord\n    extend ActiveSupport::Concern \n\n    included do \n        now_time = Time.now\n\n        one             = now_time - 60*60 \n        two             = now_time - 60*60*2\n        three           = now_time - 60*60*3\n        four            = now_time - 60*60*4\n        five            = now_time - 60*60*5\n        six             = now_time - 60*60*6\n        seven           = now_time - 60*60*7\n        eight           = now_time - 60*60*8\n        nine            = now_time - 60*60*9\n        ten             = now_time - 60*60*10\n        eleven          = now_time - 60*60*11\n        twelve          = now_time - 60*60*12\n        thirteen        = now_time - 60*60*13\n        fourteen        = now_time - 60*60*14\n        fifteen         = now_time - 60*60*15\n        sixteen         = now_time - 60*60*16\n        seventeen       = now_time - 60*60*17\n        eighteen        = now_time - 60*60*18\n        nineteen        = now_time - 60*60*19\n        twenteen        = now_time - 60*60*20\n        twenteeone      = now_time - 60*60*21\n        twenteetwo      = now_time - 60*60*22\n        twenteethree    = now_time - 60*60*23\n        twenteefour     = now_time - 60*60*24\n        twenteefive     = now_time - 60*60*25\n\n        scope :one_hour,            -> {where(created_at: one..now_time)}\n        scope :two_hour,            -> {where(created_at: two..one)}\n        scope :three_hour,          -> {where(created_at: three..two)}\n        scope :four_hour,           -> {where(created_at: four..three)}\n        scope :five_hour,           -> {where(created_at: five..four)}\n        scope :six_hour,            -> {where(created_at: six..five)}\n        scope :seven_hour,          -> {where(created_at: seven..six)}\n        scope :eight_hour,          -> {where(created_at: eight..seven)}\n        scope :nine_hour,           -> {where(created_at: nine..eight)}\n        scope :ten_hour,            -> {where(created_at: ten..nine)}\n        scope :eleven_hour,         -> {where(created_at: eleven..ten)}\n        scope :twelve_hour,         -> {where(created_at: twenteen..eleven)}\n        scope :thirteen_hour,       -> {where(created_at: thirteen..twenteen)}\n        scope :fourteen_hour,       -> {where(created_at: fourteen..thirteen)}\n        scope :fifteen_hour,        -> {where(created_at: fifteen..fourteen)}\n        scope :sixteen_hour,        -> {where(created_at: sixteen..fifteen)}\n        scope :seventeen_hour,      -> {where(created_at: seventeen..sixteen)}\n        scope :eighteen_hour,       -> {where(created_at: eighteen..seventeen)}\n        scope :nineteen_hour,       -> {where(created_at: nineteen..eighteen)}\n        scope :twenteen_hour,       -> {where(created_at: twenteen..nineteen)}\n        scope :twenteeone_hour,     -> {where(created_at: twenteeone..twenteen)}\n        scope :twenteetwo_hour,     -> {where(created_at: twenteetwo..twenteeone)}\n        scope :twenteethree_hour,   -> {where(created_at: twenteethree..twenteetwo)}\n        scope :twenteefour_hour,    -> {where(created_at: twenteefour..twenteethree)}\n        scope :twenteefive_hour,    -> {where(created_at: twenteefive..twenteefour)}\n    end \nend \n```\n\nこれをすべて実行して集計していたがさすがにやばいの集計する方法を探しました。\n\n# Model.group(\"DATE_FORMAT(created_at,\'%Y-%m-%d\')\").countが使えない\n\nどうやらpostgresqlならModel.group(\"DATE_FORMAT(created_at,\'%Y-%m-%d\')\").countみたいな感じで集計できるようだがsqliteの場合出来ない（多分）\n\n\n# sqlを実際に書いて実行する。\n\nしかたないのでsql文を実際に書いて集計することにしました。\n\n\nsql文を実行するには\n\n```ruby\nsql = <<-EOS\nSELECT * FROM table;\nEOS\n```\n\nみたいに書いて\n\n```ruby \nActiveRecord::Base.connection.select_all(sql)\n```\n\nで実行できる。\n\nこれを利用して時間ごとの集計を行った。\n\n結果がこれ\n\n```ruby\n@@sql_count = <<-EOS\nSELECT strftime(\'%Y-%m-%d-%H\', created_at), COUNT(*)\nFROM model\nWHERE category = 0\nGROUP BY strftime(\'%Y-%m-%d-%H\', created_at)\nORDER BY created_at DESC;\nEOS\n    \n    \n    def self.data_events_all_count \n        datas = ActiveRecord::Base.connection.select_all(@@sql_events_all).to_hash  \n        count_array = []\n        datas.each do |data|\n            count_array << data[\"COUNT(*)\"]\n        end \n        return count_array.take(50).reverse\n    end \n```\n\n\nみたいな感じ。\n\nstrftime(\'%Y-%m-%d-%H\',created_at)\n\nで年、月、日、時間を得られます。\n後はそれをgroup byで集計してあげれば時間ごとの集計が行えます。\n\n得られるsqlの結果をハッシュの形にしているので結果としてdatasの中身は配列の中にハッシュがある形になります。\n\nなのでループしてあげてその中でCOUNT(*)の値、要は合計の値をcount_arrayに入れています。\n\n\n\n','2020-04-23 13:37:12.850296','2020-04-26 05:41:35.955648'),(38,'railsでユーザー全員にメールを送る。','# 初めに\n\nユーザー全員にメールを送る方法を書いていきます。\n\n\n# 下準備\n\nまずはアプリの設定から\n\n```\nrails new sample_mail\nrails g model user name:string email:string\nrails db:migrate\nrails g controller mails index send_mail\n```\n\nとしてroutes.rbに\n\n```\nget \'mails/index\'\nget \'mails/send_mail\'\n```\n\nでOK\n\ngemfileに\n\n```\ngem \'faker\'\n```\n\nとして\n\nでもデータをつくっていく\n\n```\nrails c\n100.times { User.create(name: Faker::Name.first_name, email: Faker::Internet.email }\n```\n\nこれでユーザが100人つくれました。\n\n\n#メールを送る\n\nまずは\n\n```\nrails g mailer SampleMailer\n```\n\nとする。\n\nそうすると必要なファイルが作成される。\n\n\nmailers/sample_mailer.rbにユーザにメールを送る処理を書いていく\n\n\n```ruby:sample_mailer.rb\n\ndef send_mail(user)\n  @user = user\n  mail(subject: \'確認メール\',to: user.email, from: \"test@example.com\")\nend \n\ndef self.send_mail_users\n  @users = User.all\n  @users.each do |user|\n    SampleMailer.send_mail(user).deliver_now\n  end \nend \n\n```\n\nsend_mailメソッドは普通に一つのユーザーにメールを送るもので\n\n```\nSampleMailer.send_mail(user).deliver_now\n```\n\nでuserにメールを送ることができます。\n\nなのでself.send_mail_usersで@users = User.allをしてそこからループで@users全員にメールを送っています。\n\n\n次に\n\nviews/sample_mailerのなかに送るメールの内容を書いていきます。\n\nsend_mail.html.erb,send_mail.text.erbを作ります。\n\nファイル名はメールを送るメソッドの名前と同じではいけないです。\n\n適当に中身をかいたら完了です。\n\n\n最後にメールに関する設定をconfig/environment/development.rbに書いていきます。\n\nとりあえずは\n\n```\nconfig.action_mailer.delivery_method = :smtp\nconfig.action_mailer.smtp_settings = { address: \"127.0.0.1\", port: 1025}\n```\n\nと書いておきます。\n\n\nあとは実行してあげればメールを送れるので\n\nviews/mails/index.html.erbに\n\n```\n<%= link_to \"送信\", mails_send_mail_path %>\n```\n\nとしてあげて\n\ncontrollers/mails_controller.rbに\n\n```ruby \n\ndef index \nend \n\ndef send_mail\n  SampleMailer.send_mail_users\n  redirect_to mails_index_path\nend \n\n```\n\nと書いてあげればOK\n\nindexにアクセスして送信を押せば全員にメールを送れます。\n\n# 確認\n\nちゃんとメールが送られているか確認したいので\n\n\n```\ngem install mailcatcher\n```\n\nとして\n\nコンソールで\n\n```\nmailcatcher\n```\n\nと打ってからメールを送信します。\n\nそのあと\n\n127.0.0.1:1080にアクセスしたら送ったメールを確認できます。\n\n\nおわり:sunny:\n\n','2020-04-23 13:37:29.071554','2020-04-26 05:41:48.274059'),(39,'Ruby,Railsの暗号化いろいろ','# はじめに\nRubyやRailsにおける暗号化について忘備録としてまとめました。\n\n# Crypt\n\nrubyで使える暗号化を行うもので暗号化されたものから元の文字列を求めることはできない。\n\n使い方としては\n\n```ruby\nstr = \'hello\'\nstr.crypt(\'secret_key\')\n```\n\nで暗号化ができる。\n\n# OpenSSL::Cipher\n\n調査中\n\n\n# message_verifier\n\nremember meのトークンの実装に使われたりするらしい\n暗号化することも暗号化されたものから元の文字列を求めることもできる\n\n使い方は\n\n\n```ruby\n\nremember_token = Rails.application.message_verifier(\'secret_key\').generate({ token: \'i am bob\' })\np remember_token\n=> \"BAh7BjoKdG9rZW5JIg1pIGFtIGJvYgY6BkVU--84c91772394d97fe0700d8e9cf4e84100f28f0ee\"\n\np Rails.application.message_verifier(\'secret_key\').verify(remember_token)[:token]\n=> \"i am bob\"\n\n```\n\n# message_encryptor\n\nmessage_verifierと似た感じで使える。\n\n```ruby\ncrypt = ActiveSupport::MessageEncryptor.new(\'secret_key\')\ntoken = crypt.encrypt_and_sign(\'hello world\')\np token\n=> ArgumentError: key must be 32 bytes\n```\n\nとなるので\n\n```ruby\nlen   = ActiveSupport::MessageEncryptor.key_len\nsalt  = SecureRandom.random_bytes(len)\nkey   = ActiveSupport::KeyGenerator.new(\'secret_key\').generate_key(salt, len)\ncrypt = ActiveSupport::MessageEncryptor.new(key)\ntoken = crypt.encrypt_and_sign(\"i am bob\")\np token \n=> \"ZGhtYnFlQTBkL2FlK2hOcG9aM1VhMHRpeDNwd2tUOGt0TlRDMHBNYlNpST0tLWtkcUI5VVFPNEViL2s2N3ZxOTU5Z1E9PQ==--1ff2c28f7b3686dde2bf1c00b88c23b115b76176\"\np crypt.decrypt_and_verify(token)\n=> \"i am bob\"\n```\n\nみたいに使う。\n\n# MD5\n\nこれは与えられた文字列を128bitの値に変換する。与えられた文字列を暗号化することはできるが暗号化されたものから元の文字列を求めることはできない。ハッシュ化というらしい。\n\n\n使い方は\n\n```ruby\n\np Digest::MD5.digest(\'hello\')\n=> \"]A@*\\xBCK*v\\xB9q\\x9D\\x91\\x10\\x17\\xC5\\x92\"\np Digest::MD5.hexdigest(\'hello\')\n=> \"5d41402abc4b2a76b9719d911017c592\"\n\n```\n\nどうやらセキュリティ用途で使うのは安全とは言えなくなっているらしい。\n\n\n# bcrypt\n\nbcryptはgemでユーザーのパスワードを暗号化したりログイン処理の時に使えるauthenticateメソッドを実装してくれたりする。\n\n使い方は\n\n```\ngem \'bcrypt\'\n```\n\nbundle installして\n\nmodel/users.rbに\n\n```\nhas_secure_password\n```\n\nと書くだけ。\n\nこの場合userモデルにpassword_digestというカラムがないと使えないので追加しておく。\n\nこれで暗号化を行ってくれる。\n\nログインしたい場合は\n\n```ruby\n@user = User.find_by(email: params[:email])\nif @user && @user.authenticate(params[:password])\n  session[:user_id] = @user.id\nend \n```\n\nでOK\n\nユーザを作成する場合はpassword_digestに値を入れる必要はなく\n\npassword,password_confirmationという値を渡してあげれば大丈夫\n\n\n# encryptor\n\ngemで暗号化もできるし復号化もできる。\n\n使い方としては\n\n\'\'\'\ngem \'encryptor\'\n```\n\nbundle installして\n\n```ruby\nrequire \'encryptor\'\nrequire \'securerandom\'\nsecret_key = SecureRandom.random_bytes(32)\niv = SecureRandom.random_bytes(12)\nencrypted_value = Encryptor.encrypt(value: \"hello encryptor\", key: secret_key, iv: iv)\np encrypted_value\n=> \"\\xD5\\xCC\\x84G\\xFBn\\xCEw\\xD6\\x1D\\x87\\xD0\\x00w\\xDDdx\\xB0\\xF4\\x97a\\xC9\\xA0\\xD4\\xA4\\x88|\\xDF\\xC0\\xAD7\"\ndecrypted_value = Encryptor.decrypt(value: encrypted_value, key: secret_key, iv: iv)\np descrypted_value = \"hello encryptor\"\n```\n\n\nStringクラスにインクルードすると便利っぽい\n\n```ruby\nrequire \'encryptor/string\'\nsecret_key = SecureRandom.random_bytes(32)\niv = SecureRandom.random_bytes(12)\nString.include Encryptor::String\nEncryptor.default_options.merge!(key: secret_key, iv: iv)\n```\n\nとしてあげればあとは\n\n```ruby\npassword = \"secure token\"\np password.encrypt\n=> \"\\x16\\xEC\\x9Ds\\xE6\\xB3.\\x8D\\xFF\\x910|=O\\xFBD\\xD7$h\\x9E6\\x92\\xAEo\\xD6s\\x97\\xF7A\\xEB\\xA4\"\nencrypted_pass = password.encrypt\np encrypted_pass.decrypt\n=> \"secure token\"\n```\n\nみたいにできる。\n\nだが問題があって\n\n```\nPlease be aware that Encryptor v2.0.0 had a major security bug when using AES-*-GCM algorithms.\n\nBy default You will not be able to decrypt data that was previously encrypted using an AES-*-GCM algorithm.\n\nPlease see the README and https://github.com/attr-encrypted/encryptor/pull/22 for more information.\n```\n\nらしい。\n\nよくわからないけど AES-*-GCMを使った場合バグがあるみたいですね。\n\n\n# attr_encrypted\n\n元気が出たら書く。\n\n# 最後に\n\nセキュリティ関係に関して調べて書いてみました。\nまだどういった場合使うべきなのかいまいちよくわかってないのでそこを調べて実際の用途について調べてまた書きたいです。\nおわり\n\n\n\n\n\n\n','2020-04-23 13:37:45.416485','2020-04-26 05:42:10.472315'),(40,'javascriptでモーダルウィンドウ','#初めに\njavascriptでモーダルウィンドウのやり方がわかったので忘備録として\n\n#とりあえず\nモーダルウィンドウっていってもすることはボタンを押されたりしたらモーダルウィンドウを表示するだけ、要はdisplayをnoneにしたりblockにしたりするだけで実装できる。\n\n#実装していく\n\nモーダルウィンドウの部分を作っていく\n\n```html\n<div id=\"modal\" class=\"modal\">\n  <div class=\"modal-content\">\n    <div class=\"modal-body\">\n      <h1>hello</h1>\n    </div>\n  </div>\n</div>\n\n```\n\n```css\n.modal {\ndisplay: none;\nposition: fixed;\nz-index: 1;\nleft: 0;\ntop: 0;\nheight: 100%;\nwidth: 100%;\noverflow: auto;\nbackground-color: rgba(0,0,0,0.5);\n}\n\n.modal-content{\nbackground-color: white;\nwidth: 500px;\nmargin: 40% auto;\n}\n```\n\n\nみたいにする\n\n表示の確認をしたい場合はdisplay:noneをけしてみてください。\n\n\nこんな感じに表示されると思います。\n\n![modal.png](https://qiita-image-store.s3.amazonaws.com/0/207921/3f7bb910-d2f5-d191-06bc-a1e5c4f0ce1c.png)\n\n\n\nそれで次にボタンを作ります。\n\n```html\n<input type=\"button\" id=\"btn\" value=\'click me\'>\n```\n\nそしてjsでこのボタンが押されたときにmodalのdisplayをblockにします。\n\n\njsファイルに\n\n\n```javascript\nvar btn = document.getElementById(\'btn\');\nvar modal = document.getElementById(\'modal\');\n\nbtn.addEventListener(\'click\', function() {\n  modal.style.display = \'block\';\n}\n\n\n```\n\n\nこんな感じに書けばモーダルがない状態でボタンを押すとモーダルウィンドウが出てくると思います。\n\n\nモーダルを消す機能を追加するために\n\nさっきのhtmlを\n\n```html\n    <div id=\"modal\" class=\"modal\">\n        <div class=\"modal-content\">\n            <div class=\"modal-body\">\n                <h1>hello</h1>\n                <input type=\"button\" id=\"closeBtn\" value=\"close\">  <= 追加\n            </div>\n        </div>\n    </div>\n```\n\nこうします。\n\nこのcloseボタンが押された時にmodalのdisplayをnoneにします。\n\njsファイルに\n\n```javascript\n\n\nvar closeBtn = document.getElementById(\'closeBtn\');\n\ncloseBtn.addEventListener(\'click\', function() {\n  modal.style.display = \'none\';\n})\n```\n\n\nと書き加えます。\n\nこれでモーダルウィンドウの表示、非表示ができるようになりました。\n\n\nまたボタンではなく外側の黒い部分を押してもモーダルが消えるようにしたい場合は\n\n\n```javascript\n\nwindow.addEventListener(\'click\', function(e) {\n  if (e.target == modal) {\n    modal.style.display = \'none\';\n  }\n});\n\n```\n\nお加えればOK\n\n後はデザインを適当に加えれば完成です。\n','2020-04-23 13:38:06.142630','2020-04-23 13:38:06.142630'),(41,'javascriptで画像をスライド','#はじめに\njavascriptで画像をスライドをさせる方法が分かったのでその忘備録\n\n\n#方法\n\n画像のdisplayを変えるだけ\n\n\n次にどの画像を表示するかわかるようにするためにquerySelectorAllでスライドを配列で取得してあれこれする。\n\n#実装\n\nまずhtmlに\n\n```html\n    <div id=\"arrow-left\" class=\"arrow\"></div>\n    <div id=\"arrow-right\" class=\"arrow\"></div>\n    \n    <div id=\"slider\">\n        <div class=\"slide slide1\"></div>\n        <div class=\"slide slide2\"></div>\n        <div class=\"slide slide3\"></div>\n    </div>\n```\n\nとかく\n\nslide1,2,3のbackground-imageに画像を設定していきます。\n\ndiv.arrowをクリックしたときに画像が移り変わる感じにする。\n\n\ncssはとりあえずこんな感じ\n\n```css\nbody,#slider{\n    margin: 0;\n    padding: 0;\n    width: 100%;\n}\n\n.slide {\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n    width: 100%;\n    height: 500px;\n}\n\n.slide1 {\n    background-image: url(image1.jpg);\n}\n\n.slide2 {\n    background-image: url(image2.jpg);\n}\n\n.slide3 {\n    background-image: url(image3.jpg);\n}\n\n```\n\n\n次に矢印を作ります\n\n\ncssはこれ\n\n```css\n.arrow{\n    cursor: pointer;\n    position: absolute;\n    margin-top: 230px;\n    width: 0;\n    height: 0;\n    border-style: solid;\n}\n\n#arrow-left{\n    border-width: 20px 20px 20px 0;\n    border-color: transparent gray transparent transparent;\n    left: 0;\n    margin-left: 30px;\n}\n\n#arrow-right{\n    border-width: 20px 0 20px 20px;\n    border-color: transparent transparent transparent gray;\n    right: 0;\n    margin-right: 30px;\n}\n```\n\n\n画像のサイズによって表示はまちまちだと思うのでarrowのmargin-topは調整してください。\n\n\nそうするとこんな感じになってると思います。\n\n\n![slide.png](https://qiita-image-store.s3.amazonaws.com/0/207921/3987f06f-fe8a-f4f8-aebd-c901bb4e3ef5.png)\n\n\n\nそれで次に画像の処理をjsで書いていきます。\n\njsファイルに\n\n```javascript\n\nvar sliderImages = document.querySelectorAll(\'.slide\');\nvar arrowRight = document.getElementById(\'arrow-right\');\nvar arrowLeft = document.getElementById(\'arrow-left\');\nvar current = 0;\n\n```\n\n\nと書きます。\n\nsliderImagesはslideの画像のdivを配列として取得していて\narrowRight,arrowLeftがclickされたときにsliderImagesの現在をdisplay:noneにして次の画像を表示させる感じにしていきます。\n\nまずはcssで\n\n```css\n.slide1 {\n    display: none; <= 追加\n    background-image: url(image1.jpg);\n}\n\n.slide2 {\n    display: none; <= 追加\n    background-image: url(image2.jpg);\n}\n\n.slide3 {\n    display: none; <= 追加\n    background-image: url(image3.jpg);\n}\n```\nとして\n\n```javascript\n\nfunction startSlide(){\n    sliderImages[0].style.display = \'block\';\n}\n\narrowRight.addEventListener(\'click\', function() {\n    sliderImages[current].style.display = \'none\';\n    if(current === sliderImages.length - 1){\n        current = -1;\n    }\n    sliderImages[current + 1].style.display = \'block\';\n    current++;\n})\n\narrowLeft.addEventListener(\'click\', function() {\n    sliderImages[current].style.display = \'none\';\n    if(current === 0){\n        current = sliderImages.length;\n    }\n    sliderImages[current - 1].style.display = \'block\';\n    current--;\n})\n\nstartSlide();\n```\n\nを書く。\n\narrowRightが押されたらcurrentを+1してarrowLeftが押されたらcurrentを-1していく。\n\nだけど例えばcurrentがそのまま3,4,5,6と増えていったらこまるので\n\nもしcurrentがsliderImages.length - 1より大きくなりそうならcurrent = -1をしている\n\nなんで0ではなく-1なのかというとそのあとで\nsliderImages[current + 1]としているからです。\n\narrowLeftでは反対のことをしています。\n\n\nこれで一応動くと思います。\n\nおわり。\n','2020-04-23 13:38:25.123688','2020-04-23 13:38:25.123688'),(42,'Rubyでエンコードのエラーの対処','#Rubyでのエンコードエラー\n\nrubyでエンコードのことでエラーが出たのでその対処法\n\n使うエンコードを指定する場合は\n\n```ruby\nEncoding.default_external = \'UTF-8\'\n```\n\nとやってる。\n\nこれに関してはいろりろ書き方があると思うから好きなのを使うとよいと思う。\n\n\n今回であったのが\n\ninvalid byte sequence in UTF-8\n\nみたいなやつ\n\n\n出会った経緯としてはウェブページをスクレイピングしてたらそこにUTF-8以外の文字があってそれを処理しようとしたら出た。\n\n自分の場合はとりあえずエラーさえ出なければよかったので\n\n\n```ruby\nstring.encode(\"UTF-16BE\", \"UTF-8\",\n           invalid: :replace,\n           undef: :replace,\n           replace: \'.\').encode(\"UTF-8\")\n```\n\nこれでエラーが出てる部分の文字を.に変えたらエラーは出なくなった。\n','2020-04-23 13:38:41.182973','2020-04-23 13:38:41.182973'),(43,'railsの多対多のアソシエーション','#はじめに\n多対多のアソシエーションっていつも頭がこんがらがるので忘備録\n\n#とりあえず下準備\n\n```\nrails new app\nrails g model post body:string\nrails g model category name:string\nrails g model category_post post:references category:references\nrails db:migrate\n```\n\nこれで準備完了\n\n多対多のアソシエーションを行う場合中間テーブルが必要で名前は\"modelの名前_modelの名前\"です。\n\n後はmodelのファイルに\n\n```ruby:post.rb\nhas_many :category_posts\n\nhas_many :categories, through: :category_posts\n```\n\n```ruby:category.rb\nhas_many :category_posts\nhas_many :posts, through: :category_posts\n```\n\n```ruby:category_post.rb\nbelongs_to :post \nbelongs_to :category\n```\n\nと追加する。\n\nなぜかよくわからないけどpost.rb,category.rbのhas_manyの順番が逆だとうまくいかない。\n\n\n\n#試しに使ってみる。\n\n\n試しに使ってみる。\n\n```ruby \n\n post = Post.create(body: \'hello world\')\n   (0.1ms)  begin transaction\n  Post Create (2.6ms)  INSERT INTO \"posts\" (\"body\", \"created_at\", \"updated_at\") VALUES (?, ?, ?)  [[\"body\", \"hello world\"], [\"created_at\", \"2019-01-02 15:29:45.573338\"], [\"updated_at\", \"2019-01-02 15:29:45.573338\"]]\n   (12.6ms)  commit transaction\n=> #<Post id: 3, body: \"hello world\", created_at: \"2019-01-02 15:29:45\", updated_at: \"2019-01-02 15:29:45\", category_id: nil>\n\npost.categories.create(name: \'fun!!\')\n   (0.0ms)  begin transaction\n  Category Create (2.7ms)  INSERT INTO \"categories\" (\"name\", \"created_at\", \"updated_at\") VALUES (?, ?, ?)  [[\"name\", \"fun!!\"], [\"created_at\", \"2019-01-02 15:30:13.503425\"], [\"updated_at\", \"2019-01-02 15:30:13.503425\"]]\n  CategoryPost Create (0.1ms)  INSERT INTO \"category_posts\" (\"post_id\", \"category_id\", \"created_at\", \"updated_at\") VALUES (?, ?, ?, ?)  [[\"post_id\", 3], [\"category_id\", 3], [\"created_at\", \"2019-01-02 15:30:13.507951\"], [\"updated_at\", \"2019-01-02 15:30:13.507951\"]]\n   (12.0ms)  commit transaction\n=> #<Category id: 3, name: \"fun!!\", created_at: \"2019-01-02 15:30:13\", updated_at: \"2019-01-02 15:30:13\", post_id: nil>\n\n\n post.categories.create(name: \'楽しい\')\n   (0.1ms)  begin transaction\n  Category Create (2.8ms)  INSERT INTO \"categories\" (\"name\", \"created_at\", \"updated_at\") VALUES (?, ?, ?)  [[\"name\", \"楽しい\"], [\"created_at\", \"2019-01-02 15:31:44.766487\"], [\"updated_at\", \"2019-01-02 15:31:44.766487\"]]\n  CategoryPost Create (0.1ms)  INSERT INTO \"category_posts\" (\"post_id\", \"category_id\", \"created_at\", \"updated_at\") VALUES (?, ?, ?, ?)  [[\"post_id\", 3], [\"category_id\", 4], [\"created_at\", \"2019-01-02 15:31:44.771663\"], [\"updated_at\", \"2019-01-02 15:31:44.771663\"]]\n   (11.7ms)  commit transaction\n=> #<Category id: 4, name: \"楽しい\", created_at: \"2019-01-02 15:31:44\", updated_at: \"2019-01-02 15:31:44\", post_id: nil>\n```\n\nこんな感じで勝手に中間テーブルも作成してくれるので\n\n```ruby\n post.categories\n  Category Load (0.2ms)  SELECT  \"categories\".* FROM \"categories\" INNER JOIN \"category_posts\" ON \"categories\".\"id\" = \"category_posts\".\"category_id\" WHERE \"category_posts\".\"post_id\" = ? LIMIT ?  [[\"post_id\", 3], [\"LIMIT\", 11]]\n=> #<ActiveRecord::Associations::CollectionProxy [#<Category id: 3, name: \"fun!!\", created_at: \"2019-01-02 15:30:13\", updated_at: \"2019-01-02 15:30:13\", post_id: nil>, #<Category id: 4, name: \"楽しい\", created_at: \"2019-01-02 15:31:44\", updated_at: \"2019-01-02 15:31:44\", post_id: nil>]>\n```\n\nみたいにカテゴリ一覧が取得できる。\n\n中間テーブルが作成されることによってpostはたくさんのカテゴリを持つことができるしカテゴリもたくさんのpostを持つことができる。\n\n例として逆も行ってみる。\n\n\n```ruby \ncategory = Category.last\n  Category Load (0.3ms)  SELECT  \"categories\".* FROM \"categories\" ORDER BY \"categories\".\"id\" DESC LIMIT ?  [[\"LIMIT\", 1]]\n=> #<Category id: 4, name: \"楽しい\", created_at: \"2019-01-02 15:31:44\", updated_at: \"2019-01-02 15:31:44\", post_id: nil>\n\ncategory.posts.create(body: \'everyday ruby\')\n   (0.0ms)  begin transaction\n  Post Create (1.1ms)  INSERT INTO \"posts\" (\"body\", \"created_at\", \"updated_at\") VALUES (?, ?, ?)  [[\"body\", \"everyday ruby\"], [\"created_at\", \"2019-01-02 15:35:02.541378\"], [\"updated_at\", \"2019-01-02 15:35:02.541378\"]]\n  CategoryPost Create (0.1ms)  INSERT INTO \"category_posts\" (\"post_id\", \"category_id\", \"created_at\", \"updated_at\") VALUES (?, ?, ?, ?)  [[\"post_id\", 4], [\"category_id\", 4], [\"created_at\", \"2019-01-02 15:35:02.544299\"], [\"updated_at\", \"2019-01-02 15:35:02.544299\"]]\n   (14.4ms)  commit transaction\n=> #<Post id: 4, body: \"everyday ruby\", created_at: \"2019-01-02 15:35:02\", updated_at: \"2019-01-02 15:35:02\", category_id: nil>\n\n\ncategory.posts\n  Post Load (0.3ms)  SELECT  \"posts\".* FROM \"posts\" INNER JOIN \"category_posts\" ON \"posts\".\"id\" = \"category_posts\".\"post_id\" WHERE \"category_posts\".\"category_id\" = ? LIMIT ?  [[\"category_id\", 4], [\"LIMIT\", 11]]\n=> #<ActiveRecord::Associations::CollectionProxy [#<Post id: 3, body: \"hello world\", created_at: \"2019-01-02 15:29:45\", updated_at: \"2019-01-02 15:29:45\", category_id: nil>, #<Post id: 4, body: \"everyday ruby\", created_at: \"2019-01-02 15:35:02\", updated_at: \"2019-01-02 15:35:02\", category_id: nil>]>\n```\n\n問題なく取得できてる。\n\n\nおわり。\n\n\n\n','2020-04-23 13:39:00.073345','2020-04-23 13:39:00.073345'),(44,'railsでエラー処理','#初めに\nエラーハンドルの忘備録\n\n#rescue_from\n\napplication_controllerに\n\n```ruby\nrescue_from Exception, with: :rescue_from_exception\n\n\ndef rescue_from_exception(e)\n  @exception = e \n  render \'errors/500\'\nend \n\n```\n\nみたいな感じで使えます。\n\nあとはactive_recordのエラーハンドルで\n\n```ruby\nrescue_from ActiveRecord::RecordNotFound, with: :record_not_found \n\ndef record_not_found(e) \n  @exception = e\n  render \'errors/record_not_found\'\nend \n```\n\nとすればモデルなりデータがなかった時のエラーハンドルができる。\n\n\n#その他のエラーハンドルを実装する\n\n例えばForbiddenというエラーを実装したい場合は\n\nActionControllerErrorでForbiddenを定義してあげればよいです。\n\n```ruby \nclass Forbidden < ActionController::ActionControllerError\nend \n\nrescue_from Forbidden, with: :forbidden  \n\ndef forbidden(e)\n  @exception = e \n  render \'errors/500\'\nend \n```\n\n\nみたいな感じで使い\n\n\n```ruby \nraise Forbidden,\"テキスト\"\n```\n\nで呼び出せます。\n\nテキストに関してはあってもなくても大丈夫です。\n\n\n\n次にrouting_errorの実装の仕方です。\n\n\nroutes.rbに\n\n```ruby\nget \'*wrong_routes\' => \'routing_errors#index\'\n```\n\n```\nrails g controller routing_errors\n```\n\nとして\n\n\nrouting_errors_controller.rbに\n\nindexを定義する\n\n```ruby\ndef index \n  raise ActionController::RoutingError,\"以下のurlにはアクセスできません => #{request.path.inspect}\"\nend \n```\n\nあとはapplication_controller.rbに\n\n```ruby \nrescue_from ActionController::RoutingError, with: :routing_error \n\ndef routing_error(e)\n  @exception = e \n  render \'errors/routing_error\'\nend \n```\n\nと書いてerrorsフォルダの中にrouting_errorを書いたらおわり。\n\nこれに関してはrouting_errorsフォルダの下でもいいのかも知れないけどとりあえずまとめている。\n\n\nとりあえずこんな感じだけどapplication_controllerの中身がでかくなるのでその場合はconcernに入れてすっきりさせればOK\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n','2020-04-23 13:39:27.115908','2020-04-23 13:39:27.115908'),(45,'simple_formをbootstrap,日本語対応して使う','#初めに\nsimple_formを使うことが全くなかったのでちょっと使ってみた。\n\n#使い方\n\nbootstrapとsimple_formを使うので\n\n```ruby \ngem \'bootstrap\'\ngem \'jquery-rails\'\ngem \'popper_js\'\ngem \'tether-rails\'\ngem \'simple_form\'\n```\n\nをしておく\n\nassets/javascripts/application.jsに\n\n```javascript\n\n\n//= require jquery3\n//= require jquery_ujs\n//= require popper\n//= require tether\n//= require bootstrap\n```\n\nを追加する\n\nbundle installしたのちに\n\n```\nrails g simple_form:install --bootstrap\n```\n\nとすればbootstrapに対応してくれるはず\n\n\nとりあえず使ってみる\n\n\n```\n\nrails g scaffold user name:string\nrails db:migrate\n\n```\n\nlocalhost:3000/usersにアクセスするとbootstrapに対応していて中身を見ると\n\n```erb\n<%= simple_form_for(@user) do |f| %>\n  <%= f.error_notification %>\n  <%= f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present? %>\n\n  <div class=\"form-inputs\">\n    <%= f.input :name %>\n  </div>\n\n  <div class=\"form-actions\">\n    <%= f.button :submit %>\n  </div>\n<% end %>\n```\n\nとなっている\n\n\n今度は自動生成ではなく自分で作ってみる\n\n```\nrails g model person name:string age:integer\nrails db:migrate\nrails g controller people index new\n```\n\n\nとして\n\npeople_controller.rbを\n\n```ruby \n\nclass PeopleController < ApplicationController\n  def index\n  end\n\n  def new\n    @person = Person.new\n  end\n\n  def create\n    @person = Person.create(person_params)\n    redirect_to people_path\n  end \n\n\n  private \n\n  def person_params \n    params.require(:person).permit(:name,:age)\n  end \nend\n```\n\n\nとしてpersonを作成できるようにする\n\nconfig/routes.rbに\n\n```ruby \nresources :people\n```\n\nと加える。\n\n\n後は\n\nviews/people/new.html.erbを\n\n```erb \n<div class=\"container\">\n    <%= simple_form_for(@person) do |f| %>\n        <div class=\"form-group\">\n            <%= f.input :name %>\n        </div>\n        <div class=\"form-group\">\n            <%= f.input :age %>\n        </div>\n        <%= f.submit %>\n    <% end %>\n</div>\n```\n\nとすればbootstrapに対応してフォームができている。\n\nそれでも問題があり\n\n![simple_Form.png](https://qiita-image-store.s3.amazonaws.com/0/207921/c6600b6c-b5e1-b3df-cb11-c4272e62cc5e.png)\n\n\nこんな感じでNameやAgeと英語になってしまう。\n\n一応\n\n```erb \n<%= f.input name:, label: \'年齢\' %>\n```\n\nみたいな感じで変えられる\n\nほかの方法としてlocale/ja.ymlを作ってそこで日本語化の設定を書くという方法がある。\n\nそのためにはまずconfig/application.rbに\n\n```ruby\nconfig.i18n.default_locale = :ja \n```\n\nと書いておく必要がある\n\n\nそして\n\nconfig/localesいかにja.ymlファイルを作成して\n\n\n```yml \n\nja: \n  helpers:\n    submit:\n        create: \'登録する\'\n        update: \'更新する\'\n        submit: \'保存する\'\n  simple_form:\n    labels:\n      person:\n        name: \'ユーザー名\'\n        age: \'年齢\'\n    hints:\n      person:\n        name: \'サインインするユーザ名を入力してください\'\n        age: \'年齢を入力してください\'\n    placeholders:\n      person:\n        name: \'ユーザー名\'\n        age: \'年齢\'\n```\n\n\nそうすると\n\n\n![simple_form2.png](https://qiita-image-store.s3.amazonaws.com/0/207921/b993e8aa-2e8e-46ba-9ac9-12801a39620d.png)\n\n\nこんな感じでよくなってきた。\n\n\nhintは下の文字でplaceholderはフォームの中に書いてある文字。\n\n例えばhintを表示したくない場合は\n\n```erb\n<%= f.input :name, hint: false %>\n```\n\nとすれば表示されなくなります。\n\nまた必須項目であることを示すために何かマークや文字を入れたい場合は\n\n```yml \nrequired:\n        html: \'<abbr title=\"required\">必須</abbr>\'\n```\n\nみたいに書くらしいがこれだと\n\n![simple_form3.png](https://qiita-image-store.s3.amazonaws.com/0/207921/854c3e15-69c8-65d8-33c8-613f3f648273.png)\n\nみたいに必須の文字の下に変なのが出て嫌なので\n\n\n\n```yml \nsimple_form:\n    required:\n        html: \'<abbr class=\"nec\">必須</abbr>\'\n```\n\nとして\n\nassets/stylesheets/application.scssに\n\n```scss \n\n.nec {\n    background-color: red;\n    color: white;\n    font-weight: 500;\n    margin-left: 20px;\n    padding: 0px 4px 2px 4px;\n}\n```\n\nを追加すれば\n\n![simple_form4.png](https://qiita-image-store.s3.amazonaws.com/0/207921/b12353eb-db08-5736-c73d-c5dd53031739.png)\n\n\nいい感じになります。\n\n\n次にバリデーションです\n\npeople_controller.rbを\n\n```ruby \ndef create\n    @person = Person.create(person_params)\n    if @person.save \n      redirect_to people_path\n    else \n      render :new \n    end \n  end \n```\n\nこのようにして\n\nmodel/person.rbに\n\n```ruby \nvalidates :name, presence: true\n```\n\nを追加する。\n\nこのまま登録ボタンを押すと該当するフォームが赤くなるがメッセージが英語で出てしまう。\n\nこれを直すためにja.ymlファイルを編集しなければいけないがmodelの部分やエラーの部分などを日本語化しなくてはいけなくなり\n\nファイルがわけわからないことになってしまうのでya.ymlファイルを分けて保存できるようにする。\n\n\n\nconfig/application.rbに\n\n```ruby \nconfig.i18n.load_path += Dir[Rails.root.join(\'config\', \'locales\', \'**\', \'*.{rb,yml}\').to_s]\n```\n\nを追加\n\nlocalesの下に\n\ndefaults,models,viewsフォルダを作成する。\n\ndefaultsフォルダの中にja.ymlファイルを作成して中身を\n\nhttps://github.com/svenfuchs/rails-i18n/blob/master/rails/locale/ja.yml\n\nここからコピーしたものを貼る。\n\nmodelsフォルダのしたにpersonフォルダを作成、その下にja.ymlを作って\n\n```yml \n\nja:\n  activerecord:\n    models:\n      person: ユーザー\n    attributes:\n      person:\n        name: 名前\n        age: 年齢\n\n\n```\n\nを追加する\n\nviewsフォルダの下にja.ymlを作成して\n\n```yml \nja: \n  helpers:\n    submit:\n        create: \'登録する\'\n        update: \'更新する\'\n        submit: \'保存する\'\n  simple_form:\n    required:\n        html: \'<abbr class=\"nec\">必須</abbr>\'\n    labels:\n      person:\n        name: \'ユーザー名\'\n        age: \'年齢\'\n    hints:\n      person:\n        name: \'サインインするユーザ名を入力してください\'\n        age: \'半角英数字のみ使えます\'\n    placeholders:\n      person:\n        name: \'ユーザー名\'\n        age: \'年齢\'\n\n```\n\nこれを追加する。\n\nこれで日本語化ができたので\n\n試しにユーザー名を空欄にして登録ボタンを押すと\n\n\n![simple_form5.png](https://qiita-image-store.s3.amazonaws.com/0/207921/db84ebc2-7ad2-0fc9-44b9-fbe3b7822a81.png)\n\n\n\n\nみたいにできる！\n\n\n終わり:sunny:\n\n\n\n','2020-04-23 13:39:58.777292','2020-04-23 13:39:58.777292'),(46,'RailsのRemember_meをipアドレスを使って実装','#初めに\nRuby on Railsチュートリアルでremember_meの実装があったけど普通に難しい…\n\nそれでほかにやり方ないかと思ってipアドレスを使ってremember_meを実装してみる\n\n#実装\n\nとりあえず前提としてuserモデルがあってそこにemailとpassword_digestカラムがある。\nipモデルがありそこにaddressとuser_idカラムがある。\n\nsessions_controllerでログインを実装\n\ngemに関してはbcryptを使っている\n\n\nsessions_controllerはこんな感じになった\n\n```ruby:sessions_controller.rb\nclass SessionsController < ApplicationController\n  include SessionsHelper\n\n  def new\n  end\n\n  def create\n    user = User.find_by(email: params[:email])\n    if user && user.authenticate(params[:password])\n      login user \n      remember user \n      redirect_to users_path \n    else \n      render :new \n    end \n  end \n\n  def destroy\n    logout \n    logout_ip\n  end \nend\n```\n\nまずsessions_helperを使うのでインクルードしている。\n\nlogin(user),remember(user)やlogout,logout_ipに関してはsessions_helperで書いてある。\n\n\nそれでsessions_helperはこんな感じ\n\n```ruby:sessions_helper.rb\nmodule SessionsHelper\n\n    def login(user)\n        session[:user_id] = user.id  \n    end \n\n    def logout\n        session[:user_id] = nil\n    end \n\n    def logout_ip \n        ip = Ip.find_by(address: request.remote_ip)\n        ip.destroy\n    end \n\n    def remember(user)\n        Ip.create(address: request.remote_ip, user_id: user.id)\n    end \n\n    def remember_me\n        unless @current_user\n            address = request.remote_ip \n            ip = Ip.find_by(address: address)\n            if ip \n                session[:user_id] = ip.user_id \n                @current_user = User.find session[:user_id]\n            end\n        end \n    end \n\n\nend\n\n```\n\nrememberメソッドではIpモデルを作成していてaddressにパソコンのipアドレスを入れている。\n\nremember_meメソッドでは@current_userがなければIpモデルの中を検索してrequest.remote_ipをマッチするものがあったらログイン処理を行っている。\n\nこれでipアドレスを使って実装できた。\n\n\nlogoutではsession[:user_id]をnilにして、それだけではIpモデルが残っているのでログインしてしまうのでlogout_ipでIpのデータを削除している。\n\n#ちなみに\n\nremember_meを実装するなら多分Ruby on Rails tutorialのやり方のほうが良いんだと思う（知らないけど）\n\nRuby on Rails tutorialのやり方は\n\n\nuserモデルにremember_digestというカラムを作成してそこにSecureRandomで作ったトークンを入れてる\n\nそんで\n\n```ruby \ndef authenticated?(remember_token)\n  BCrypt::Password.new(remember_digest).is_password?(remember_token)\nend \n```\n\nっていうよくわからないメソッドで検証してるっぽい\n\nmodels/user.rbの全体像はこんな感じになる\n\n```ruby \n\nclass User < ApplicationRecord\n    has_secure_password\n\n    attr_accessor :remember_token\n\n\n    def User.digest(string)\n        cost = ActiveModel::SecurePassword.min_cost ? BCrypt::Engine::MIN_COST : BCrypt::Engine.cost\n        BCrypt::Password.create(string, cost: cost)\n    end \n\n    def User.new_token\n        SecureRandom.urlsafe_base64\n    end\n\n    def remember\n      self.remember_token = User.new_token\n      update_attribute(:remember_digest, User.digest(remember_token))\n    end\n\n    def authenticated?(remember_token)\n      BCrypt::Password.new(remember_digest).is_password?(remember_token)\n    end\n\n    def forget \n        update_attribute(:remember_digest, nil)\n    end \nend\n```\n\n\n正直全く読めない…\n\nそれでログイン処理を行うsessions_controllerは\n\n```ruby \nclass SessionsController < ApplicationController\n  include SessionsHelper\n\n  def new\n  end\n\n  def create\n    user = User.find_by(email: params[:email])\n    if user && user.authenticate(params[:password])\n      login user \n      remember user \n      redirect_to users_path\n    else \n      render :new \n    end \n  end \n\n\n  def destroy\n    logout \n  end \n\nend\n```\n\nこうなっていてlogin,remember,logoutはsessions_helperに書かれている\n\nsessions_helperはこんな感じ\n\n```ruby\n\nmodule SessionsHelper\n\n    def login(user)\n        session[:user_id] = user.id \n    end \n\n    def remember(user)\n        user.remember \n        cookies.permanent.signed[:user_id] = user.id \n        cookies.permanent[:remember_token] = user.remember_token \n    end \n\n    def current_user\n         if (user_id = session[:user_id])\n            @current_user ||= User.find user_id \n         elsif (user_id = cookies.signed[:user_id])\n            user = User.find user_id \n            if user && user.authenticated?(cookies[:remember_token])\n                login user \n                @current_user = user \n            end \n        end \n    end \n\n\n    def forget(user)\n        user.forget  \n        cookies.delete(:user_id)\n        cookies.delete(:remember_token)\n    end \n\n    def logout\n        forget(current_user)\n        session[:user_id] = nil\n        @current_user = nil\n    end \n\nend\n```\n\n永続的に値を保存する際にcookiesっていうのをつかうっぽくて\n\ncookies.permanentとすると20年間値を保持してくれるらしい\n\ncookies.signedは署名つきのcookieらしい。いみはわからないけど安全なんだと思う。\n\nremember_tokenはuser_idではないから直接見られても大丈夫ってことでsignedされてないのかな?\n\n\n\nlogoutメソッドでログアウト処理をしていてforgetでcookiesの削除とuserモデルのremember_digestを削除している。\n\n\nメソッド同士が絡み合ってて個人的には読みづらいけどこうゆう書き方のほうがデバックしやすかったりして良いんだと思う。\n\n\nおわり。\n\n\n\n\n\n\n','2020-04-23 13:40:20.981901','2020-04-23 13:40:20.981901'),(47,'RailsでFormObjectをつかったお問い合わせメール','#はじめに\nFormObjectなるものがあるらしく使ってみたくなったのでFormObjectをつかってお問い合わせメール機能を作成してみた。\n\n#FormObjectとは\nactivemodelの機能を使って実際にモデルとして存在するもの以外にもバリデーションをつかうことらしい\n\n#作っていく\n\n```\nrails new contact_form\nrails g controller contacts new\nrails g mailer inquiry\n```\n\nとして\n\nroutes.rbに\n\n```ruby \nresource :contact\n```\n\nを追加\n\napp以下にformsフォルダを作成してそこにcontact_form.rbを作成\n\n\n中身を\n\n```ruby \nclass ContactForm \n    include ActiveModel::Model \n\n    attr_accessor :email,:title,:body \n\n    validates :email, presence: true \n    validates :title, presence: true \n    validates :body, presence: true \n\n    def save\n        return false if invalid?\n        InquiryMailer.send_mail(email,title,body).deliver_now\n    end \nend \n```\n\nこうする。\n\nactivemodelをincludeしていることでvalidatesが使えたりする\n\nsaveはContactForm.saveの時に実行されて、もじemail,title,bodyがなかったらreturn falseされる感じになってる。\n\n```ruby \nContactForm.new(......)\n```\n\nみたいにするのでattr_accessorで使う値を指定してあげないといけない\n\n\n次にmailerを作っていく\n\n\n```ruby \nclass InquiryMailer < ApplicationMailer\n\n    def send_mail(email,title,body)\n        @email = email \n        @title = title \n        @body = body \n\n        mail(subject: \'お問い合わせ\', to: \'mysite@gmail.com\', from: email)\n    end \nend\n```\n\nあとはviews/inquiry_mailerの中にsend_mail.html.erb,send_mail.txt.erbを作成してあげればOK\n\ncontrollerはこんな感じ\n\n```ruby \nclass ContactsController < ApplicationController\n\n  def new\n    @contact = ContactForm.new(email: params[:email],title: params[:title],body: params[:body])\n  end\n\n  def create \n    @contact = ContactForm.new(email: params[:email],title: params[:title],body: params[:body])\n    if @contact.save \n    else \n      render :new \n    end \n  end\n\n  private \n\n  def contact_params\n  end \n\nend\n```\n\nなぜかストロングパラメータ使おうとしたらエラーでてめんどくさいからそのまま値をいれた。\n\n最後にview\n\n```erb \n\n<% if @contact.errors.any? %>\n    <% @contact.errors.full_messages.each do |msg| %>\n        <%= msg %>\n    <% end %>\n<% end %>\n\n<%= form_with url: contact_path, local: true do |f| %>\n    <%= f.label :email %>\n    <%= f.text_field :email %>\n    <%= f.label :title %>\n    <%= f.text_field :title %>\n    <%= f.label :body %>\n    <%= f.text_field :body %>\n    <%= f.submit %>\n<% end %>\n```\n\nactivemodelの機能が使えるのでエラーも表示できる。\n\nこれがform_objectの強みなんだと思う。\n\nおわり。\n\n\n\n','2020-04-23 13:40:42.933164','2020-04-23 13:40:42.933164'),(48,'N+1問題を実際に計測','#初めに\nN+1問題なるものがあってsqlのクエリがたくさん実行されることによって速度が遅くなることのことらしい。\n\n実際にどのくらい時間的な差があるのかrack-mini-profilerを使って検証してみた\n\n#検証条件\n\n検証した条件は\n\n10件のuserが5件のblogを持っている状況と\n\n1000件のuserが10件のblogを持っている状況\n\n#速度計測\n\nまず10件のuserがありそれぞれが5件のblogを持っている状況で\n\nincludesを使わない「（N+1）が実行されているとき」の速度\n\nつかうコードはこんな感じ\n\n```ruby \ndef index\n    @users = User.all\nend \n```\n\n```\ntime 377.2ms\ntime 428.8ms\ntime 353.1ms\n```\n\n![not_include_10user.png](https://qiita-image-store.s3.amazonaws.com/0/207921/f94eb7ea-a014-6fd6-cd56-c963f76ca105.png)\n\n\n\nという感じ\n\n\n\nクエリは12回実行されている\n\n\n次にincludesを使った場合\n\n```ruby \n  def index\n    @users = User.all.includes(:blogs)\n  end \n```\n\n```\n    time 459.5ms\n    time 360.5ms\n    time 376.5ms\n```\n\n![use_include_10user.png](https://qiita-image-store.s3.amazonaws.com/0/207921/08d02a16-d19d-1da9-9e70-b8170e8fb3c8.png)\n\n\n正直あんま変わらない\n\nでも恩恵を受けるのはデータの数が増えた場合だと思うので…\n\n\n次に1000件のuserが10件のblogを持っている状況で\n\nincludesを使わない場合\n\n```\n    time 2406ms\n    time 2320ms \n    time 2525.5ms\n```\n\n\n![not_include_1000users.png](https://qiita-image-store.s3.amazonaws.com/0/207921/baf0ed19-e083-160a-7a91-ed525aeb6fe8.png)\n\nクエリが1002回実行されている。\n\n\n次にincludesを使う場合\n\n```\n    time 700.2ms\n    time 673.5ms\n    time 775.5ms\n```\n\n\n![includes_1000_users.png](https://qiita-image-store.s3.amazonaws.com/0/207921/d7d27a90-bb2d-3397-e7c3-2013a563ec10.png)\n\n\n\n\nだいぶ差が出た。\n\n何の記事か忘れたけどページが表示されるまでに1秒以上かかるとユーザーは遅いと感じるらしいのでincludesを使わない場合はアウトですが\n\nincludesを使ったら1秒以内で表示されてるので良いですね\n\n\n\nおわり:sunny:\n\n','2020-04-23 13:41:10.741300','2020-04-23 13:41:10.741300'),(49,'ログインフォームにバリデーションをつける','#はじめに\nログインフォームにフォームオブジェクトを使ってバリデーションをつけます\n\n#準備\n\nとりあえず最初の設定とか準備\n\n```\nrails new login_form_validate\nrails g model user email:string password_digest:string\nrails db:migrate\nrails g controller users index new \nrails g controller sessions new \n```\n\ngemの設定\n\n```\ngem \'bcrypt\', \'~> 3.1.7\'\ngem \'simple_form\'\ngem \'bootstrap\'\ngem \'popper_js\'\ngem \'tether-rails\'\ngem \'jquery-rails\'\ngem \'validates_email_format_of\'\n```\n\nroutes.rb\n\n```ruby \nRails.application.routes.draw do\n  resources :sessions\n  resources :users\n  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html\nend\n```\n\nusers_controller\n\n```ruby \nclass UsersController < ApplicationController\n\n  def index \n  end \n\n  def new\n    @user = User.new\n  end\n\n  def create \n    @user = User.create(user_params)\n    if @user.save \n      redirect_to users_path \n    else \n      render :new \n    end \n  end \n\n  private \n\n  def user_params\n    params.require(:user).permit(:email,:password,:password_confirmation)\n  end \nend\n```\n\nusers_views\n\n```erb:new.html.erb \n<br>\n<br>\n<br>\n<br>\n<div class=\"container\">\n    <%= simple_form_for(@user) do |f| %>\n        <div class=\"form-group\">\n            <%= f.input :email %>\n        </div>\n        <div class=\"form-group\">\n            <%= f.input :password %>\n        </div>\n        <div class=\"form-group\">\n            <%= f.input :password_confirmation %>\n        </div>\n        <%= f.submit %>\n    <% end %>\n</div>\n```\n\n\ni18nの設定\n\nconfig/application.rbに\n\n```ruby\nconfig.i18n.default_locale = :ja\nconfig.i18n.load_path += Dir[Rails.root.join(\'config\', \'locales\', \'**\', \'*.{rb,yml}\').to_s]\n```\n\nを追加\n\nconfig以下にdefault,models,viewsフォルダ作成\n\ndefault以下にja.yml作成し\n\nhttps://github.com/svenfuchs/rails-i18n/blob/master/rails/locale/ja.yml\n\nこれを張り付ける\n\nmodels以下にuserフォルダ作成しその下にja.yml作成し\n\n```yml\nja:\n  activerecord:\n    models:\n      user: ユーザー\n    attributes:\n      user:\n        email: メールアドレス\n        password: パスワード\n```\n\nviewsフォルダ以下にja.ymlを作成して\n\n```yml \nja: \n  helpers:\n    submit:\n        create: \'登録する\'\n        update: \'更新する\'\n        submit: \'保存する\'\n  simple_form:\n    required:\n        html: \'<abbr class=\"nec\">必須</abbr>\'\n    labels:\n      user:\n        email: \'メールアドレス\'\n        password: \'パスワード\'\n    hints:\n      user:\n        email: \'サインインするメールアドレスを入力してください\'\n        password: \'半角英数字のみ使えます\'\n    placeholders:\n      user:\n        email: \'メールアドレス\'\n        password: \'パスワード\'\n```\n\nこれを張り付ける\n\nバリデーションを設定\n\nmodels/user.rbに\n\n```user.rb \n\nhas_secure_password\n\n    validates :email, presence: true \n    validates :email, :email_format => {:message => \'正しいメールアドレスを入力してください\'}\n    validates :password, presence: true \n```\n\nこれを追加\n\n\nこれで\n\n\n![qiita-form.png](https://qiita-image-store.s3.amazonaws.com/0/207921/0c54d424-bcdb-8ede-28ba-271aa2071941.png)\n\n\n\nこんな感じになってとりあえずuserを登録できるはず\n\n\n#本題\n\nformObjectを使ってログインフォームにバリデーションを追加します\n\nまずappいかにformsフォルダを作成その下に\n\nsession.rbを作成します\n\n\nそして中身を\n\n```ruby:session.rb \n\nclass Session\n    include ActiveModel::Model \n\n    attr_accessor :email, :password \n\n    validates :email, presence: true \n    validates :password, presence: true \n\n    def save \n        return false if invalid?\n        true\n    end \nend\n\n```\n\n\nこれを追加。\n\nまずActiveModel::Modelをインクルードしていることでバリデーションとか使える。\n\nattr_accessorは必要で使うカラムを書いておく。\n\n今回の場合はemailとpassword\n\nsaveに関しては.saveされるときに呼び出されてもしvalidatesに引っかかった場合はfalseがかえりそうでなければtrueがかえる。\n\nこの場合明示的にtrueを書いておかなきゃだめ。\n\n次にsessions_controller\n\n```ruby \nclass SessionsController < ApplicationController\n  def new\n    @login = Session.new\n  end\n\n  def create \n    @login = Session.new(email: params[:session][:email], password: params[:session][:password])\n    if @login.save && (@user = User.find_by(email: @login.email)) && @user.authenticate(@login.password)\n      redirect_to users_path\n    else \n      render :new \n    end \n  end \nend\n\n```\n\nこんな感じになる。\n\n先ほど作ったsessionクラスを使っている。\n\nちなみに基本的にform_objectのクラスの名前は何でも大丈夫ですが今回はsessionにしているのには理由があってこうすることでform_forの時にsessionというクラス名からsession_pathが自動的に作られるからです。\n\n例えばloginというクラス名のform_objectを作ってしまうとログインフォームで\n\n```erb\n\n<%= simple_form_for(@login) do |f| %>\n\n<% end %>\n```\n\nとしたときに自動生成されるパスはlogin_path method: :postつまり/logins/createになるからです。\n\n\n```ruby \nif @login.save && (@user = User.find_by(email: @login.email)) && @user.authenticate(@login.password)\n```\n\nここでfalseになるとrender :newが実行されます。\n\nこの時にちゃんとエラーメッセージが表示されます。\n\nちなみこのままだとエラーメッセージが英語になっていると思います。\n\n\nこれを英語にするためには\n\nlocals/models以下にsessionフォルダを作成し以下にja.ymlを作成\n\n中身を\n\n```yml\n\nja:\n  activemodel:\n    attributes:\n        session:\n            email: メールアドレス\n            password: パスワード\n```\n\nとすれば日本語になってくれます。\n\n#カスタムバリデーション\n\nform_objectにカスタムバリデーションを追加します\n\nemailが実在しなかったらemailは使われていないとエラーを出し、emailは存在するものだがパスワードが存在しないものの場合はemailではエラーを出さずpasswordのところでエラーを出すようにします。\n\nコードはこんな感じになります。\n\n```ruby \nclass Session\n    include ActiveModel::Model \n\n    attr_accessor :email, :password \n\n    validates :email, presence: true \n    validates :password, presence: true \n    validate  :true_email\n    validate  :true_password\n\n\n    def true_email\n        errors.add(:email, \"は使われていません。\") unless User.find_by(email: email)\n    end \n\n    def true_password\n        @user = User.find_by(email: email)\n        if @user \n            errors.add(:password, \"は正しくありません。\") unless @user.authenticate(password)\n        else  \n            errors.add(:password, \"は正しくありません。\")\n        end \n    end \n\n    def save \n        return false if invalid?\n        true\n    end \nend\n```\n\ntrue_emailとtrue_passwordというバリデーションを作成しています。\n\nエラーを発生させる場合はerrors.addで発生させます。\n\nちなみにerrors.add(:base, \"\")という書き方もできて全体のエラーとして表示したい場合に使えます。\n\nですがsimple_formでは表示されないので手を加える必要があります。\n\nviewに@login.errors[:base]みたいな感じで表示することができます\n\n終わり:sunny:\n\n\n\n\n\n\n\n','2020-04-23 13:41:33.610882','2020-04-23 13:41:33.610882'),(50,'railsで一意制約とかのリアルタイムバリデーション','#初めに\n\nRailsとjQueryでインクリメンタルサーチ\nhttps://qiita.com/hiroki_y/items/27d28a89b1c05ec75662\n\nこちらを参考にしてリアルタイムで一意制約などのバリデーションを実装してみます。\n\n例えばすでに登録されているユーザー名なのかをリアルタイムで表示したい場合とかです。\n\n\n\n\n#準備\n\nとりあえずsimple_formを使うのとそれに合わせてbootstrapも使うのでそれをやる\n\n以下を参考にしてください。\n\nhttps://qiita.com/sibakenY/items/951244811404b8e4d38b\n\nそして\n\n```\nrails g model user name:string email:string password:string\nrails g controller users \n```\n\nroutes.rbに\n\n```ruby \nRails.application.routes.draw do\n  resources :users, :only => [:index,:new,:create]\n  get \'users/name\'\n  get \'users/email\'\nend\n```\n\nとする。\n\nresourcesでshowが使える状況だとこのままだとusers/name,users/emailでshowアクションが行われてしまうのでonly,exceptでshowを使えなくするかしてください。\n\n\n#実装\n\nusers_controller viewに関してまず登録できるようにする\n\ncontroller\n\n```ruby:users_controller.rb\n\nclass UsersController < ApplicationController\n\n    def index \n    end \n\n    def new \n        @user = User.new \n    end \n\n    def create \n        @user = User.create(user_params)\n        if @user.save \n            redirect_to users_path \n        else \n            render :new     \n        end \n    end \n\n    private \n\n    def user_params \n        params.require(:user).permit(:name,:email,:password)\n    end     \nend\n```\n\n\nview\n\n```erb:new.html.erb\n<br>\n<br>\n<br>\n<br>\n<div class=\"container\">\n    <%= simple_form_for(@user) do |f| %>\n        <div class=\"form-input\">\n            <%= f.input :name, id: \"nameId\" %>\n        </div>\n        <div class=\"form-input\">\n            <%= f.input :email %>\n        </div>\n        <div class=\"form-input\">\n            <%= f.input :password %>\n        </div>\n\n        <div class=\"form-actions\">\n            <%= f.submit %>\n        </div>\n    <% end %>\n</div>\n\n```\n\n\nこれで登録ができます。\n\n\n次にinputのnameに文字を入力するたびにその名前が有効なのか表示できるようにしたいと思います。\n\nusers_controllerに\n\n```ruby:users_controller.rb\n    def name \n        raise unless params[:q]\n\n        result = nil\n        if User.find_by(name: params[:q])\n            result = \"findUser\" \n        else \n            result = \"notFind\"\n        end \n\n        render :json => { :result => result }\n        return true \n    end \n```\n\nこのメソッドを追加します。\n\nこれはparams[:q]があった場合User.find_by(name: params[:q])でユーザを探し\n\n存在した場合はresultにfindUserを存在しなかったらnotFindを入れてそれをrender :jsonでjson形式で渡しています。\n\n\n次にjavascriptを書いていきます。\n\njavascriptを書く場所はassets/javascriptの中だと思うのですが自分はあまりここに書くのが好きではないのでviewsのnew.html.erbに直接書いていきます。\n\nそれで書くのがこれ\n\n```javascript:new.html.erb \n<script>\nfunction nameSearch() {\n    clearTimeout(nameSearch.timeid);\n\n    nameSearch.timeid = setTimeout(function() {\n        \n        var query = tgtInput.value;\n        if (query.length == 0) return false;\n\n        jQuery.ajax({\n            type : \'GET\',\n            url : \'/users/name\',\n            data : {\n                q : query \n            },\n            timeout : 1500,\n            success:function(data){\n                if (data.result == \"notFind\") {\n                    console.log(\"you can create with this user name\")\n                    tgtInput.classList.remove(\'is-invalid\')\n                    tgtInput.classList.add(\'is-valid\')  \n                    validMessage.classList.add(\'text-success\')  \n                    validMessage.innerHTML = \"有効なユーザー名です\"\n                } else {\n                    console.log(\"you cannot create with this user name\")\n                    tgtInput.classList.remove(\'is-valid\')\n                    tgtInput.classList.add(\'is-invalid\')\n                    validMessage.classList.add(\'text-danger\')\n                    validMessage.innerHTML = \'既に使われているユーザー名です\'\n                }\n            }\n        });\n\n    \n        \n    },500);\n};\n\nnameSearch.timeid = \"\";\n\nvar tgtInput = document.getElementById(\'user_name\')\nvar validMessage = document.getElementById(\'nameValidOrInvalid\')\ntgtInput.onkeydown = nameSearch;\n</script>\n```\n\nまた文字を出力するために必要になるdivを追加する\n\n```erb:new.html.erb\n<div class=\"container\">\n    <%= simple_form_for(@user) do |f| %>\n        <div class=\"form-input\">\n            <%= f.input :name, id: \"nameId\" %>\n        </div>\n        <p id=\"nameValidOrInvalid\"></p> <= 追加\n        <div class=\"form-input\">\n            <%= f.input :email %>\n        </div>\n        <div class=\"form-input\">\n            <%= f.input :password %>\n        </div>\n\n        <div class=\"form-actions\">\n            <%= f.submit %>\n        </div>\n    <% end %>\n</div>\n\n```\n\n\nまず最初にnameSearchというfunctionを設定しています。\n\nこのnameSearchの中のjQuery.ajaxで非同期通信を行っています。\n\ndata : {}でパラメータを渡していて返ってくるデータはdata.resultで取得できます。\n\nformのidに関してはsimple_formを使うと勝手に設定してくれていて今回の場合はnameの部分のidはuser_nameになっています。\n\nsimple_formの場合インプットのクラス名にis-validがあると緑色にis-invalidがあると赤色になるのでこれを利用して\n\nclassList.remove,classList.addを使いクラス名を変更しています。\n\nそうするとこんな感じになると思います\n\n\n![form.png](https://qiita-image-store.s3.amazonaws.com/0/207921/420d6cf4-4e0f-c83a-3ad5-6d571f1264ca.png)\n\n\n\n#ついでにEmailでも同じことをしてみる\n\nEmailでもバリデーションを実装してみる\n\nemailの場合まずemailのフォーマットなのか（xxx@xxx.xxみたいな感じ）ということと既に登録されているのかを検証する\n\nまずusers_controller\n\n```ruby:users_controller\n\n    def email \n        raise unless params[:q]\n\n        reuslt = nil \n        if User.find_by(email: params[:q])\n            result = \"findEmail\"\n        else \n            result = \"notFind\"\n        end \n\n        render :json => { :result => result }\n        return true\n    end \n```\n\nこれを追加する\n\nそしてview側を\n\n```erb:new.html.erb\n<div class=\"container\">\n    <%= simple_form_for(@user) do |f| %>\n        <div class=\"form-input\">\n            <%= f.input :name, id: \"nameId\" %>\n        </div>\n        <p id=\"nameValidOrInvalid\"></p>\n        <div class=\"form-input\">\n            <%= f.input :email %>\n        </div>\n        <p id=\"emailValidOrInvalid\"></p> <= これを追加\n        <div class=\"form-input\">\n            <%= f.input :password %>\n        </div>\n\n        <div class=\"form-actions\">\n            <%= f.submit %>\n        </div>\n    <% end %>\n</div>\n```\n\njavascript部分は\n\n```javascript:new.html.erb\nfunction emailSearch() {\n    clearTimeout(emailSearch.timeid);\n\n    emailSearch.timeid = setTimeout(function() {\n        \n        var query = tgtInputEmail.value;\n        if (query.length == 0) return false;\n\n        jQuery.ajax({\n            type : \'GET\',\n            url : \'/users/email\',\n            data : {\n                q : query \n            },\n            timeout : 1500,\n            success:function(data){\n                if (data.result == \"notFind\") {\n                    console.log(\"you can create with this user name\")\n                    if (emailRegexp.test(tgtInputEmail.value)) {\n                        tgtInputEmail.classList.remove(\'is-invalid\')\n                        tgtInputEmail.classList.add(\'is-valid\')\n\n                        validMessage.classList.remove(\'text-danger\')  \n                        validMessage.classList.add(\'text-success\')  \n                        validMessage.innerHTML = \"有効なメールアドレスです\"\n                        console.log(\"changed success\")\n                    } else {\n                        tgtInputEmail.classList.remove(\'is-valid\')\n                        tgtInputEmail.classList.add(\'is-invalid\')\n\n                        validMessage.classList.remove(\'text-success\')\n                        validMessage.classList.add(\'text-danger\')\n                        validMessage.innerHTML = \'無効なメールアドレスです\'\n                        console.log(\"changed danger\")\n                    }\n                    \n                } else {\n                    console.log(\"you cannot create with this user name\")\n                    tgtInputEmail.classList.remove(\'is-valid\')\n                    tgtInputEmail.classList.add(\'is-invalid\')\n\n                    validMessage.classList.remove(\'text-success\')\n                    validMessage.classList.add(\'text-danger\')\n                    validMessage.innerHTML = \'既に使われているメールアドレスです\'\n                }\n            }\n        });   \n    },500);\n};\n\n\nvar tgtInputEmail = document.getElementById(\'user_email\')\nvar validMessageEmail = document.getElementById(\'emailValidOrInvalid\')\nvar emailRegexp = /^[A-Za-z0-9]{1}[A-Za-z0-9_.-]*@{1}[A-Za-z0-9_.-]{1,}\\.[A-Za-z0-9]{1,}$/;\ntgtInputEmail.onkeydown = emailSearch;\n```\n\nほとんどさっきと同じ。\n\n違いはdata.result == \"notFind\"の場合にまたifでemailのフォーマットなのかの条件分岐をしています。\n\n\nおわり:sunny:\n\n\n','2020-04-23 13:42:00.329922','2020-04-23 13:42:00.329922'),(51,'railsのキャッシュの速度を計測してみた','#初めに\ncacheについて調べて実際に計測してみた\n\n参考記事\nRailsのフラグメントキャッシュについて調べてみた\nhttps://qiita.com/suketa/items/eeae7e2196520323f694\n\n#環境\n\nuserが1000件あってそれを読み込む\n\n```\nrails dev:cache\n```\n\nでcacheを有効にする。\n\nusers_controllerに\n\n```ruby\ndef index\n  @users = User.all\nend \n```\n\n\n\nviewを\n\n\n\n\n```erb:index.html.erb\n    <h1>Users#index</h1>\n    <p>Find me in app/views/users/index.html.erb</p>\n    <% @users.each do |user| %>\n            <%= user.first_name %>\n            <%= user.last_name %>\n            <%= user.phone %>\n            <%= user.address %>\n    <% end %>\n```\n\n\nこれがキャッシュを使っていない普通の状態\n\n実行してみると\n\n```ruby \n\nCompleted 200 OK in 198ms (Views: 173.6ms | ActiveRecord: 11.2ms)\nCompleted 200 OK in 48ms (Views: 41.7ms | ActiveRecord: 2.4ms)\nCompleted 200 OK in 51ms (Views: 45.0ms | ActiveRecord: 2.6ms)\n```\n\n最初は200ms位でそのあとは50ms位です\n\n次にcacheを使ってみる\n\nまずこんな感じのコードを書いてみた\n\n\n```erb:index.html.erb\n\n    <h1>Users#index</h1>\n    <p>Find me in app/views/users/index.html.erb</p>\n    <% @users.each do |user| %>\n        <% cache user do %>\n            <%= user.first_name %>\n            <%= user.last_name %>\n            <%= user.phone %>\n            <%= user.address %>\n        <% end %>\n    <% end %>\n```\n\n\n結果はこんな感じ\n\n```ruby \nCompleted 200 OK in 993ms (Views: 976.4ms | ActiveRecord: 4.3ms)\nCompleted 200 OK in 364ms (Views: 343.8ms | ActiveRecord: 15.7ms)\nCompleted 200 OK in 393ms (Views: 386.7ms | ActiveRecord: 2.7ms)\n```\n\n時間はめっちゃ長くなった....\n\nこのキャッシュのやり方は調べたら結構出てきたやり方だけど使いどころは考えないといけないのかも…\n\nとくに内容が特に無く数が多くなるものに関してはあんま良くないのかな？わかんないけど…\n\n\n次にこのコード\n\nusers_controllerに\n\n```ruby\ndef index \n   @user_cache = User.last\n\n   @users = User.all\nend \n```\n\n\nviewは\n\n\n\n```erb:index.html.erb\n<% cache(@user_cache) do  %>\n\n    <h1>Users#index</h1>\n    <p>Find me in app/views/users/index.html.erb</p>\n    <% @users.each do |user| %>\n            <%= user.first_name %>\n            <%= user.last_name %>\n            <%= user.phone %>\n            <%= user.address %>\n    <% end %>\n\n<% end %>\n```\n\n\n\nこれで結果は\n\n\n```ruby \n\nCompleted 200 OK in 214ms (Views: 197.8ms | ActiveRecord: 3.5ms)\nCompleted 200 OK in 32ms (Views: 28.2ms | ActiveRecord: 0.2ms)\nCompleted 200 OK in 34ms (Views: 29.5ms | ActiveRecord: 0.3ms)\n```\n\n初回は197msと遅いがそのあとは30ms以下と早くなった。\n\n\n確かに二回目からの読み込みが少し早くなるけど正直cache使わないのとたいして変わらなかったのでまだあんまりcacheの良さがわからない…\n\n\n多分使い方なんだろうけどとりあえずcache使えば良いってわけではなさそう\n\nおわり:sunny:\n\n\n\n\n\n\n\n\n\n\n','2020-04-23 13:42:20.845925','2020-04-23 13:42:20.845925'),(52,'RailsでRedisを使ってpvカウント','#初めに\nrailsでredisを使ってpv数をカウントする機能を実装してみました。\n\n#設定\n\nredisをインストールする\n\n```\ngem \'redis-rails\'\n```\n\n\nbundle install\n\n#実装\n\ncontrollersのconcernsに\n\ncount_pv.rbファイルを作って\n\n中に\n\n```ruby \nmodule CountPv\n    extend ActiveSupport::Concern\n\n    def count_pv(action,controller)\n        redis = Redis.new\n        count = redis.get \"count_#{controller}_#{action}\"\n        redis.set \"count_#{controller}_#{action}\", count.to_i + 1\n        p redis.get \"count_#{controller}_#{action}\"\n    end \nend \n```\n\n\npvカウントしたいコントローラーで\n\n\n```ruby:users_controller.rb\nclass UsersController < ApplicationController\n  include CountPv\n\n  def index\n    count_pv(\"index\", \"users\")\n  end\n\n  def index_a\n    count_pv(\"index_a\",\"users\")\n  end \nend\n\n```\n\n\n\nみたいにする。\n\nこれでカウントできる。\n\n\n\n#終わりに\n\nredisの使い方がわからないんですがこれって\n\nredis-railsをbundle installすればredisって勝手に起動するんですかね？\n\nあとログが全くでないのはデフォルトなのかな？\n\n\nなんのログも出ないけど一応使えてるのが気持ち悪いし起動しなくても使えるからほんとにredis使えてるのか不安になる（笑）\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n','2020-04-23 13:42:39.674980','2020-04-23 13:42:39.674980'),(53,'Redisでランキングを実装','#初めに\nRedisでランキングを実装してみました。\n\n![rank.png](https://qiita-image-store.s3.amazonaws.com/0/207921/a2745f1b-6f58-326d-c50a-42778d119c92.png)\n\n\n\nこちらのサイトを参考にしました。\nRailsでRedisを使うメモ ランキングつくったり\nhttp://o.inchiki.jp/obbr/307\n\n#設定\n\nデザインはbootstrap\nダミーデータ作成にfakerをつかいました。\n\nあとredisを使うので\n\ngemfileに\n\n```\ngem \'redis\'\ngem \'bootstrap\'\ngem \'jquery-rails\'\ngem \'popper_js\'\ngem \'tether-rails\'\ngem \'faker\'\n```\n\nこんな感じで書いてbundle installしました。\n\nuserモデルを作成しました。\n\nbootstrapの設定fakerでのダミーデータ作成は省略\n\n\n#実装\n\n\nusers_controllerを\n\n```ruby:users_controller.rb\nclass UsersController < ApplicationController\n  def index\n    @ranking_users_data = (REDIS.zrevrangebyscore \"users\", 10, 0, withscores: true)\n  end\n\n  def add_score\n    user = User.find params[:id]\n    REDIS.zincrby \"users\", 1, user.id\n  end \nend\n```\n\nこんな感じにしました。\n\nREDISに関しては\n\n\nconfig/initializers以下にredis.rbを作成して中身に\n\n```ruby:redis.rb\nREDIS = Redis.new(host: \"localhost\", port: 6379)\n```\n\nと書くことで使えます。\n\n\n```ruby\nREDIS.zincrby \"users\", 1, user.id\n```\n\nみたいに書いているところでスコアのカウントをしています。\n\nusersがスコアを計算する大きなまとまりの名前でusersでなくても良いのですが今回はusersと名前を付けています。\n\nそのあとの1が追加する数です\n\nuser.idごとにスコアがカウントされていきます。\n\n集められたスコアをソートされた状態で出力するには\n\n```ruby \nREDIS.zrevrangebyscore \"users\", \"+inf\", 0, withscores: true\n```\n\nこのコードです。\nスコアが+inf（最大？）から0まで表示することになっています。\n\n例えばスコアが0から10まで表示したい場合は\n\n```ruby\nREDIS.zrevrangebyscore \"users\", 10, 0, withscores: true\n```\n\nあくまでスコアなので0から10番目を表示というわけではありません。\n\n\n自分の場合これだけだと登録されたばかりのuserはredisのusersのランキングの中に入らないので\n\n```ruby \nREDIS.zrevrangebyscore \"users\", 10, 0, withscores: true\n```\n\nこれで表示されませんでした。\n\nなのでuserが作成されたときに1スコアをたして表示されるようにしました。\n\n\nmodels/user.rb\n\n```ruby:user.rb\n\nclass User < ApplicationRecord\n    after_create{ REDIS.zincrby \"users\", 1, self.id}\nend\n```\n\n\nroutesは\n\n```ruby\nRails.application.routes.draw do\n  get \'users/index\'\n  post \'users/add_score/:id\', to: \'users#add_score\'\n  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html\nend\n```\n\nこのようにして\n\nviewsは\n\n```erb:index.html.erb\n<br>\n<br>\n<br>\n<br>\n<br>\n<div class=\"container\">\n    <table class=\"table table-dark\">\n        <thead>\n            <tr>\n            <th scope=\"col\">Ranking</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Count</th>\n            <th scope=\"col\">Like Button</th>\n            </tr>\n        </thead>\n        <tbody>\n            <% @ranking_users_data.each_with_index do |rank_data,index| %>\n                <tr>\n                    <th scope=\"row\"><%= index + 1 %></th>\n                    <td><%= user_name(rank_data[0]) %></td>\n                    <td class=\"count\"><%= rank_data[1].to_i %></td>\n                    <td>\n                        <%= button_to \"/users/add_score/#{rank_data[0]}\", class: \"like-btn\", id: \"addBtn\",  remote: true do %>\n                            <i class=\"fas fa-heart\" style=\"font-size: 15px;\" data-count=\"<%= index  %>\"></i>\n                        <% end %>\n\n                    </td>\n                </tr>\n            <% end %>\n        </tbody>\n    </table>\n</div>\n\n\n<script>\nvar allBtn = document.getElementsByClassName(\'like-btn\')\nvar allCount = document.getElementsByClassName(\'count\')\nvar btnLength = allBtn.length \nvar addLikeCount = function(i) {\n    allCount[i].innerHTML = parseInt(allCount[i].innerHTML) + 1\n}\nfor(var i = 0; i < btnLength; i++ ) {\n    allBtn[i].addEventListener(\'click\', function(a) {\n        let dataCount = this.getElementsByClassName(\'fas\')[0].dataset.count\n        addLikeCount(dataCount);\n    });\n}\n\n</script>\n```\n\n例のごとく自分はjavascriptをerbの中に書いています。\n\nとりあえず見た目はこんな感じになると思います。\n\n![rank.png](https://qiita-image-store.s3.amazonaws.com/0/207921/7a3ba290-0830-5cfb-f890-ba9d4401f48e.png)\n\n\nfontawesomeを使っているので\n\nlayoutsのheadの中に\n\n```\n<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.6.3/css/all.css\">\n```\n\nを書いて\n\nassets/stylesheets/application.scssに\n\n```scss\n@import \'/*\';\n@import \'bootstrap\';\n@import \'tether\';\n\nbody \n{\n    background: #95a5a6;\n}\n\n.like-btn\n{\n    transition: all 0.2s;\n    border: none !important;\n}\n\n.like-btn:hover\n{\n    background: rgb(224, 0, 37) !important;\n    color: white !important;\n    border: none !important;\n}\n```\n\nこんな感じにしてあると見た目は同じになると思います。\n\n\nこれでクリックされるたびにスコアが追加されていきます。\n\n\n#ちなみに\n\nredisに追加されているデータをみたい場合は\n\nrails cで\n\n```\nREDIS.keys\n```\n\nとすれば登録されているkeyが出て\n\n```\nREDIS.zrevrangebyscore \"users\", \"+inf\", 0, withscores: true\n```\n\nと入力すればuser.idとスコアが二次配列の形で表示されると思います。\n\nおわり:sunny:\n\n\n\n\n\n\n\n\n\n','2020-04-23 13:42:57.255661','2020-04-23 13:42:57.255661'),(54,'railsでjavascript,scssファイルを指定して読み込む','#初めに\njavascriptってすべてのページで同じファイルを読み込まれてると都合悪いですよね。\n\nエラーとか出てしまうし。\n\nなのでいままではerb内の最後にjavascriptを書いていたのですが他の方法が分かったので書きます。\n\nちなみにこの記事のまんまですが読み込みのところで一か所うまくいかなかったところがありました。\n\n[rails] 特定のページのみで実行するJavascript\nhttps://www.ohmyenter.com/execute-javascript-on-a-page-on-rails/\n\n#実装\n\nまずassets/javascript内にon_page_load.coffeeを作成します。\n\n\nその中に\n\n\nhttps://www.ohmyenter.com/execute-javascript-on-a-page-on-rails/\n\nこの記事に書いてあるコードをコピペします。\n\nこの記事ではcoffeeで書いてあります。\n\nまたjqueryが必要なのでjqueryを使えるようにしておきます。\n\nあとはapplication.html.erbでbodyを\n\n```erb \n<body data-controller=\"<%= controller_name %>\" data-action=\"<%= action_name %>\">\n```\n\nこんな感じにします。\n\n\n\n基本的にこれで\n\n```javascript\n\nonPageLoad(\'users#index\', function() {\n\n});\n\n```\n\nこんな感じで使えるようになります。\n\nこれならusersコントローラーのindexアクションで使うjavascriptっていう感じ\n\nですが自分の場合うまくいかず....\n\n\n読み込むときにon_page_load.coffeeはrequireで読み込むようにしました。\n\n\n```javascript \n\n\n//= require jquery\n//= require rails-ujs\n//= require activestorage\n//= require turbolinks\n//= require on_page_load\n//= require users\n//= require books\n\n```\n\nこんな感じに\n\nrequireでon_page_loadを読み込んでいるので\n\nrequire_tree . でまた同じファイルが読み込まれちゃうんじゃないかと思ってrequire_treeを削除して\n\nファイルを指定して読み込んでいます。\n\n\nめでたしめでたし:sunny:\n\n\n\n\n#cssのコントローラー別読み込み\n\ncssの場合まず\n\napplication.html.erbのbodyを\n\n```\n<body class=\'<%= controller_name %>\'>\n```\n\nこうします\n\nそして\n\nscssファイルで\n\n```scss \n.users\n{\n  background: red;\n\n  .title\n  {\n     color: white;\n  }\n}\n.books \n{\n  background: blue;\n\n  .title\n  {\n     color: black;\n  }\n}\n```\n\nとすればコントローラーごとにcssをかえることができます。\n\n\nおわり:sunny:\n\n\n\n\n\n\n\n\n\n\n\n','2020-04-23 13:43:14.545658','2020-04-23 13:43:14.545658'),(55,'Railsのcontroller,routesの書き方とについて考えてみた。','#初めに\n\nこんな記事を読みました。\n\nDHHはどのようにRailsのコントローラを書くのか\nhttps://postd.cc/how-dhh-organizes-his-rails-controllers/\n\nこの記事の引用なのですがまとめると\n\n「コントローラはデフォルトのCRUDアクションindex、show、new、edit、create、update、destroyのみを使うべき」\n\nとDHHという人は考えているとのこと。\n\nこれについて記事の筆者は意見を言っていて気になる人は見に行ってほしいのですが\n\nとりあえずcontrollerを細かく分けで基本的にcrudを書くようなやり方を実践してみました。\n\nまたコントローラーが増えることによって逆にわかりづらくなるのを防ぐために\n\nuserに関係するものは\n\nusers/***_controller.rb\n\nみたいに保存しました。\n\n#実装\n\nまず\n\n```\nrails new app\nrails g model user name\nrails g controller users\n```\n\nとします。\n\nこれでroutes.rbに\n\n```\nresources :users\n```\n\nとかけばusersにかんして\n\ncrudの設定が終わります。\n\n\n#userにstatusを付ける\n次にuserにstatusカラムを追加してそこにactive,stopという属性をenumを使って実装します\n\n```\nrails g migration add_status_to_users\n```\n\nとしてマイグレーションファイルに\n\n```\nadd_column :users, :status, :integer, default: 0\n```\n\nとします。\n\nまたモデルファイルに\n\n```ruby:user.rb\nenum status: { active: 0, stop: 1}\n```\n\nこれを追加\n\nこれでuserを作成するとstatusがactiveのuserが作成できます。\n\nここでactive userとstop userの表示をusers_controllerで実装するのではなくほかにコントローラーを作って実装します。\n\nこの時に\n\n```\nrails g controller actives \n```\n\nとするのではなく\n\n```\nrails g controller users::actives\n```\n\nとしました。\n\nこれでcontrollers/users以下にactives_controller.rbが作成されます。\n\n同じように\n\n```\nrails g controller users:stops\n```\n\nとしました。\n\n次にroutes.rbですが\n\n```ruby \nresources :users do \n  resources :actives, only: [:index, :create]\n  resources :stops,   only: [:index, :create]\nend \n```\n\nこのようにするとcontrollers/以下のstops_controller.rbを探しに行ってしまします。\n\ncontrollers/users/以下のファイルを探しに行ってくれるようにするために\n\n```ruby \nresources :users do \n   scope module: :users do \n     resources :actives, only: [:index, :create]\n     resources :stops,   only: [:index, :create]\n   end \nend \n```\n\nとすることでちゃんとcontrollers/users以下のファイルへのroutesを作成できました。\n\nactives_controller.rb,stops_controller.rbの中身はこんな感じ\n\n```ruby:actives_controller.rb\nclass Users::ActivesController < ApplicationController\n\n    def index\n        @users = User.active \n    end \n\n    def create \n        user = User.find params[:user_id]\n        user.active!\n        redirect_to users_path\n    end \nend\n\n```\n\n```ruby:stops_controller.rb\nclass Users::StopsController < ApplicationController\n\n    def index \n        @users = User.stop\n    end \n\n    def create \n        user = User.find params[:user_id]\n        user.stop!\n        redirect_to users_path\n    end \nend\n\n```\n\n実際に呼び出す際にネストさせたroutesのurlヘルパーの書き方は\n\nusers/index.html.erbに\n\n```erb \n<% @users.each do |user| %>\n    <p><%= user.name %></p>\n    <p><%= user.status %></p>\n    <%= link_to \"stop_user\", user_stops_path(user), method: :post %>\n    <%= link_to \"active_user\", user_actives_path(user), method: :post %>\n<% end %>\n```\n\nみたいにすればOKです。\n\n上の場合はstops#create,actives#createへのroutesですがネストさせた場合\n\n```\nparams[:id]\n```\n\nではなく\n\n```\nparams[:user_id]\n```\n\nのように取得するようになります。\n\n\n\n\n#follow機能\n\nfollowみたいな機能に関してもuserに関係するものなのでusers以下にcontroller.rbが作成されたほうが良いのかと思いました。\n\nなので\n\n```\nrails g model follow user_id:integer follow_id:integer\n```\n\n同じデータが複数保存されないように\n\nmodels/follow.rbに\n\n```ruby \n    validate :already_follow\n\n    def already_follow\n        if Follow.exists?(user_id: user_id, follow_id: follow_id)\n            errors.add(:user_id, \"すでにフォローしています\")\n        end \n    end \n```\n\nとしました。\n\nそして\n\n```\nrails g controller users::follows\n```\n\nfollows_controller.rbに\n\n```ruby \nclass Users::FollowsController < ApplicationController\n\n    def index \n        @follow_users = Follow.where(follow_id: session[:user_id]) \n    end \n\n    def create \n        if session[:user_id]\n            follow = Follow.new(follow_id: session[:user_id], user_id: params[:user_id])\n            follow.save \n            redirect_to users_path\n        else \n            redirect_to users_path\n        end \n    end \nend\n```\n\nとすればフォロー機能が作成できました。\n\n\n#結果\n\nこれでuserのstatusを変更したりuserをfollowしたりする機能をcontrollerごとに分けて作ってみました。\n\n結果として\n\ncontrollers/users以下のコントローラーはuserに関係するものだとすぐにわかるし\n\n一つ一つのコントローラーの中身がかなりシンプルのなりました。\n\n\n逆に普通に\n\n```\nrails g controller follows\nrails g controller actives\nrails g controller stops\n```\n\nみたいにしてコントローラーを細かく作っていくと逆に何が何だか分からなくなるかもしれないので\n\nコントローラーにcrudしか書かないのであればネストさせるのは必須なのかなと思いました。\n\nおわり:sunny:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n','2020-04-23 13:43:31.149428','2020-04-23 13:43:31.149428'),(56,'anime.jsとanimete.cssを使ってサイトを作ってみた。','#はじめに\nanime.jsを少し触ってこんなのを作ってみました。\n\nhttps://twitter.com/SibakenY/status/1091342448696016897\n\n#作り方\n\nまず\n\nhttps://animejs.com/\n\nにアクセスしてanime.min.jsファイルをコピーして読み込みます。\n\nanimate.cssはこのサイト\n\nhttps://daneden.github.io/animate.css/\n\n\nそれで使い方ですが\n\nanimate.cssは簡単で\n\nアニメーションさせたい要素のクラスに\n\n```html\n<div class=\"animated bounceInDown\">\n</div>\n```\n\nみたいにするだけです。\n\nめちゃ簡単で結構かっこよく動いてくれます。\n\n\nちなみにページをスクロールして画面上に来た時にアニメーションさせたい場合は\n\nwow.jsを使うと実装出来ます。\n\nサイトはこちら\n\nhttps://wowjs.uk/\n\nwow.jsを読み込んだ状態であれば\n\n```html\n<div class=\"wow bounceInDown\">\n</div>\n```\n\nとすれば画面上に来た時にアニメーションしてくれます。\n\n\n次にanime.jsです\n\n\nanimejsの使い方はanimejs.comのdocumentを読むのが一番わかりやすいかもしれません。\n\n動きとコードが載っているので参考になります。\n\n使い方は\n\n```javascript\n anime({\n      targets: \'.st0\',\n      duration: 1500,\n      delay: 4000\n  })\n```\n\nみたいな感じで使います。\n\nまずアニメーションさせたい要素のクラス名もしくはidをtargetsで指定してあげます。\n\n複数指定することもできます。\n\ndurationはアニメーションの時間\ndelayは文字通り遅延させたいときに使います。\n\nこのtargets,duration,delayでアニメーションに関しての基本的な設定をします。\n\n次にどのようにアニメーションさせたいか指定します。\n\n例えば\n\n```javascript\nanime({\n      targets: \'.st0\',\n      duration: 1500,\n      delay: 4000,\n      translateX: 1000\n  })\n```\n\nこのようにすれば4秒待った後にx方向に1000px移動します。\n\ntranslateYにすればy方向に移動しますし\n\nrotate:100とすれば100度回転してくれます。\n\n使える値をまとめるをこんな感じになります。\n\n\n\n| 名前 | 用途 | 注意 |\n|:-----------|-----------------|-----------|\n| translateX | X方向にnpx移動 |\n| translateY | Y方向にnpx移動 |\n| rotate | n deg回転 | 360degのことを1turnともかけるっぽい |\n| scale | サイズをnに |\n| easing | 移動の仕方 | easeInOutExpoがかっこいい |\n| loop | true,falseで指定 |\n| autoplay | 自動再生,truefalseで指定 |\n\n\n基本的にはこんな感じだと思う。\n\n\n自分はアニメーションの実装にsvgを使った。\n\nsvgってのがそもそもわからない状況だったのですが使ってみたら結構便利で\n\n例えば文字をアニメーションさせながら表示させたい場合とかに使いました。\n\nまずadobeのイラストレーターが必要になります。\n\n自分は無料体験ができたのでそれを使っています。\n\n加入すると一か月1000円くらいした気がする。\n\n\nまずイラストレーターを開いて\n\n文字を入力\n\n名前を付けて保存をおして保存の形式にSVGを指定して\n\n![adobeqiita.png](https://qiita-image-store.s3.amazonaws.com/0/207921/5fea0de3-7cde-bdec-b5c3-6df6103c6a48.png)\n\nここでアウトラインに変換を指定します\n\nここで結構つまずいた…\n\nそしたら\n\n```\n\n<svg version=\"1.1\" id=\"レイヤー_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n                    y=\"0px\" viewBox=\"0 0 1920 1080\" style=\"enable-background:new 0 0 1920 1080;\" xml:space=\"preserve\">\n                  <g>\n                    <path class=\"st0 p1\" d=\"M499.2,437.9c0.2,8.2,1,19.2,2.4,32.8v0.6c0,1.1-1.2,1.7-3.5,1.7c-0.9,0-1.4-0.5-1.7-1.5c-3.5-10.6-8.7-18.5-15.7-23.7\n                      c-6-4.6-12.8-6.8-20.4-6.8c-8.9,0-15.9,2.7-21.1,8.2c-4.3,4.7-6.5,10.6-6.5,17.7c0,12,8,21.6,24.1,28.8l11,4.9\n                      c15.5,6.9,26.4,14.3,32.5,22.3c5.2,6.7,7.8,14.7,7.8,24.1c0,14.7-5.2,26.1-15.6,34c-9.3,7.1-21.8,10.6-37.6,10.6\n                      c-11.4,0-24.2-2.5-38.3-7.5c-2.8-9.5-5.1-20.1-6.8-31.8l-0.2-1.7c0-1.5,1.1-2.2,3.3-2.2c1.1,0,1.8,0.4,2.1,1.2\n                      c4.4,11.6,10.8,20.6,19.3,26.9c7.1,5.5,14.8,8.2,23.1,8.2c10.6,0,18.9-3.2,25-9.5c5.2-5.4,7.8-12.1,7.8-20.2\n                      c0-8.4-2.6-15.4-7.9-21.2c-4.8-5.2-12.7-10.4-23.6-15.8l-11-5.3c-12.6-6.2-21.4-12.7-26.2-19.5c-4.3-6-6.4-13.2-6.4-21.7\n                      c0-11.6,4.7-21,14.2-28.1c8.3-6.2,18.7-9.3,31.1-9.3c6.3,0,12.3,0.9,18,2.6c4.1,1.2,8.7,1.9,13.8,1.9\n                      C494.5,438.5,497,438.3,499.2,437.9z\"/>\n                    <path class=\"st0 p2\" d=\"M532.1,582.6c9-0.7,14.3-2.4,15.9-5.1c1.3-2,2.1-4.7,2.4-8.2c0.4-3.6,0.5-10.2,0.5-19.7v-74.5c0-11.1-0.2-18.1-0.5-21.1\n                      c-0.3-2.3-1-4.2-2.1-5.8c-1.7-2.6-7.5-4.3-17.3-5.1c-1.1-0.1-1.7-1-1.7-2.5c0-2.3,0.6-3.4,1.7-3.4c14.4,0.7,23.9,1,28.6,1\n                      c5.1,0,14.5-0.3,28-1c1.5,0,2.2,1.1,2.2,3.4c0,1.5-0.7,2.4-2.2,2.5c-9,0.9-14.3,2.6-15.9,5.1c-1.9,2.9-2.9,11.9-2.9,26.9v82.6\n                      c0,10.7,0.9,17.3,2.7,19.8c1.1,1.5,2.8,2.6,5.1,3.3c2.4,0.7,6.5,1.3,12.2,1.8c1.4,0.1,2.1,1,2.1,2.7c0,1.9-0.7,2.8-2.1,2.8\n                      c-11.6-0.6-21.3-0.8-29.2-0.8s-17.1,0.3-27.5,0.8c-1.1,0-1.7-0.9-1.7-2.8C530.3,583.7,530.9,582.8,532.1,582.6z\"/>\n                    <path class=\"st0 p3\" d=\"M689.6,508.6c16.7,1.7,29.1,6.5,37.2,14.3c6.6,6.3,9.9,14.1,9.9,23.5c0,13.8-5.7,24.4-17,31.7\n                      c-10.6,6.8-25.3,10.3-44.4,10.3l-38.6-1c-9.6,0-18.3,0.2-26.3,0.6c-1.1,0-1.7-0.9-1.7-2.8c0-1.6,0.6-2.5,1.7-2.7\n                      c9.6-0.7,15.1-2.4,16.7-5.1c1.8-3,2.7-12.3,2.7-27.9v-74.5c0-11-0.2-18.2-0.6-21.6c-0.3-2.3-0.9-4.2-1.7-5.5\n                      c-1.8-2.6-7.8-4.2-18.1-4.9c-1.3-0.1-1.9-1-1.9-2.7c0-2.1,0.6-3.2,1.9-3.2c11.9,0.6,20.9,0.8,27,0.8l36.5-1.2\n                      c20.5,0,35.2,3.5,44,10.4c7.2,5.5,10.8,13.6,10.8,24.3c0,9.3-3.3,16.8-9.9,22.6c-6.1,5.3-15.4,9.7-28,13.3V508.6z M647.5,505.4\n                      c2.4,0.1,6.5,0.2,12.3,0.2c31.9,0,47.8-10.8,47.8-32.5c0-9.7-3.5-17-10.5-22.1c-6.4-4.6-15.4-6.9-27.1-6.9\n                      c-11.1,0-17.7,1.6-19.9,4.7c-1.8,2.6-2.7,11.4-2.7,26.3V505.4z M647.5,512.9v36.7c0,9.5,0.3,15.9,0.9,19.4c0.4,2.6,1.2,4.8,2.5,6.7\n                      c2.6,3.8,10.4,5.7,23.4,5.7c14.5,0,25.5-3.6,32.7-10.9c6.1-5.9,9.1-13.9,9.1-24c0-22.6-17.8-33.9-53.5-33.9\n                      C656.5,512.7,651.4,512.7,647.5,512.9z\"/>\n                    <path class=\"st0 p4\" d=\"M848.4,529.1c-10.3-0.6-18.6-0.8-25-0.8c-9.7,0-18.8,0.3-27.4,0.8l-9,23.7c-3.4,8.6-5,15.2-5,19.6c0,3.6,1.3,6.1,3.9,7.5\n                      c2.6,1.3,7.4,2.2,14.5,2.7c1.3,0.1,1.9,1,1.9,2.7c0,1.9-0.6,2.8-1.9,2.8c-15.9-0.4-24.7-0.6-26.3-0.6c-7.9,0-15.3,0.2-22.1,0.6\n                      c-1.3,0-1.9-0.9-1.9-2.8c0-1.7,0.6-2.6,1.9-2.7c5.8-0.8,10-2.5,12.5-5.1c3.3-3.5,7.6-12,12.9-25.5l25.9-66.5\n                      c8.6-22.4,14.2-37.5,16.6-45.2l12.5-6c1,0,1.6,0.6,1.9,1.8c4.5,14.6,10.2,31.4,17.1,50.5l24.6,67.1c4.6,12.4,8.1,20.4,10.7,23.9\n                      c2,2.8,7.2,4.5,15.7,5.1c1.6,0.1,2.5,1,2.5,2.7c0,1.9-0.8,2.8-2.4,2.8c-16.3-0.4-25.8-0.6-28.6-0.6c-2.4,0-11.7,0.2-28,0.6\n                      c-1.3,0-1.9-0.9-1.9-2.8c0-1.7,0.6-2.6,1.9-2.7c7.6-0.6,12.4-1.6,14.5-3c1.6-1.1,2.4-3.1,2.4-5.9c0-2.6-1.7-8.6-5-18L848.4,529.1z\n                      M822.7,457c-1.1,3.1-2.8,7.8-5.2,14c-2.6,6.9-4.6,12.2-6,15.8l-12.4,33.8c5.2,0.3,13.3,0.4,24.3,0.4c10.1,0,17.4-0.1,22.1-0.4\n                      L833,486.7C829.8,477.6,826.4,467.6,822.7,457z\"/>\n                    <path class=\"st0 p5\" d=\"M952.9,509v44c0,9.7,0.2,16,0.5,18.8c0.3,2.1,1,4,2.1,5.7c1.5,2.6,7.2,4.3,17.1,5.1c1.3,0.1,1.9,1,1.9,2.7\n                      c0,1.9-0.6,2.8-1.9,2.8c-11.8-0.6-21.4-0.8-28.6-0.8c-8.1,0-17.3,0.3-27.7,0.8c-1.3,0-1.9-0.9-1.9-2.8c0-1.7,0.6-2.6,1.9-2.7\n                      c9.1-0.7,14.5-2.4,16.3-5.1c1.8-3,2.7-12.3,2.7-27.9v-74.5c0-10.9-0.2-17.8-0.5-20.9c-0.3-2.4-0.9-4.4-1.9-5.9\n                      c-1.9-2.7-7.8-4.4-17.5-5.1c-1.1-0.1-1.7-1-1.7-2.5c0-2.3,0.6-3.4,1.7-3.4c9.5,0.7,19.1,1,28.8,1c9.1,0,18.2-0.3,27.4-1\n                      c1.4,0,2,1.1,2,3.4c0,1.5-0.7,2.4-2,2.5c-8.8,0.9-14.1,2.6-15.7,5.1c-1.9,3.1-2.9,12.1-2.9,26.9V507c6.3-5.2,12.4-10.6,18.2-16.2\n                      l24.1-22.9c10.8-10.2,16.3-16.8,16.3-19.8c0-1.5-0.8-2.6-2.4-3.2c-1.6-0.6-4.7-1-9.3-1.5c-1.4-0.1-2.1-1-2.1-2.5c0-2,0.8-3,2.2-3\n                      c10.1,0.3,18.1,0.4,24.1,0.4c7.6,0,16-0.3,25.2-1c1.3,0,1.9,1.1,1.9,3.2c0,1.7-0.7,2.6-2,2.7c-7,0.8-13.1,2.8-18.4,6\n                      c-3.9,2.4-12.6,9.6-25.9,21.5l-21,18.7c-2.4,2.2-5.2,4.7-8.3,7.6c-3.2,2.9-5.2,4.7-5.9,5.4c2.6,3,20.4,22,53.2,57.1\n                      c10.1,10.5,17.6,17.1,22.6,19.7c3,1.5,7.7,2.7,14.1,3.4c1.3,0.1,1.9,1,1.9,2.7c0,1.9-0.6,2.8-1.9,2.8c-6.3-0.6-12.9-0.8-19.8-0.8\n                      c-6.3,0-11.6,0.1-15.9,0.2c-6.9-8.6-13.4-16.1-19.4-22.5C996.5,556.6,979.3,538,952.9,509z\"/>\n                    <path class=\"st0 p6\" d=\"M1183.5,588.1c-20.5-0.8-38.5-1.1-54.2-1.1c-17.5,0-36.3,0.4-56.4,1.1c-1.1,0-1.7-0.9-1.7-2.8c0-1.6,0.6-2.5,1.7-2.7\n                      c5.8-0.6,9.7-1.2,11.9-2c1.7-0.7,3.1-1.7,4.1-3.1c1.8-2.6,2.7-11.9,2.7-27.9v-74.5c0-11.1-0.2-18.1-0.5-21.3\n                      c-0.3-2.3-0.9-4.3-1.9-5.8c-1.8-2.6-7.6-4.2-17.3-4.9c-1.3-0.1-1.9-1-1.9-2.5c0-2.3,0.6-3.4,1.9-3.4c14.7,0.7,32.9,1,54.7,1\n                      c20.1,0,37.8-0.3,53.2-1c1.9,17.8,3.1,29,3.7,33.6v0.6c0,1.2-1.2,1.9-3.5,1.9c-0.8,0-1.4-0.4-1.7-1.2c-3.2-9.3-7.9-16.4-14-21.1\n                      c-5.3-4.1-16.4-6.2-33.1-6.2c-10.4,0-16.8,1.7-19.1,5.1c-1.6,2.3-2.4,8.2-2.4,17.7v37.5c2.5,0.1,7.2,0.2,14,0.2\n                      c15.7,0,25.3-1.4,28.9-4.3c3.8-2.9,6-7.4,6.6-13.6c0.1-1.2,0.9-1.9,2.4-1.9c2.2,0,3.3,0.6,3.3,1.9c-0.3,9.7-0.4,16.6-0.4,20.8\n                      c0,5.9,0.1,13.9,0.4,23.9c0,1.2-1.1,1.9-3.3,1.9c-1.4,0-2.2-0.7-2.4-2.1c-0.6-7.8-3-13.1-7.1-15.8c-3.9-2.7-13.3-4-28.5-4\n                      c-4.6,0-9.2,0.1-14,0.4v36.9c0,13.9,1,22.3,3.1,25.3c1.6,2.2,3.9,3.7,7.1,4.6c3.1,0.8,8.1,1.1,14.8,1.1c10.7,0,19-0.7,25-2.2\n                      c5.1-1.2,9.6-3.1,13.6-5.9c5.8-4.1,11.3-11.2,16.4-21.3c0.4-1,1-1.5,1.6-1.5c2.8,0,4.2,0.8,4.2,2.4l-0.2,1\n                      C1192.3,564.4,1188.5,576,1183.5,588.1z\"/>\n                    <path class=\"st0 p7\" d=\"M1243.6,459.6h-2.5l0.9,90.4c0.2,15.1,1.4,24.4,3.5,27.7c1.9,2.8,7.5,4.6,16.9,5.3c1.1,0.2,1.7,1,1.7,2.5\n                      c0,1.7-0.6,2.6-1.7,2.6c-2.1-0.1-5-0.1-8.8-0.2c-7.6-0.3-13-0.4-16.3-0.4c-2.5,0-10.8,0.2-25,0.6c-1.4,0-2.1-0.9-2.1-2.6\n                      c0-1.5,0.7-2.3,2.1-2.5c8.5-0.8,13.5-2.7,15.2-5.5c2.3-4,3.5-13.2,3.7-27.5l1.3-78.5c0.2-11.5-0.9-18.8-3.3-21.9\n                      c-2.5-3.2-8.5-5.3-18-6.2c-1.4-0.1-2.1-1-2.1-2.5c0-2.4,0.7-3.6,2.1-3.6c7.6,0.4,14.3,0.6,20.2,0.6c7,0,13.6-0.1,19.9-0.2\n                      c4,7.4,9.6,16,16.7,25.7l50.8,70.1c9.3,12.9,16.2,22.7,20.9,29.5v-26.1l-0.2-61.7c0-14.4-1.2-23.3-3.7-26.9\n                      c-1.8-2.6-7.3-4.3-16.7-5.1c-1.3-0.1-1.9-1-1.9-2.5c0-2.3,0.6-3.4,1.9-3.4c11.9,0.6,20.1,0.8,24.5,0.8c6,0,14.2-0.3,24.6-0.8\n                      c1.4,0,2.1,1.1,2.1,3.4c0,1.3-0.7,2.1-2.1,2.5c-8,0.7-12.9,2.4-14.9,5.1c-2.3,3.3-3.5,12.2-3.7,26.9l-1.4,74.9\n                      c0,4.8,0,8.4,0.1,10.7c0,6.4,0.1,14.9,0.4,25.7c-6.1,3.7-9.4,5.5-9.7,5.5c-0.5,0-1-0.3-1.5-1c-6.8-10.9-15.2-23.1-24.9-36.6\n                      L1243.6,459.6z\"/>\n                    <path class=\"st0 p8\" d=\"M1439.9,518.6c-0.9-1.3-2.5-3.9-4.9-7.9c-1.6-2.8-3-5-4.1-6.7l-20.1-31.8c-8.5-13.4-13.9-21.3-16.3-23.5\n                      c-3.3-3-8.3-4.8-15.2-5.4c-1.1-0.1-1.7-1-1.7-2.5c0-2.3,0.6-3.4,1.7-3.4c10,0.7,19.3,1,27.8,1c9.3,0,18.6-0.3,27.9-1\n                      c1.1,0,1.7,1.1,1.7,3.4c0,1.5-0.6,2.4-1.7,2.5c-6.5,0.7-10.6,1.6-12.4,2.7c-1.5,1-2.2,2.6-2.2,5c0,2.4,2.1,7.1,6.3,14l20,32\n                      c1.2,1.8,2.6,4,4.3,6.7c1.8,2.8,3,4.7,3.5,5.6c1.9-3.3,4.3-7.3,7.3-11.8l18.2-31.2c4.5-7.6,6.7-12.6,6.7-14.9\n                      c0-2.7-1.1-4.6-3.4-5.8c-2.4-1.2-6.3-2-11.9-2.3c-1.5-0.1-2.2-1-2.2-2.5c0-2.3,0.7-3.4,2.2-3.4c13.5,0.7,22.1,1,25.6,1\n                      c1.8,0,9.5-0.3,23.1-1c1.1,0,1.7,1.1,1.7,3.4c0,1.5-0.6,2.4-1.7,2.5c-6.6,0.6-11.7,2.4-15.4,5.4c-2.7,2-8.2,9.4-16.4,22.3\n                      l-20.4,31.4c-3.1,4.9-6.3,10.1-9.8,15.7l-0.2,9.3v27.9c0,12.2,0.8,19.7,2.5,22.3c1.6,2.7,7.6,4.4,18,5.1c1.1,0.2,1.7,1.1,1.7,2.7\n                      c0,1.9-0.4,2.8-1.3,2.8c-12.7-0.6-22.6-0.8-29.8-0.8c-8.1,0-17.1,0.3-27.2,0.8c-1.6,0-2.5-0.9-2.5-2.8c0-1.7,0.8-2.6,2.5-2.7\n                      c8.6-0.7,13.8-2.4,15.5-5.1c1.9-2.9,2.9-11.1,2.9-24.5v-25.9L1439.9,518.6z\"/>\n                  </g>\n                </svg>\n```\n\n\nこんな感じの長いコードが出てきます。\n\npathに適当な名前のクラスを付けます。\n\nこの場合st0というクラス名がついています。\n\njavascriptでこのクラスを指定してアニメーションを書きます\n\n```javascript \nanime({\n    targets: \'.st0\',\n    strokeDashoffset: [anime.setDashoffset, 0],\n    easing: \'easeInOutSine\',\n    duration: 1500,\n    delay: function(el, i) { return i * 250 },\n    direction: \'alternate\',\n    loop: false\n  });\n```\n\n\nそしてcssファイルで\n\n```css\n.st0 \n{\n    fill: #fff;\n    stroke-width: 3px;\n    stroke: red;\n}\n```\n\nこんな感じでfill,stroke-widthを指定します。\nこの場合文字の色が白で回りに赤色のstrokeが表示され、このstrokeがいい感じにアニメーションしてくれます。\n\nstrokeは文字の周りの線のことです。\n\n\n#最後に\n\ntwitterに上げたやつのコードはこんな感じになりました。\n\n書き方汚いですが....\n\n##html\n\n```html \n<!doctype html>\n<!--[if lt IE 7]>      <html class=\"no-js lt-ie9 lt-ie8 lt-ie7\" lang=\"\"> <![endif]-->\n<!--[if IE 7]>         <html class=\"no-js lt-ie9 lt-ie8\" lang=\"\"> <![endif]-->\n<!--[if IE 8]>         <html class=\"no-js lt-ie9\" lang=\"\"> <![endif]-->\n<!--[if gt IE 8]><!--> <html class=\"no-js\" lang=\"\"> <!--<![endif]-->\n    <head>\n        <meta charset=\"utf-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n        <title></title>\n        <meta name=\"description\" content=\"\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <link rel=\"apple-touch-icon\" href=\"apple-touch-icon.png\">\n\n        <link rel=\"stylesheet\" href=\"css/bootstrap.min.css\">\n        <style>\n        </style>\n        <link rel=\"stylesheet\" href=\"css/bootstrap-theme.min.css\">\n        <link rel=\"stylesheet\" href=\"css/animate.min.css\">\n          \n        </style>\n        <link rel=\"stylesheet\" href=\"css/main.css\">\n\n        <script src=\"js/vendor/modernizr-2.8.3-respond-1.4.2.min.js\"></script>\n        <script src=\"js/anime.min.js\"></script>\n    </head>\n    <body>\n        <!--[if lt IE 8]>\n            <p class=\"browserupgrade\">You are using an <strong>outdated</strong> browser. Please <a href=\"http://browsehappy.com/\">upgrade your browser</a> to improve your experience.</p>\n        <![endif]-->\n\n        <section id=\"first\">\n            <div id=\"main\">\n                <svg version=\"1.1\" id=\"レイヤー_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n                    y=\"0px\" viewBox=\"0 0 1920 1080\" style=\"enable-background:new 0 0 1920 1080;\" xml:space=\"preserve\">\n                  <g>\n                    <path class=\"st0 p1\" d=\"M499.2,437.9c0.2,8.2,1,19.2,2.4,32.8v0.6c0,1.1-1.2,1.7-3.5,1.7c-0.9,0-1.4-0.5-1.7-1.5c-3.5-10.6-8.7-18.5-15.7-23.7\n                      c-6-4.6-12.8-6.8-20.4-6.8c-8.9,0-15.9,2.7-21.1,8.2c-4.3,4.7-6.5,10.6-6.5,17.7c0,12,8,21.6,24.1,28.8l11,4.9\n                      c15.5,6.9,26.4,14.3,32.5,22.3c5.2,6.7,7.8,14.7,7.8,24.1c0,14.7-5.2,26.1-15.6,34c-9.3,7.1-21.8,10.6-37.6,10.6\n                      c-11.4,0-24.2-2.5-38.3-7.5c-2.8-9.5-5.1-20.1-6.8-31.8l-0.2-1.7c0-1.5,1.1-2.2,3.3-2.2c1.1,0,1.8,0.4,2.1,1.2\n                      c4.4,11.6,10.8,20.6,19.3,26.9c7.1,5.5,14.8,8.2,23.1,8.2c10.6,0,18.9-3.2,25-9.5c5.2-5.4,7.8-12.1,7.8-20.2\n                      c0-8.4-2.6-15.4-7.9-21.2c-4.8-5.2-12.7-10.4-23.6-15.8l-11-5.3c-12.6-6.2-21.4-12.7-26.2-19.5c-4.3-6-6.4-13.2-6.4-21.7\n                      c0-11.6,4.7-21,14.2-28.1c8.3-6.2,18.7-9.3,31.1-9.3c6.3,0,12.3,0.9,18,2.6c4.1,1.2,8.7,1.9,13.8,1.9\n                      C494.5,438.5,497,438.3,499.2,437.9z\"/>\n                    <path class=\"st0 p2\" d=\"M532.1,582.6c9-0.7,14.3-2.4,15.9-5.1c1.3-2,2.1-4.7,2.4-8.2c0.4-3.6,0.5-10.2,0.5-19.7v-74.5c0-11.1-0.2-18.1-0.5-21.1\n                      c-0.3-2.3-1-4.2-2.1-5.8c-1.7-2.6-7.5-4.3-17.3-5.1c-1.1-0.1-1.7-1-1.7-2.5c0-2.3,0.6-3.4,1.7-3.4c14.4,0.7,23.9,1,28.6,1\n                      c5.1,0,14.5-0.3,28-1c1.5,0,2.2,1.1,2.2,3.4c0,1.5-0.7,2.4-2.2,2.5c-9,0.9-14.3,2.6-15.9,5.1c-1.9,2.9-2.9,11.9-2.9,26.9v82.6\n                      c0,10.7,0.9,17.3,2.7,19.8c1.1,1.5,2.8,2.6,5.1,3.3c2.4,0.7,6.5,1.3,12.2,1.8c1.4,0.1,2.1,1,2.1,2.7c0,1.9-0.7,2.8-2.1,2.8\n                      c-11.6-0.6-21.3-0.8-29.2-0.8s-17.1,0.3-27.5,0.8c-1.1,0-1.7-0.9-1.7-2.8C530.3,583.7,530.9,582.8,532.1,582.6z\"/>\n                    <path class=\"st0 p3\" d=\"M689.6,508.6c16.7,1.7,29.1,6.5,37.2,14.3c6.6,6.3,9.9,14.1,9.9,23.5c0,13.8-5.7,24.4-17,31.7\n                      c-10.6,6.8-25.3,10.3-44.4,10.3l-38.6-1c-9.6,0-18.3,0.2-26.3,0.6c-1.1,0-1.7-0.9-1.7-2.8c0-1.6,0.6-2.5,1.7-2.7\n                      c9.6-0.7,15.1-2.4,16.7-5.1c1.8-3,2.7-12.3,2.7-27.9v-74.5c0-11-0.2-18.2-0.6-21.6c-0.3-2.3-0.9-4.2-1.7-5.5\n                      c-1.8-2.6-7.8-4.2-18.1-4.9c-1.3-0.1-1.9-1-1.9-2.7c0-2.1,0.6-3.2,1.9-3.2c11.9,0.6,20.9,0.8,27,0.8l36.5-1.2\n                      c20.5,0,35.2,3.5,44,10.4c7.2,5.5,10.8,13.6,10.8,24.3c0,9.3-3.3,16.8-9.9,22.6c-6.1,5.3-15.4,9.7-28,13.3V508.6z M647.5,505.4\n                      c2.4,0.1,6.5,0.2,12.3,0.2c31.9,0,47.8-10.8,47.8-32.5c0-9.7-3.5-17-10.5-22.1c-6.4-4.6-15.4-6.9-27.1-6.9\n                      c-11.1,0-17.7,1.6-19.9,4.7c-1.8,2.6-2.7,11.4-2.7,26.3V505.4z M647.5,512.9v36.7c0,9.5,0.3,15.9,0.9,19.4c0.4,2.6,1.2,4.8,2.5,6.7\n                      c2.6,3.8,10.4,5.7,23.4,5.7c14.5,0,25.5-3.6,32.7-10.9c6.1-5.9,9.1-13.9,9.1-24c0-22.6-17.8-33.9-53.5-33.9\n                      C656.5,512.7,651.4,512.7,647.5,512.9z\"/>\n                    <path class=\"st0 p4\" d=\"M848.4,529.1c-10.3-0.6-18.6-0.8-25-0.8c-9.7,0-18.8,0.3-27.4,0.8l-9,23.7c-3.4,8.6-5,15.2-5,19.6c0,3.6,1.3,6.1,3.9,7.5\n                      c2.6,1.3,7.4,2.2,14.5,2.7c1.3,0.1,1.9,1,1.9,2.7c0,1.9-0.6,2.8-1.9,2.8c-15.9-0.4-24.7-0.6-26.3-0.6c-7.9,0-15.3,0.2-22.1,0.6\n                      c-1.3,0-1.9-0.9-1.9-2.8c0-1.7,0.6-2.6,1.9-2.7c5.8-0.8,10-2.5,12.5-5.1c3.3-3.5,7.6-12,12.9-25.5l25.9-66.5\n                      c8.6-22.4,14.2-37.5,16.6-45.2l12.5-6c1,0,1.6,0.6,1.9,1.8c4.5,14.6,10.2,31.4,17.1,50.5l24.6,67.1c4.6,12.4,8.1,20.4,10.7,23.9\n                      c2,2.8,7.2,4.5,15.7,5.1c1.6,0.1,2.5,1,2.5,2.7c0,1.9-0.8,2.8-2.4,2.8c-16.3-0.4-25.8-0.6-28.6-0.6c-2.4,0-11.7,0.2-28,0.6\n                      c-1.3,0-1.9-0.9-1.9-2.8c0-1.7,0.6-2.6,1.9-2.7c7.6-0.6,12.4-1.6,14.5-3c1.6-1.1,2.4-3.1,2.4-5.9c0-2.6-1.7-8.6-5-18L848.4,529.1z\n                      M822.7,457c-1.1,3.1-2.8,7.8-5.2,14c-2.6,6.9-4.6,12.2-6,15.8l-12.4,33.8c5.2,0.3,13.3,0.4,24.3,0.4c10.1,0,17.4-0.1,22.1-0.4\n                      L833,486.7C829.8,477.6,826.4,467.6,822.7,457z\"/>\n                    <path class=\"st0 p5\" d=\"M952.9,509v44c0,9.7,0.2,16,0.5,18.8c0.3,2.1,1,4,2.1,5.7c1.5,2.6,7.2,4.3,17.1,5.1c1.3,0.1,1.9,1,1.9,2.7\n                      c0,1.9-0.6,2.8-1.9,2.8c-11.8-0.6-21.4-0.8-28.6-0.8c-8.1,0-17.3,0.3-27.7,0.8c-1.3,0-1.9-0.9-1.9-2.8c0-1.7,0.6-2.6,1.9-2.7\n                      c9.1-0.7,14.5-2.4,16.3-5.1c1.8-3,2.7-12.3,2.7-27.9v-74.5c0-10.9-0.2-17.8-0.5-20.9c-0.3-2.4-0.9-4.4-1.9-5.9\n                      c-1.9-2.7-7.8-4.4-17.5-5.1c-1.1-0.1-1.7-1-1.7-2.5c0-2.3,0.6-3.4,1.7-3.4c9.5,0.7,19.1,1,28.8,1c9.1,0,18.2-0.3,27.4-1\n                      c1.4,0,2,1.1,2,3.4c0,1.5-0.7,2.4-2,2.5c-8.8,0.9-14.1,2.6-15.7,5.1c-1.9,3.1-2.9,12.1-2.9,26.9V507c6.3-5.2,12.4-10.6,18.2-16.2\n                      l24.1-22.9c10.8-10.2,16.3-16.8,16.3-19.8c0-1.5-0.8-2.6-2.4-3.2c-1.6-0.6-4.7-1-9.3-1.5c-1.4-0.1-2.1-1-2.1-2.5c0-2,0.8-3,2.2-3\n                      c10.1,0.3,18.1,0.4,24.1,0.4c7.6,0,16-0.3,25.2-1c1.3,0,1.9,1.1,1.9,3.2c0,1.7-0.7,2.6-2,2.7c-7,0.8-13.1,2.8-18.4,6\n                      c-3.9,2.4-12.6,9.6-25.9,21.5l-21,18.7c-2.4,2.2-5.2,4.7-8.3,7.6c-3.2,2.9-5.2,4.7-5.9,5.4c2.6,3,20.4,22,53.2,57.1\n                      c10.1,10.5,17.6,17.1,22.6,19.7c3,1.5,7.7,2.7,14.1,3.4c1.3,0.1,1.9,1,1.9,2.7c0,1.9-0.6,2.8-1.9,2.8c-6.3-0.6-12.9-0.8-19.8-0.8\n                      c-6.3,0-11.6,0.1-15.9,0.2c-6.9-8.6-13.4-16.1-19.4-22.5C996.5,556.6,979.3,538,952.9,509z\"/>\n                    <path class=\"st0 p6\" d=\"M1183.5,588.1c-20.5-0.8-38.5-1.1-54.2-1.1c-17.5,0-36.3,0.4-56.4,1.1c-1.1,0-1.7-0.9-1.7-2.8c0-1.6,0.6-2.5,1.7-2.7\n                      c5.8-0.6,9.7-1.2,11.9-2c1.7-0.7,3.1-1.7,4.1-3.1c1.8-2.6,2.7-11.9,2.7-27.9v-74.5c0-11.1-0.2-18.1-0.5-21.3\n                      c-0.3-2.3-0.9-4.3-1.9-5.8c-1.8-2.6-7.6-4.2-17.3-4.9c-1.3-0.1-1.9-1-1.9-2.5c0-2.3,0.6-3.4,1.9-3.4c14.7,0.7,32.9,1,54.7,1\n                      c20.1,0,37.8-0.3,53.2-1c1.9,17.8,3.1,29,3.7,33.6v0.6c0,1.2-1.2,1.9-3.5,1.9c-0.8,0-1.4-0.4-1.7-1.2c-3.2-9.3-7.9-16.4-14-21.1\n                      c-5.3-4.1-16.4-6.2-33.1-6.2c-10.4,0-16.8,1.7-19.1,5.1c-1.6,2.3-2.4,8.2-2.4,17.7v37.5c2.5,0.1,7.2,0.2,14,0.2\n                      c15.7,0,25.3-1.4,28.9-4.3c3.8-2.9,6-7.4,6.6-13.6c0.1-1.2,0.9-1.9,2.4-1.9c2.2,0,3.3,0.6,3.3,1.9c-0.3,9.7-0.4,16.6-0.4,20.8\n                      c0,5.9,0.1,13.9,0.4,23.9c0,1.2-1.1,1.9-3.3,1.9c-1.4,0-2.2-0.7-2.4-2.1c-0.6-7.8-3-13.1-7.1-15.8c-3.9-2.7-13.3-4-28.5-4\n                      c-4.6,0-9.2,0.1-14,0.4v36.9c0,13.9,1,22.3,3.1,25.3c1.6,2.2,3.9,3.7,7.1,4.6c3.1,0.8,8.1,1.1,14.8,1.1c10.7,0,19-0.7,25-2.2\n                      c5.1-1.2,9.6-3.1,13.6-5.9c5.8-4.1,11.3-11.2,16.4-21.3c0.4-1,1-1.5,1.6-1.5c2.8,0,4.2,0.8,4.2,2.4l-0.2,1\n                      C1192.3,564.4,1188.5,576,1183.5,588.1z\"/>\n                    <path class=\"st0 p7\" d=\"M1243.6,459.6h-2.5l0.9,90.4c0.2,15.1,1.4,24.4,3.5,27.7c1.9,2.8,7.5,4.6,16.9,5.3c1.1,0.2,1.7,1,1.7,2.5\n                      c0,1.7-0.6,2.6-1.7,2.6c-2.1-0.1-5-0.1-8.8-0.2c-7.6-0.3-13-0.4-16.3-0.4c-2.5,0-10.8,0.2-25,0.6c-1.4,0-2.1-0.9-2.1-2.6\n                      c0-1.5,0.7-2.3,2.1-2.5c8.5-0.8,13.5-2.7,15.2-5.5c2.3-4,3.5-13.2,3.7-27.5l1.3-78.5c0.2-11.5-0.9-18.8-3.3-21.9\n                      c-2.5-3.2-8.5-5.3-18-6.2c-1.4-0.1-2.1-1-2.1-2.5c0-2.4,0.7-3.6,2.1-3.6c7.6,0.4,14.3,0.6,20.2,0.6c7,0,13.6-0.1,19.9-0.2\n                      c4,7.4,9.6,16,16.7,25.7l50.8,70.1c9.3,12.9,16.2,22.7,20.9,29.5v-26.1l-0.2-61.7c0-14.4-1.2-23.3-3.7-26.9\n                      c-1.8-2.6-7.3-4.3-16.7-5.1c-1.3-0.1-1.9-1-1.9-2.5c0-2.3,0.6-3.4,1.9-3.4c11.9,0.6,20.1,0.8,24.5,0.8c6,0,14.2-0.3,24.6-0.8\n                      c1.4,0,2.1,1.1,2.1,3.4c0,1.3-0.7,2.1-2.1,2.5c-8,0.7-12.9,2.4-14.9,5.1c-2.3,3.3-3.5,12.2-3.7,26.9l-1.4,74.9\n                      c0,4.8,0,8.4,0.1,10.7c0,6.4,0.1,14.9,0.4,25.7c-6.1,3.7-9.4,5.5-9.7,5.5c-0.5,0-1-0.3-1.5-1c-6.8-10.9-15.2-23.1-24.9-36.6\n                      L1243.6,459.6z\"/>\n                    <path class=\"st0 p8\" d=\"M1439.9,518.6c-0.9-1.3-2.5-3.9-4.9-7.9c-1.6-2.8-3-5-4.1-6.7l-20.1-31.8c-8.5-13.4-13.9-21.3-16.3-23.5\n                      c-3.3-3-8.3-4.8-15.2-5.4c-1.1-0.1-1.7-1-1.7-2.5c0-2.3,0.6-3.4,1.7-3.4c10,0.7,19.3,1,27.8,1c9.3,0,18.6-0.3,27.9-1\n                      c1.1,0,1.7,1.1,1.7,3.4c0,1.5-0.6,2.4-1.7,2.5c-6.5,0.7-10.6,1.6-12.4,2.7c-1.5,1-2.2,2.6-2.2,5c0,2.4,2.1,7.1,6.3,14l20,32\n                      c1.2,1.8,2.6,4,4.3,6.7c1.8,2.8,3,4.7,3.5,5.6c1.9-3.3,4.3-7.3,7.3-11.8l18.2-31.2c4.5-7.6,6.7-12.6,6.7-14.9\n                      c0-2.7-1.1-4.6-3.4-5.8c-2.4-1.2-6.3-2-11.9-2.3c-1.5-0.1-2.2-1-2.2-2.5c0-2.3,0.7-3.4,2.2-3.4c13.5,0.7,22.1,1,25.6,1\n                      c1.8,0,9.5-0.3,23.1-1c1.1,0,1.7,1.1,1.7,3.4c0,1.5-0.6,2.4-1.7,2.5c-6.6,0.6-11.7,2.4-15.4,5.4c-2.7,2-8.2,9.4-16.4,22.3\n                      l-20.4,31.4c-3.1,4.9-6.3,10.1-9.8,15.7l-0.2,9.3v27.9c0,12.2,0.8,19.7,2.5,22.3c1.6,2.7,7.6,4.4,18,5.1c1.1,0.2,1.7,1.1,1.7,2.7\n                      c0,1.9-0.4,2.8-1.3,2.8c-12.7-0.6-22.6-0.8-29.8-0.8c-8.1,0-17.1,0.3-27.2,0.8c-1.6,0-2.5-0.9-2.5-2.8c0-1.7,0.8-2.6,2.5-2.7\n                      c8.6-0.7,13.8-2.4,15.5-5.1c1.9-2.9,2.9-11.1,2.9-24.5v-25.9L1439.9,518.6z\"/>\n                  </g>\n                </svg>\n            </div>\n        </section>\n\n        <section id=\"second\">    \n          <div>\n              <svg version=\"1.1\" id=\"レイヤー_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n                  y=\"0px\" viewBox=\"0 0 1920 1080\" xml:space=\"preserve\">\n                  <path class=\"firstr\" d=\"M2458.4,1080L2458.4,1080c-211.1-211.1-329.4-329.4-540.5-540.5v0C2128.5,328.8,2246.6,210.7,2457.3,0l1.1,0V1080z\"/>\n                  <path class=\"firstl\" d=\"M-540.5,0L-540.5,0C-329.4,211.1-211.1,329.4,0,540.5v0C-210.7,751.2-328.8,869.3-539.5,1080h-1.1V0z\"/>\n              </svg>\n          </div>\n        </section>\n\n        <section id=\"third\">\n          <div>\n              <svg version=\"1.1\" id=\"レイヤー_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n                  y=\"0px\" viewBox=\"0 0 1920 1080\" xml:space=\"preserve\">\n                <g>\n                  <path d=\"M2264.4,400.2c1.9,0,1.9-3,0-3C2262.5,397.2,2262.5,400.2,2264.4,400.2L2264.4,400.2z\"/>\n                </g>\n                <rect class=\"thirdp\" x=\"0\" y=\"-1080\" width=\"1920\" height=\"1080\"/>\n              </svg>\n          </div>\n        </section>\n\n        <section id=\"fourth\">\n            <svg version=\"1.1\" id=\"レイヤー_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n            y=\"0px\" viewBox=\"0 0 1920 1080\" xml:space=\"preserve\">\n              <g>\n                <path d=\"M2264.4,400.2c1.9,0,1.9-3,0-3C2262.5,397.2,2262.5,400.2,2264.4,400.2L2264.4,400.2z\"/>\n              </g>\n              <rect class=\"title-border\" x=\"-1920\" y=\"80\" width=\"1920\" height=\"2\"/>\n            </svg>\n        </section>\n\n        <section id=\"fifth\">\n          <div class=\"row fifth-row\">\n            <div class=\"col-md-4 animated bounceInDown\">\n              <div class=\"block1\">\n                <p class=\"btn1 text-center\" id=\"about\">ABOUT ME</p>\n              </div>\n            </div>\n            <div class=\"col-md-4 animated bounceInDown delay-1\">\n              <div class=\"block2\">\n                <p class=\"btn2 text-center\" id=\"works\">WORKS</p>\n              </div>\n            </div>\n            <div class=\"col-md-4 animated bounceInDown delay-2\">\n              <div class=\"block3\">\n                <p class=\"btn3 text-center\" id=\"contact\">CONTACT</p>\n              </div>\n            </div>\n          </div>\n          \n\n        </section>\n\n        <section id=\"page\">\n            <svg version=\"1.1\" id=\"レイヤー_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n              y=\"0px\" viewBox=\"0 0 1920 1080\" style=\"enable-background:new 0 0 1920 1080;\" xml:space=\"preserve\">\n              <g>\n                <rect class=\"about-border\" x=\"300\" y=\"-1080\" width=\"2\" height=\"1080\"/>\n                <circle class=\"about-sp\" cx=\"300\" cy=\"-50\" r=\"50\"/>\n              </g>\n            </svg>\n        </section>\n\n        <section id=\"page2\">\n            <svg version=\"1.1\" id=\"レイヤー_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n              y=\"0px\" viewBox=\"0 0 1920 1080\" style=\"enable-background:new 0 0 1920 1080;\" xml:space=\"preserve\">\n              <g>\n                <rect class=\"works-border\" x=\"960\" y=\"-1080\" width=\"2\" height=\"1080\"/>\n                <circle class=\"works-sp\" cx=\"960\" cy=\"-50\" r=\"50\"/>\n              </g>\n            </svg>\n        </section>\n\n        <section id=\"page3\">\n            <svg version=\"1.1\" id=\"レイヤー_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\n              y=\"0px\" viewBox=\"0 0 1920 1080\" style=\"enable-background:new 0 0 1920 1080;\" xml:space=\"preserve\">\n              <g>\n                <rect class=\"contact-border\" x=\"1610\" y=\"-1080\" width=\"2\" height=\"1080\"/>\n                <circle class=\"contact-sp\" cx=\"1610\" cy=\"-50\" r=\"50\"/>\n              </g>\n            </svg>\n        </section>\n\n        <section id=\"about-container\">\n          <div class=\"container\">\n            <div class=\"row about-row\">\n              <div class=\"col-md-4 animated bounceInLeft\">\n                <div class=\"card\">\n                  <img src=\"img/paint2.jpeg\" class=\"card-img-top img-thumbnail img-responsive\"  alt=\"...\">\n                  <div class=\"card-body\">\n                    <h5 class=\"card-title\">Card title</h5>\n                    <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n                    <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-4 animated bounceInLeft delay-1\">\n                <div class=\"card\">\n                  <img src=\"img/paint2.jpeg\" class=\"card-img-top img-thumbnail img-responsive\"  alt=\"...\">\n                  <div class=\"card-body\">\n                    <h5 class=\"card-title\">Card title</h5>\n                    <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n                    <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-4 animated bounceInLeft delay-2\">\n                <div class=\"card\">\n                  <img src=\"img/paint2.jpeg\" class=\"card-img-top img-thumbnail img-responsive\"  alt=\"...\">\n                  <div class=\"card-body\">\n                    <h5 class=\"card-title\">Card title</h5>\n                    <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n                    <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <p id=\"back-btn\" class=\"animated bounceInDown back-btn\">GO BACK</p>\n        </section>\n\n        <section id=\"works-container\">\n            <div class=\"container\">\n                <div class=\"row about-row\">\n                  <div class=\"col-md-4 animated bounceInLeft\">\n                    <div class=\"card\">\n                      <img src=\"img/paint2.jpeg\" class=\"card-img-top img-thumbnail img-responsive\"  alt=\"...\">\n                      <div class=\"card-body\">\n                        <h5 class=\"card-title\">Card title</h5>\n                        <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n                        <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4 animated bounceInLeft delay-1\">\n                    <div class=\"card\">\n                      <img src=\"img/paint2.jpeg\" class=\"card-img-top img-thumbnail img-responsive\"  alt=\"...\">\n                      <div class=\"card-body\">\n                        <h5 class=\"card-title\">Card title</h5>\n                        <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n                        <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4 animated bounceInLeft delay-2\">\n                    <div class=\"card\">\n                      <img src=\"img/paint2.jpeg\" class=\"card-img-top img-thumbnail img-responsive\"  alt=\"...\">\n                      <div class=\"card-body\">\n                        <h5 class=\"card-title\">Card title</h5>\n                        <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n                        <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <p id=\"back-btn2\" class=\"animated bounceInDown back-btn2\">GO BACK</p>\n        </section>\n\n        <section id=\"contact-container\">\n            <div class=\"container\">\n                <div class=\"row about-row\">\n                  <div class=\"col-md-4 animated bounceInLeft\">\n                    <div class=\"card\">\n                      <img src=\"img/paint2.jpeg\" class=\"card-img-top img-thumbnail img-responsive\"  alt=\"...\">\n                      <div class=\"card-body\">\n                        <h5 class=\"card-title\">Card title</h5>\n                        <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n                        <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4 animated bounceInLeft delay-1\">\n                    <div class=\"card\">\n                      <img src=\"img/paint2.jpeg\" class=\"card-img-top img-thumbnail img-responsive\"  alt=\"...\">\n                      <div class=\"card-body\">\n                        <h5 class=\"card-title\">Card title</h5>\n                        <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n                        <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4 animated bounceInLeft delay-2\">\n                    <div class=\"card\">\n                      <img src=\"img/paint2.jpeg\" class=\"card-img-top img-thumbnail img-responsive\"  alt=\"...\">\n                      <div class=\"card-body\">\n                        <h5 class=\"card-title\">Card title</h5>\n                        <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card\'s content.</p>\n                        <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <p id=\"back-btn3\" class=\"animated bounceInDown back-btn3\">GO BACK</p>\n        </section>\n    \n    </div> <!-- /container -->        <script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js\"></script>\n        <script>window.jQuery || document.write(\'<script src=\"js/vendor/jquery-1.11.2.min.js\"><\\/script>\')</script>\n\n        <script src=\"js/vendor/bootstrap.min.js\"></script>\n\n        <script src=\"js/main.js\"></script>\n\n        <!-- Google Analytics: change UA-XXXXX-X to be your site\'s ID. -->\n        <script>\n            (function(b,o,i,l,e,r){b.GoogleAnalyticsObject=l;b[l]||(b[l]=\n            function(){(b[l].q=b[l].q||[]).push(arguments)});b[l].l=+new Date;\n            e=o.createElement(i);r=o.getElementsByTagName(i)[0];\n            e.src=\'//www.google-analytics.com/analytics.js\';\n            r.parentNode.insertBefore(e,r)}(window,document,\'script\',\'ga\'));\n            ga(\'create\',\'UA-XXXXX-X\',\'auto\');ga(\'send\',\'pageview\');\n        </script>\n    </body>\n</html>\n\n```\n\n\n##CSS\n\n```css \n\n\nbody\n{\n    overflow: hidden;\n}\n\n#first\n{\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    z-index: 2;\n}\n\n#second\n{\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    z-index: 1;\n}\n\n#third\n{\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    z-index: 1;\n}\n\n#fourth\n{\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    z-index: 2;\n}\n\n#fifth\n{\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    z-index: 3;\n    display: none;\n}\n\n#page\n{\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    z-index: 4;\n    display: none;\n}\n\n#page2\n{\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    z-index: 4;\n    display: none;\n}\n\n#page3\n{\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    z-index: 4;\n    display: none;\n}\n\n#about-container\n{\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    z-index: 5;\n    display: none;\n}\n\n#works-container\n{\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    z-index: 5;\n    display: none;\n}\n\n#contact-container\n{\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    z-index: 5;\n    display: none;\n}\n\n.title-border\n{\n    fill: #fff !important;\n    background: #fff;\n}\n\n\n\n.svg-str\n{\n    width: 100%;\n    height: 100%;\n    background: none;\n}\n\n\n\n.st0 \n{\n    fill: #fff;\n    stroke-width: 3px;\n    background: none;\n}\n\n.p1\n{\n    stroke: rgb(255, 0, 0);\n}\n\n.p2\n{\n    stroke: rgb(255, 166, 0);\n}\n\n.p3\n{\n    stroke: rgb(217, 255, 0);\n}\n\n.p4\n{\n    stroke: rgb(21, 255, 0);\n}\n\n.p5\n{\n    stroke: rgb(0, 247, 255);\n}\n\n.p6\n{\n    stroke: rgb(0, 17, 255);\n}\n\n.p7\n{\n    stroke: rgb(255, 0, 234);\n}\n\n.p8\n{\n    stroke: rgb(255, 0, 179);\n}\n\n.col-bg\n{\n}\n\n.fifth-row\n{\n    margin-top: 300px;\n}\n\n.block1\n{\n    width: 300px;\n    margin: 0 auto;\n    padding: 10px 10px;\n}\n\n.block2\n{\n    width: 300px;\n    margin: 0 auto;\n    padding: 10px 10px;\n    margin-top: 100px;\n}\n\n.block3\n{\n    width: 300px;\n    margin: 0 auto;\n    padding: 10px 10px;\n    margin-top: 200px;\n}\n\n.delay-1\n{\n    animation-delay: 0.5s;\n}\n\n.delay-2\n{\n    animation-delay: 1s;\n}\n\n.btn1\n{\n    position: relative;\n    display: block;\n    color: white;\n    font-size: 14px;\n    font-family: sans-serif;\n    text-decoration: none;\n    margin: 30px 0;\n    border: 2px solid #ff0202;\n    padding: 14px 60px;\n    text-transform: uppercase;\n    overflow: hidden;\n    transition: 1s all ease;\n}\n\n\n.btn1::before{\n    background: #ff0202;\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n    z-index: -1;\n    transition: all 0.6s ease;\n}\n\n.btn1::before{\n    width: 100%;\n    height: 0;\n    transform: translate(-50%,-50%) rotate(45deg);\n}\n\n.btn1:hover::before{\n    height: 500%;\n}\n\n\n.btn2\n{\n    position: relative;\n    display: block;\n    color: white;\n    font-size: 14px;\n    font-family: sans-serif;\n    text-decoration: none;\n    margin: 30px 0;\n    border: 2px solid #00fc54;\n    padding: 14px 60px;\n    text-transform: uppercase;\n    overflow: hidden;\n    transition: 1s all ease;\n}\n\n\n.btn2::before{\n    background: #00fc54;\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n    z-index: -1;\n    transition: all 0.6s ease;\n}\n\n.btn2::before{\n    width: 100%;\n    height: 0;\n    transform: translate(-50%,-50%) rotate(45deg);\n}\n\n.btn2:hover::before{\n    height: 500%;\n}\n\n.btn3\n{\n    position: relative;\n    display: block;\n    color: white;\n    font-size: 14px;\n    font-family: sans-serif;\n    text-decoration: none;\n    margin: 30px 0;\n    border: 2px solid #023cf8;\n    padding: 14px 60px;\n    text-transform: uppercase;\n    overflow: hidden;\n    transition: 1s all ease;\n}\n\n\n.btn3::before{\n    background: #023cf8;\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%,-50%);\n    z-index: -1;\n    transition: all 0.6s ease;\n}\n\n.btn3::before{\n    width: 100%;\n    height: 0;\n    transform: translate(-50%,-50%) rotate(45deg);\n}\n\n.btn3:hover::before{\n    height: 500%;\n}\n\n.about-border\n{\n    fill: #ff0202;\n}\n\n.about-sp\n{\n    fill: #ff0202;\n}\n\n.works-border\n{\n    fill: #00fc54;\n}\n\n.works-sp\n{\n    fill: #00fc54;\n}\n\n.contact-border\n{\n    fill: #023cf8;\n}\n\n.contact-sp\n{\n    fill: #023cf8;\n}\n\n.back-btn\n{\n    font-size: 50px;\n    color: white;\n    width: 300px;\n    text-align: center;\n    margin: 0 auto;\n    border: 1px solid white;\n    background-color: #ff0202;\n    cursor: pointer;\n    border-top-left-radius: 0px;\n    transition: all 0.5s;\n}\n\n.back-btn:hover\n{\n    background-color: white;\n    color: #ff0202;\n    border-top-left-radius: 100px;\n}\n\n.back-btn2\n{\n    font-size: 50px;\n    color: white;\n    width: 300px;\n    text-align: center;\n    margin: 0 auto;\n    border: 1px solid white;\n    background-color: #00fc54;\n    cursor: pointer;\n    border-top-left-radius: 0px;\n    transition: all 0.5s;\n}\n\n.back-btn2:hover\n{\n    background-color: white;\n    color: #00fc54;\n    border-top-left-radius: 100px;\n}\n\n\n.back-btn3\n{\n    font-size: 50px;\n    color: white;\n    width: 300px;\n    text-align: center;\n    margin: 0 auto;\n    border: 1px solid white;\n    background-color: #023cf8;\n    cursor: pointer;\n    border-top-left-radius: 0px;\n    transition: all 0.5s;\n}\n\n.back-btn3:hover\n{\n    background-color: white;\n    color: #023cf8;\n    border-top-left-radius: 100px;\n}\n\n.about-row \n{\n    margin-top: 200px;\n}\n\n.card\n{\n    background: white;\n    padding: 20px 20px;\n    margin-bottom: 100px;\n}\n```\n\n##javascript\n\n```javascript \n\n anime({\n    targets: \'.st0\',\n    strokeDashoffset: [anime.setDashoffset, 0],\n    easing: \'easeInOutSine\',\n    duration: 1500,\n    delay: function(el, i) { return i * 250 },\n    direction: \'alternate\',\n    loop: false\n  });\n\n  \n\n  anime({\n    targets: \'.firstr\',\n    d: [\n        {value: \'M1918.9,1080L1918.9,1080c-211.1-211.1-329.4-329.4-540.5-540.5v0C1589,328.8,1707.2,210.7,1917.8,0l1.1,0V1080z\'}\n    ],\n    baseFrequency: 0,\n    scale: 1,\n    delay: 2000,\n    loop: false,\n    direction: \'alternate\',\n    easing: \'easeInOutExpo\'\n  });\n\n  anime({\n    targets: \'.firstl\',\n    d: [\n        {value: \'M0,0L0,0c211.1,211.1,329.4,329.4,540.5,540.5v0C329.9,751.2,211.7,869.3,1.1,1080H0V0z\'}\n    ],\n    baseFrequency: 0,\n    scale: 1,\n    delay: 2000,\n    loop: false,\n    direction: \'alternate\',\n    easing: \'easeInOutExpo\' \n  })\n\n  anime({\n    targets: \'.thirdp\',\n    y: [\n        {value: 0}\n    ],\n    baseFrequency: 0,\n    scale: 1,\n    delay: 3000,\n    loop: false,\n    direction: \'alternate\',\n    easing: \'easeInOutExpo\' \n  })\n\n  anime({\n      targets: \'.st0\',\n      scale: 0.2,\n      duration: 1500,\n      translateX: -250,\n      translateY: -300,\n      delay: 4000\n  })\n\n  anime({\n    targets: \'.title-border\',\n    x: \"0\",\n    duration: 1500,\n    delay: 4000,\n    easing: \'easeInOutExpo\'\n})\n\n\n\nvar about = document.getElementById(\'about\')\nabout.addEventListener(\'click\', function() {\n    var page = document.getElementById(\'page\')\n    page.style.display = \'block\'; \n    page.style.zIndex = \'4\'\n    \n    \n\n    var aboutBd = anime({\n        targets: \'.about-border\',\n        y: \"0\",\n        duration: 500,\n        easing: \'easeInOutExpo\',\n        loop: false\n    })\n    var aboutSp1 = anime({\n        targets: \'.about-sp\',\n        cy: \"360\",\n        delay: 500,\n        duration: 1000,\n        easing: \'easeInOutExpo\',\n        loop: false\n    })\n    var aboutSp2 = anime({\n        targets: \'.about-sp\',\n        r: \"2000\",\n        delay: 1500,\n        duration: 1000,\n        loop: false\n    })\n    \n\n\n    window.setTimeout( function() { \n        var aboutContainer = document.getElementById(\'about-container\');\n        aboutContainer.style.display = \'block\' \n     }, 1500 );\n})\n\nvar backBtn = document.getElementById(\'back-btn\')\nbackBtn.addEventListener(\'click\', function() {\n    var aboutContainer = document.getElementById(\'about-container\');\n    aboutContainer.style.display = \"none\"\n    anime({\n        targets: \'.about-border\',\n        y: \"-1920\",\n        duration: 100,\n        easing: \'easeInOutExpo\',\n        loop: false\n    })\n    anime({\n        targets: \'.about-sp\',\n        cy: \"-50\",\n        duration: 100,\n        easing: \'easeInOutExpo\',\n        loop: false\n    })\n    anime({\n        targets: \'.about-sp\',\n        r: \"50\",\n        duration: 1000,\n        loop: false\n    })\n\n    var page = document.getElementById(\'page\')\n    page.style.zIndex = \'2\'; \n\n})\n\nwindow.setTimeout( function() { \n    var fifth = document.getElementById(\'fifth\');\n    fifth.style.display = \'block\'\n }, 5000 );\n\n\n\nvar works = document.getElementById(\'works\')\nworks.addEventListener(\'click\', function() {\n    var page2 = document.getElementById(\'page2\')\n    page2.style.display = \'block\'; \n    page2.style.zIndex = \'4\'\n    \n    \n\n    var worksBd = anime({\n        targets: \'.works-border\',\n        y: \"0\",\n        duration: 500,\n        easing: \'easeInOutExpo\',\n        loop: false\n    })\n    var worksSp1 = anime({\n        targets: \'.works-sp\',\n        cy: \"450\",\n        delay: 500,\n        duration: 1000,\n        easing: \'easeInOutExpo\',\n        loop: false\n    })\n    var worksSp2 = anime({\n        targets: \'.works-sp\',\n        r: \"2000\",\n        delay: 1500,\n        duration: 1000,\n        loop: false\n    })\n    \n\n\n    window.setTimeout( function() { \n        var worksContainer = document.getElementById(\'works-container\');\n        worksContainer.style.display = \'block\' \n     }, 1500 );\n})\n\n\nvar backBtn2 = document.getElementById(\'back-btn2\')\nbackBtn2.addEventListener(\'click\', function() {\n    var worksContainer = document.getElementById(\'works-container\');\n    worksContainer.style.display = \"none\"\n    anime({\n        targets: \'.works-border\',\n        y: \"-1920\",\n        duration: 100,\n        easing: \'easeInOutExpo\',\n        loop: false\n    })\n    anime({\n        targets: \'.works-sp\',\n        cy: \"-50\",\n        duration: 100,\n        easing: \'easeInOutExpo\',\n        loop: false\n    })\n    anime({\n        targets: \'.works-sp\',\n        r: \"50\",\n        duration: 1000,\n        loop: false\n    })\n\n    var page2 = document.getElementById(\'page2\')\n    page2.style.zIndex = \'2\'; \n\n})\n\n\n\nvar contact = document.getElementById(\'contact\')\ncontact.addEventListener(\'click\', function() {\n    var page3 = document.getElementById(\'page3\')\n    page3.style.display = \'block\'; \n    page3.style.zIndex = \'4\'\n    \n    \n\n    var contactBd = anime({\n        targets: \'.contact-border\',\n        y: \"0\",\n        duration: 500,\n        easing: \'easeInOutExpo\',\n        loop: false\n    })\n    var contactSp1 = anime({\n        targets: \'.contact-sp\',\n        cy: \"560\",\n        delay: 500,\n        duration: 1000,\n        easing: \'easeInOutExpo\',\n        loop: false\n    })\n    var contactSp2 = anime({\n        targets: \'.contact-sp\',\n        r: \"2000\",\n        delay: 1500,\n        duration: 1000,\n        loop: false\n    })\n    \n\n\n    window.setTimeout( function() { \n        var contactContainer = document.getElementById(\'contact-container\');\n        contactContainer.style.display = \'block\' \n     }, 1500 );\n})\n\n\nvar backBtn3 = document.getElementById(\'back-btn3\')\nbackBtn3.addEventListener(\'click\', function() {\n    var contactContainer = document.getElementById(\'contact-container\');\n    contactContainer.style.display = \"none\"\n    anime({\n        targets: \'.contact-border\',\n        y: \"-1920\",\n        duration: 100,\n        easing: \'easeInOutExpo\',\n        loop: false\n    })\n    anime({\n        targets: \'.contact-sp\',\n        cy: \"-50\",\n        duration: 100,\n        easing: \'easeInOutExpo\',\n        loop: false\n    })\n    anime({\n        targets: \'.contact-sp\',\n        r: \"50\",\n        duration: 1000,\n        loop: false\n    })\n\n    var page3 = document.getElementById(\'page3\')\n    page3.style.zIndex = \'2\'; \n\n})\n\n\n \n```\n\n\nおわり:frowning2:\n\n\n\n\n\n','2020-04-23 13:43:53.852181','2020-04-23 13:43:53.852181'),(57,'就活の話とPaizaのSランクが全く意味なかったという話','#自己紹介\nほんの数週間前にpaizaで応募していた企業から内定をもらってRailsエンジニアとして働くことが決まりました。\n\nちょうど一年くらい前、大学４年の最後のテストを終えてからプログラミングの勉強を始めて就職先が見つかるまで約一年近くかかりました。\n\nこの転職活動で思ったことを書いていきます。\n\n#結論\n結構記事が長くなってしまうので結論を最初に書くと\n　\n自分が思うにプログラマとして就職、転職するには\n\n技術、コミュ力（自己アピール含め）のどちらかが必要。\n\n技術力で勝負するのは難しい。\n\nということです。\n\nあくまで自分が思ったことなのであまり参考にせずこういう意見もあるんだなくらいにとらえてくれたらと思います。\n\n#paizaでSランクを取得\n自分は就職活動にpaizaというサイトを使っていました。\n正直ほかの転職サイトも使うべきだったのですが使わなかった理由は\n\nPaizaでSランク取ったし「未経験募集なら余裕」だとおもったからです。。\n\n![paiza.png](https://qiita-image-store.s3.amazonaws.com/0/207921/dd4e05b0-f422-bdfc-0a23-ade091b8e534.png)\n\n\n\nこのSランクですがサイト上では\n\n![paiza-rank.png](https://qiita-image-store.s3.amazonaws.com/0/207921/88450a09-4b7c-add5-af72-ff111aabc132.png)\n\n\n\n上位2%...\n\nこれは絶対嘘\n\n正直一問でも解けたらランクが上がるシステムなのでランクを上げるのは結構簡単。\n\nSランクの問題を余裕で解けるレベルならすごいのかもしれないがSランク一問たまたま解けただけなら対してすごくもなんともない。\n\n\nなんとなく「2%は嘘だろ」とか「Sランクといっても大したことないかな」と思ってはいたものの\n\n腐ってもSランク　 \n\n未経験募集なら内定もらうのは簡単だと思っていた。\n\n　\n　\n#スカウトがたくさん来た\n　\nSランクになったからなのか結構スカウトがきた。\n \nプラチナスカウトとかも来ていて正直就活余裕ジャンみたいに思っていた\n\nだが現実はそんなに甘くない\n\n#未経験募集では実力を見ない会社\n\n\n初めて面接を受けたのが10月ごろ。\n　\n自分で簡単な画像販売サイトを作成してそれをポートフォリオみたいな感じで見せて就職活動をしようと思った。\n　\n面接自体スカウトをもらったから受けたみたいな感じだったからある程度いい感じになると思ったし\n\n　\nスキルに関しても話したりするのかと思ったが実際は違った。\n　\nまず面接を担当したのが人事の方でプログラミングに関してはわからない人だった。\n\n履歴書にもpaizaのサイトのほうにも自分の作ったサイトのurlを書いておいたが全くその話は出なかったし　\n\n　\npaizaのランクのことなんて知ってもいない感じだった。\n　\n　\nそもそもスカウトを出したことすら知らないようでたぶん会社がスカウトをばらまいていた感じなのだと思おう。\n\n結局その面接で聞かれたのは今まで努力したこととか会社の志望理由、あとは将来どうなりたいかとかだったと思う。\n\n\nつまりその面接で見られていたのは技術とかではなくその人の人柄とか志望理由だった（当たり前？）。\n\n　\n　\n正直自分の完全な勘違いというか偏見というか、プログラマは技術が最優先されると思っていたし\n\n　\n　\n会社として求める技術のレベルがあってそれを満たしていたら内定をもらえてそうでなかったら不採用ぐらいな感じかと思っていたがその会社ではほかの職種と同じように人柄とか将来性、コミュニケーション能力とかそういったことを見ていた。\n\n　\n　\n自分が面接をして8社目くらいの時に面接の人が言っていたことが\n\n　\n　\n> うちみたいなベンチャーでは採用に関して一緒のチームとしてやっていけるかを一番に見ている。\n\nとか\n\n> 一度新卒採用をしたことがあるがそのほとんどが辞めていった\n> だから一緒にやっていきたいという気持ちが強い人と働きたい\n\nみたいなことも言っていた。\n\nこういった企業では正直実力は関係なかった\n未経験なんてみんな同じみたいな感じなのだと思う。\n　\n　\n現在では実務を数年積んだら転職、もしくはフリーランスになって収入を上げる人が多いからそういった考えになるのも普通なのかもしれない。\n\n\n\n#未経験募集なのに求めるレベルが高い\n\n未経験募集で技術力をみない会社もあれば未経験のとても高いレベルを求める会社もあったと思う。\n\nこれに関しては単に自分の勉強不足かもしれない。\n\n自分がスキル不足過ぎて話にならなかったのかもしれない。\n\nだが思うところもある。\n\n\n一例として\n\n　\n\n実務に関しては未経験OKだけどRuby,Railsの基礎はもちろんデータベース周りの知識も必要で\n\n　　\nサイトが遅くなっているボトルネックを探してそれを改善していけるレベルを求めているという会社とかがあった。\n\n　\n　\n\n\n正直それは未経験募集にしては求めてるレベルが高くないかと思った。\n\n自分は本でRuby,Railsを勉強しているがN+1問題とかキャッシュの利用とかが精一杯だしそれ以上のことは本にもあんまり書いていない。\n\n例えばループ処理は時間がかかるとか実務を行っている人からしたら当たり前なのかもしれないが完全に独学の自分からしたら全く知らない\n\n現在販売されている技術本は入門者向けがほとんどだし中級者向けの本は売れないから販売されないみたいな感じ\n\n未経験でつけれる技術には限界があると思うし、それを理解できていないのか未経験募集で結構高いレベルを要求している会社があるんじゃないかと思った。（単なる自分の勉強不足かもしれないが）\n\n\nだけどこういった会社の良いところは自分の作ったポートフォリオをしっかり見てくれるというところだった。\n\n　\n　\n会社によっては面接官が人事の方だとポートフォリオを全く見てくれなかったりするがこういった会社は面接がエンジニアの方だったりして自分の成果物を見てくれるので落とされても実力不足だったんだと思えてよかった。\n\n\n\n#未経験で得られる技術に限界がある理由\n\n自分はプログラミングのプの字もわからないような完全にIT関連に関して未経験の状態からプログラマを目指した。\n\n　\n勉強する手段は本とudemyくらい、あとはネットの記事をみて勉強するような感じだった。\n\n　\nしかし本でもudemyでも売られているのは基本的に入門者向け\n\n本の中で行うのはだいたい簡単なSNSを作るとかタスク管理とかそんな感じで発展的なことを書いてある本というのは少ない。\n\nだからどういう状況になるのかというと\n\n　\n「何がわからないのかわからない」\n　\n　\nということ。\n\n入門者向けの本をある程度理解した程度だと全然通用しないんだろうけど一体どんな知識が足らないのか、どうしたらもっと成長できるのかわからない。　\n　\n　\n中級者むけの本がない以上なかなかどうしたらいいかわからず技術力をあげれない\n　\n　\nこういった理由で実務未経験者が技術力で面接で勝負するのは難しいんじゃないかと思います。\n\n\n#就職に成功する人\n\nTwitterでちょくちょく何社から内定もらっただとか言っている人がいてその人のプロフィールを見に行ったら営業出身だったりした。\n\n　\n　\nもちろんその人もたくさん努力して技術力を磨いたんだろうし\n\n　\nその技術力、努力が認められて内定をもらえたのかもしれないが　\n　\n一社だけでなく何社からも内定をもらえたのは営業で培ったコミュ力があったからなんじゃないかと思った。\n　\n　\n　\n決してその人が技術がないがたくさん内定もらえていたと言いたいわけではないがその人のgithubをみても\n　\n　\n確かにきれいにかけてると思うけど特別めちゃくちゃすごい技術を持っているとも感じられなかったし\n　\n　\nたぶん何社からも内定をもらえたのはトーク力がでかいんじゃないかと思った。\n　\n　\nもしこのトーク力、コミュ力がないなら技術力で勝負していかなきゃいけない。\n\n　\n　\nだが未経験であればおそらく結構厳しいので　\n　\n　\n　\n未経験募集での就活を成功させたいならトークスキルがあるとかなり良いんじゃないかと思いました。\n\n　\n\n \n#未経験からプログラミングへジョブチェンジしようとしている人へ言いたいこと\n\n　\n　\n自分は大学を卒業後やりたいことないからという理由で就職せず\n　\n　\nラブホテルでしばらくアルバイトをしていた。\n　\n　\n　\n正直コミュ力も皆無だし面接での印象は悪かったと思う\n\n　\nだがこんな自分でも何とかなったので頑張ればだれでもプログラマーになれると思う。\n\n　\n\n　\n　\n　\n\n　\n頑張れ！\n　\n\n\n　\n　\nおわり:sunny:\n\n\n　\n　\n　\n　\n#ちなみに\n\npaizaでは推定年収400万とか出てきたけど実際は月給20万…\n\n　\nまあ働けるだけいいんだけどさ\n　\n　\n　\nスキルチェック正直微妙過ぎるんじゃないかと思いました。\n　\n　\n　\nいまならpaizaは春の何チャラキャンペーンみたいなのやってて内定すると3万もらえます。\n　\n　\n　\nちなみに応募するときに備考欄になんか書かなきゃいけないようで自分はもらえませんでした:frowning2:\n','2020-04-23 13:44:11.852124','2020-04-23 13:44:11.852124'),(58,'lib以下のmodule','#初めに\ngitlabのソースコードを暇なので見たいたところ結構controller内に\n\nGitlab::Utils.to_boolean\n\nみたいなコードがあったりして何なのか調べてみた\n\n#lib以下にmoduleを書いている\n\nどうやらlib以下にいろいろ書いていて\n\nたとえば\n\nlib/gitlab/utils.rb\n\nがありその中身は\n\n```ruby \nmodule Gitlab\n  module Utils\n    extend self\n\n    # Ensure that the relative path will not traverse outside the base directory\n    def check_path_traversal!(path)\n      raise StandardError.new(\"Invalid path\") if path.start_with?(\"..#{File::SEPARATOR}\") ||\n          path.include?(\"#{File::SEPARATOR}..#{File::SEPARATOR}\") ||\n          path.end_with?(\"#{File::SEPARATOR}..\")\n\n      path\n    end\n以下略\n```\n\nみたいになっている\n\nこの中に書いたコードをcontroller内で\n\nGitlab::Utils.method\n\nみたいな感じで予備足しているっポイ\n\nいろんな場所で使うコードの場合このようにしておくと便利なのかも\n\n#試しに使ってみた\n\n試しに使ってみた。\n\n自分の場合20時を超えると機能が使えなくなることを想定して\n\n　\n現在の時刻が20未満ならtrue以上ならfalseをだつものを作ってみた\n\n　\n　\nまずlib以下にtest_libフォルダ(アプリ名)を作ってその下にopening_hour.rbファイルを作成した。\n　\n　\nそしてその中に\n\n```ruby \nmodule TestLib\n    module OpeningHour\n\n        def self.check\n            time = Time.new \n            return false if time.hour > 20\n            return true            \n        end \n    end \nend \n```\n\nこのようなコードを書いた。\n\nこれでOKではなく\n\nlib/以下のファイルを読み込んでくれるようにするために\n\napplication.rbに\n\n```ruby \n config.eager_load_paths.push(*%W[#{config.root}/lib])\n config.autoload_paths = config.eager_load_paths.dup\n```\n\n\nこれを加える\n\nそしたら\n\nrails cで試してみる\n\n使い方は\n\nTestLib::OpeningHour.check\n\nみたいに呼び出す\n\n\n```\nrails c\nirb(main):001:0> TestLib::OpeningHour.check\n=> true\n```\n\n\n\nみたいな感じでうまくいく\n\nおわり:sunny:\n','2020-04-23 13:44:29.040782','2020-04-23 13:44:29.040782'),(59,'エラー処理について②','#初めに\n過去にエラーの処理に関する記事を書きました\n\nそれがこれ\n\n[railsでエラー処理](https://qiita.com/sibakenY/items/d86bc93417e718f11c2f)\n\nこの記事を書いたところ\n\n> Railsのエラー処理については、たしかにrescue_fromを使うと様々なエラーを処理することができますが、個人的にはあまり多用すべきではないと思っています。\n\nという話を聞き少し調べてみました。\n\n#rails guidesでは\n\nrails guidesにはrescure_fromのところで\n\n> rescue_fromにExceptionやStandardErrorを指定すると、Railsでの正しい例外ハンドリングが阻害されて深刻な副作用が生じる可能性があります。よほどの理由がない限り、この指定はおすすめできません。\n\nのように書いてあった。\n\n#アドバイスでは\n\nもらったアドバイスでは\n\n> 例外処理はかなり奥が深いですし、下手に実装するとかえって発生したエラーを迷宮入りさせてしまうことにもなりかねないので、原則は「エラーが起きても何もしない、フレームワークの共通処理に任せる」だと考えています。\n\nという話だったのですが実際にアプリを作成する場合間違いなくエラーゼロなんていうのも難しいと思うので\n\n　\n　\nある程度のエラーハンドルは必要そう。\n\n多用するのが良くないといってもどのくらいなら良いのかわからない…\n　\n　\nそこでgitlabのソースコードを読んでみた。\n\n　\nrescue_fromで例外を補足してエラーページを出力しているコードがこちら\n\n```ruby \nrescue_from Encoding::CompatibilityError do |exception|\n    log_exception(exception)\n    render \"errors/encoding\", layout: \"errors\", status: 500\n  end\n\n  rescue_from ActiveRecord::RecordNotFound do |exception|\n    log_exception(exception)\n    render_404\n  end\n\n  rescue_from(ActionController::UnknownFormat) do\n    render_404\n  end\n\n  rescue_from Gitlab::Access::AccessDeniedError do |exception|\n    render_403\n  end\n\n  rescue_from Gitlab::Auth::TooManyIps do |e|\n    head :forbidden, retry_after: Gitlab::Auth::UniqueIpsLimiter.config.unique_ips_limit_time_window\n  end\n\n  rescue_from GRPC::Unavailable, Gitlab::Git::CommandError do |exception|\n    log_exception(exception)\n\n    headers[\'Retry-After\'] = exception.retry_after if exception.respond_to?(:retry_after)\n\n    render_503\n  end\n```\n\n\n上の三つは最初からrailsに搭載されているもので\n\nエンコードのエラー,activerecord,actioncontrollerのエラーを取得している。\n\n下の三つは独自のもので名前的に\n\n権限関係と....よくわかんない（笑）\n\n\nとりあえずgitlabで例外を補足していたのはテンプレートがなかった時レコードがなかった時エンコードの問題があったときだった。\n　\nエラーを補足した場合log_exceptionでログを出力していてそれがこのコード\n\n```ruby \ndef log_exception(exception)\n    Gitlab::Sentry.track_acceptable_exception(exception)\n\n    backtrace_cleaner = request.env[\"action_dispatch.backtrace_cleaner\"]\n    application_trace = ActionDispatch::ExceptionWrapper.new(backtrace_cleaner, exception).application_trace\n    application_trace.map! { |t| \"  #{t}\\n\" }\n    logger.error \"\\n#{exception.class.name} (#{exception.message}):\\n#{application_trace.join}\"\n  end\n```\n\nActionDispatchとか知らんしなんで単純に\n\n\n```ruby\nlogger.error \"#{exception.class.name} : #{exception.message}\"\n```\n\nにしないのかよくわからん\n\n\nまあとにかく\n\n```\nrescue_from exception\n```\n\nはしないようにします:cop_tone1:\n\n\n\n\n\n　\n\n　\n','2020-04-23 13:49:45.458501','2020-04-23 13:49:45.458501'),(60,'counter_cacheが便利だと思ったはなし','#はじめに\nrailsでcounter_cacheというものがあるのを知った。\n\n今まで例えばいいね機能を付ける場合\n\n```\nrails g model user name:string \nrails g model star user:references\n```\n\nみたいにして\n\nuserのstarの数を知りたいときは\n\n```\nstars_count = Star.where(user_id: params[:id]).count\n```\n\nみたいにしていた\n\nだがcounter_cacheを使うとstarが作成されたときに自動的にuserカラムのstars_countにstarの数を入れてくれる\n\n#使い方\n\nmodels/user.rbに\n\n```ruby:user.rb\nclass User < ApplicationRecord\n    has_many :stars\nend\n```\n\nmodels/star.rbに\n\n```ruby:star.rb\nclass Star < ApplicationRecord\n    belongs_to :user, :counter_cache => true\nend\n```\n\nとする。\n\nこれで終わり。\n\nちなみにあらかじめuserにstars_countというカラムを作成しておく必要があります。\n\nまたstars_countではなくほかのカラム名にしたい場合は\n\n```ruby\n:counter_cache => true\n```\n\nを\n\n```ruby\ncounter_cache: :sample_count\n```\n\nとすればOK\n\n\n#試しに使う\n\n```\nrails g model user name stars_count:integer\nrails g model star \nrails db:migrate\n```\n\n```ruby \nrails c\nuser = User.create(name: \"counter\")\n100.times {user.stars.create}\n\n省略\n\n\"2019-02-07 12:03:41.796608\"], [\"updated_at\", \"2019-02-07 12:03:41.796608\"], [\"user_id\", 2]]\n  User Update All (0.2ms)  UPDATE \"users\" SET \"stars_count\" = COALESCE(\"stars_count\", 0) + 1 WHERE \"users\".\"id\" = ?  [[\"id\", 2]]\n   (11.3ms)  commit transaction\n   (0.1ms)  begin transaction\n  Star Create (1.2ms)  INSERT INTO \"stars\" (\"created_at\", \"updated_at\", \"user_id\") VALUES (?, ?, ?)  [[\"created_at\", \"2019-02-07 12:03:41.812850\"], [\"updated_at\", \"2019-02-07 12:03:41.812850\"], [\"user_id\", 2]]\n  User Update All (0.1ms)  UPDATE \"users\" SET \"stars_count\" = COALESCE(\"stars_count\", 0) + 1 WHERE \"users\".\"id\" = ?  [[\"id\", 2]]\n   (12.1ms)  commit transaction\n   (0.1ms)  begin transaction\n  Star Create (1.2ms)  INSERT INTO \"stars\" (\"created_at\", \"updated_at\", \"user_id\") VALUES (?, ?, ?)  [[\"created_at\", \"2019-02-07 12:03:41.831223\"], [\"updated_at\", \"2019-02-07 12:03:41.831223\"], [\"user_id\", 2]]\n  User Update All (0.1ms)  UPDATE \"users\" SET \"stars_count\" = COALESCE(\"stars_count\", 0) + 1 WHERE \"users\".\"id\" = ?  [[\"id\", 2]]\n   (11.3ms)  commit transaction\n   (0.1ms)  begin transaction\n  Star Create (1.2ms)  INSERT INTO \"stars\" (\"created_at\", \"updated_at\", \"user_id\") VALUES (?, ?, ?)  [[\"created_at\", \"2019-02-07 12:03:41.847880\"], [\"updated_at\", \"2019-02-07 12:03:41.847880\"], [\"user_id\", 2]]\n  User Update All (0.1ms)  UPDATE \"users\" SET \"stars_count\" = COALESCE(\"stars_count\", 0) + 1 WHERE \"users\".\"id\" = ?  [[\"id\", 2]]\n   (13.2ms)  commit transaction\n=> 100\n\nuser.stars_count\n=> 100\n```\n\n\nみたいにちゃんとできています:sunny:\n\n\n','2020-04-23 13:50:03.630697','2020-04-23 13:50:03.630697'),(61,'rails チェックボックスを自動的に作る　collection_check_boxes','#初めに\ncollection_check_boxesというとても便利なものがあると知ったので使ってみました。\n\n例えばカテゴリを選択する際に既に登録されているカテゴリからチェックボックスで選択する場合に使える\n\n\n#使い方\n\ncollection_check_boxesについてはrails guidesで\n\n> objectが属するクラスのmethodの既存の戻り値をコレクションにしたcheck_boxタグを返します。\n\nだそうです。\n\n\n\n使い方としては\n\n```erb\n<%= collection_check_boxes(:article, :tag_ids, Tag.all, :id, :name) do |tag| %>\n\n  <%= tag.label do %>\n    <%= tag.check_box %>\n    <%= tag.text %>\n  <% end %>\n\n<% end %>\n\n```\n\nみたいな感じで使えます。\n\n\nこれで既存のタグのチェックボックスが作られます。\n\n#実際に使ってみる\n\nまず\n\n```\n\nrails new qiita_collection_check_boxes\n\nrails g model article title\nrails g model tag name\nrails g model article_tags article:references tag:references\nrails db:migrate\n\nrails g controller articles \n```\n\nみたいにする\n\nrails routes.rbを\n\n```ruby \nresources :articles \n```\n\nとして\n\narticles_controllerを\n\n```ruby \nclass ArticlesController < ApplicationController\n  def index\n    @articles = Article.all \n  end\n\n  def new \n    @article = Article.new \n  end \n\n  def create \n    @article = Article.new(article_params)\n    if @article.save \n      redirect_to articles_path \n    else \n      render :new \n    end \n  end \n\n  private \n\n  def article_params \n    params.require(:article).permit(:title, tag_ids: [])\n  end   \nend\n```\n\nこんな感じにする。\n\nここで重要なのがストロングパラメータの\n\n```\ntag_ids: []\n```\n\nのところ\n\nいまいち仕組みが分かっていないんですがcollection_check_boxesでtag_idsを取得してそれが複数の可能性があるから配列にしています。\n\nただなんでこれで自動的に中間テーブルの作成を行ってくれるのかはわかりません。\n\nですがとりあえずこれで中間テーブルまで自動的に作成されます。\n\n \n \n \nmodelファイルはこんな感じ\n\n```ruby:article_tag.rb \nclass ArticleTag < ApplicationRecord\n  belongs_to :article\n  belongs_to :tag\nend\n\n```\n\n \n \n \n```ruby:article.rb \nclass Article < ApplicationRecord\n    has_many :article_tags\n    has_many :tags, through: :article_tags\nend\n```\n\n \n \n \n```ruby:tag.rb \n\nclass Tag < ApplicationRecord\n    has_many :article_tags\n    has_many :articles, through: :article_tags \nend\n```\n\n \n \n \nこれでOK\n\n後はviewを作るのみ\n\n　\n\n```erb:new.html.erb \n<%= form_with model: @article, local: true do |f| %>\n    <%= f.label :title %>\n    <%= f.text_field :title %>\n\n    <%= collection_check_boxes(:article, :tag_ids, Tag.all, :id, :name) do |tag| %>\n        <%= tag.label do %>\n            <%= tag.check_box %>\n            <%= tag.text %>\n        <% end %>\n    <% end %>\n    <%= f.submit %>\n<% end %>\n```\n\n\ncollection_check_boxesは\n\n> objectが属するクラスのmethodの既存の戻り値をコレクションにしたcheck_boxタグを返します。\n\nということでしたが\n\nTag.allをしてその一つ一つのid,nameというメソッドの戻り値を取得しています。\n\ntag.labelの中にtag.textと書いていますがこれがtag.nameではうまく動きません。\n\nこのあたりもいまいち仕組みが分かってません。\n\nですがこれで実行すると\n\n![collection.png](https://qiita-image-store.s3.amazonaws.com/0/207921/dd8a60e3-0192-959f-66ee-f2f49d302545.png)\n\n\nこんな感じで既存のタグが出てきてくれます。\n\n\nおわり:sunny:\n\n\n\n','2020-04-23 13:50:23.647280','2020-04-23 13:50:23.647280'),(62,'rails options_from_collection_for_select','#初めに\n[collection_check_boxes](https://qiita.com/sibakenY/items/6079605061e2961c9987)と似た感じで使えるのに\n\noptions_from_collectoin_for_selectというヘルパーメソッドがありました。\n\nこれは名前からわかるようにselectタグを使うときのメソッドで\n\n例えば既存のタグの名前からセレクトタグを自動的に生成するやつです。\n\n#使い方\n\nまずrails guidesにはoptions_from_collection_for_selectは\n\n> collectionを列挙した結果をoptionタグ化した文字列を返し、呼び出しの結果をvalue_methodにオプション値として割り当て、text_methodにオプションテキストとして割り当てます。\n\nこのように書いてありました。\n\n例のごとく一回読んだだけでは理解できません.....\n\nまたこんなことも\n\n> 返されるのはoptionだけです。従って、出力結果の外側を適切なHTML selectタグで囲む必要があります。\n\n要は\n\n```erb \n<%= options_from_collection_for_select(:tag_ids, Tag.all, :id, :name) do |tag| %>\n.....\n<% end %>\n\n```\n\nみたいな使い方をするわけではなくこのoptions_from_collection_for_selectの外側にselectを使うなら\n\n\n```\n<%= select_tag :tag_id ..... %>\n```\n\nみたいにしなくちゃいけない\n\n実際の使い方としては\n\n```erb \n<%= select_tag :tag_id,\n           options_from_collection_for_select(Tag.all, :id, :name, params[:tag_id]),\n           {\n                       prompt: \'タグで絞り込み\',\n                       class: \'form-control select_css_tag\',\n           }\n%>\n```\n\nみたいな感じ\n\n\n#実際に使ってみる\n\n```\nrails g model article title\nrails g model tag name\nrails g model article_tags article:references tag:references\nrails db:migrate\nrails g controller articles\n```\n\nroutesの設定はresourcesを使用\n\nmodelの設定は基本的な多対多の設定をする\n\ncontrollerは\n\n```ruby:articles_controller.rb \n\nclass ArticlesController < ApplicationController\n  def index\n    @articles = Article.all \n  end\n\n  def new \n    @article = Article.new \n  end \n\n  def create \n    article = Article.new(article_params)\n    tag = Tag.find(params[:tag_id])\n    if article.save \n      article.tags << tag\n      redirect_to articles_path \n    else \n      render :new \n    end \n  end \n\n  private \n\n  def article_params \n    params.require(:article).permit(:title,:tag_id)\n  end   \nend\n\n```\n\n\nまずcreateではarticleを保存してそのあと\n\n```\narticle.tags << tag\n```\n\nでarticle_tagsを作成しています。\n\nviewは\n\n```erb\n<%= form_with model: @article, local: true do |f| %>\n    <%= f.label :title %>\n    <%= f.text_field :title %>\n\n    <%= select_tag :tag_id,\n         options_from_collection_for_select(Tag.all, :id, :name, params[:tag_id]), \n            {\n                prompt: \'タグを選択\',\n            }\n    %>\n    <%= f.submit %>\n<% end %>\n\n```\n\n\nこんな感じ\n\nちなみに複数の値を保存できるようにしたい場合はこんな感じにmultiple: trueを指定してあげればよいです\n\n\n```erb \n\n<%= form_with model: @article, local: true do |f| %>\n    <%= f.label :title %>\n    <%= f.text_field :title %>\n\n    <%= select_tag :tag_id,\n         options_from_collection_for_select(Tag.all, :id, :name, params[:tag_id]), \n            {\n                prompt: \'タグを選択\',\n                multiple: true\n            }\n    %>\n    <%= f.submit %>\n<% end %>\n\n```\n\n\nこれで複数保存できるようになります。\n\n\n#発見\n\nこれを作ってるときに気づいたんですけど\n\nselect_tagでmultipleがtrueのときはparams[:tag_id]が配列で来るんですけど\n\ncontrollerのcreateアクションが\n\n```ruby \n\ndef create \n    @article = Article.new(article_params)\n    @tag = Tag.find(params[:tag_id])\n    if @article.save \n      @article.tags << @tag\n      redirect_to articles_path \n    else \n      render :new \n    end \n  end \n```\n\nこのままでも複数個を保存することができました。\n\nbinding.pryで調べてみたところ\n\nTag.find(params[:tag_id])\n\nのところでtag_idが[\"1\", \"2\"]となっているときに\n\n```ruby \n    10: def create\n    11:   @article = Article.new(article_params)\n    12:   @tag = Tag.find(params[:tag_id])\n    13:   binding.pry\n => 14:   if @article.save\n    15:     @article.tags << @tag\n    16:     redirect_to articles_path\n    17:   else\n    18:     render :new\n    19:   end\n    20: end\n\n[1] pry(#<ArticlesController>)> @tag\n=> [#<Tag:0x00007f36182a6d90\n  id: 1,\n  name: \"Ruby\",\n  created_at: Mon, 11 Feb 2019 06:35:46 UTC +00:00,\n  updated_at: Mon, 11 Feb 2019 06:35:46 UTC +00:00,\n  article_id: nil>,\n #<Tag:0x00007f36182a6c50\n  id: 2,\n  name: \"Ruby on Rails\",\n  created_at: Mon, 11 Feb 2019 06:35:58 UTC +00:00,\n  updated_at: Mon, 11 Feb 2019 06:35:58 UTC +00:00,\n  article_id: nil>]\n[2] pry(#<ArticlesController>)>\n```\n\nこんな感じでちゃんとすべて取れてるんですよね。\n\nModel.findって一個しか取ってこれないと思っていたので大発見でした。\n\nまたこれは基本的なことなのかもしてないですが@tagが配列の時\n\n```ruby\n@article.tags << @tag\n```\n\nも問題なく動いてくれるんですね\n\n普通ならループ作って\n\n```ruby \n@tag.each do |tag|\n  @article.tags << tag \nend \n```\n\nとしてしまいます。\n\n\n\nおわり:sunny:\n','2020-04-23 13:50:41.706151','2020-04-23 13:50:41.706151'),(63,'gitの使い方の忘備録','#はじめに\ngitの勉強を少ししたのでその忘備録\n\n#git diff\n\n```git \ngit diff\n```\n\nこれでファイルの変更を見れる\n\n#git diff --staged\n\n```git\ngit diff --staged\n```\n\nこれでstagedされたファイルの変更を見れる。\n\n#git rm filename\n\n```git\ngit rm filename\n```\n\nこれでgitとローカルのファイルからfilenameを削除できる\n\nディレクトリの場合は\n\n```git\ngit rm -r dirname\n```\n\n\n#git rm --cached \n\n```git\ngit rm --cached filename\n```\n\nこれでローカルからは削除せずgitからは削除する\n\n#git checkout -b \n\n```git\ngit checkout -b branchname\n```\n\nこれでブランチを作成してそのあとそのブランチに移動する\n\n#git checkout . \n\n```git\ngit checkout .\n```\n\nこれでgit add していないファイルを元の状態に戻す\n\nこうゆう書き方もするらしい\n\n```git \ngit checkout -- .\n```\n\n#git reset HEAD\n\ngit addしたファイルを元の状態に戻したい場合につかう\n\n```git\ngit reset HEAD filename\n```\n\n#git commit --amend\n\n直前のコミットを消し去る感じ\n\n正直あんまり使い方わかっていないけど\n\n直前のコミットをやり直したい場合に\n\n```git\ngit commit --amend\nファイル訂正やら追加や何かする\ngit add .\ngit commit -m \"commit message\"\n```\n\nみたいに使う\n\n二つのコミットができてしまったのを一つで済ませられる\n\n#git pull\n\n```git\ngit pull origin branchname\n```\n\nこれでoriginのbranchnameのファイルを取ってこれる\n\n#git fetch\n\nこれはリモートレポジトリのデータを取ってくるがローカルのファイルには影響を与えない\n\n```git\ngit fetch origin branchname\n```\n\nみたいにつかう\n\nこれだとまだローカルのファイルは変更されないのでmergeを使って変更をローカルのファイルに適応する\n\n#git merge\n\n変更の内容を現在のbranchに適応する\n\nfetchと組み合わせてリモートレポジトリのファイルをとってくるには\n\n```git\ngit fetch origin branchname\n\ngit branch　-a <= remotes/origin/branchnameが追加されているのを確認する\n\ngit merge remotes/origin/branchname\n```\n\nみたいに使う\n\nローカルファイルでブランチを作成してその編集をmasterに適用するには\n\n```git\ngit checkout -b testbranch\n何かしらの変更\ngit add .\ngit commit -m \"message\"\n\ngit checkout master\ngit merge testbranch\n```\n\nこんな感じにつかう\n\n#git rebase \n\n複数のブランチを一つにまとめる\n\nコンフリクトが起きたらめんどくさいことになる\n\npushしたファイルに対してrebaseをすると履歴がおかしくなりpushできなくなる\n\n```git \ngit checkout -b test\nファイルの変更\ngit add .\ngit commit -m \"message\"\n```\n\nこの時点ではmasterとtestブランチがあるがこれを一つにまとめたい場合\n\n\n\n```git\ngit checkout test\ngit rebase master\ngit checkout master\ngit merge test\n```\n\nこれでOK\n\n単純に\n\n```git\ngit checkout master\ngit merge test\n```\n\nでもよいがrebaseすると履歴がきれいになる\n\n#git rebase -i HEAD~\n\nあんまり理解できてない\n\n```git\ngit rebase -i HEAD~2\n```\n\nこれで直前の2個のコミットに対して変更を与えれる\n\n例えば二個前のコミットを消したい場合は\n\n```git\ngit rebase -i HEAD~2\n```\n\nとしたら\n\n```git\n \npick cd462c0 Update asdf　＜＝削除\npick 558970a end\n\n# Rebase abdb3d0..558970a onto abdb3d0 (2 comma$\n#\n# Commands:\n# p, pick = use commit\n# r, reword = use commit, but edit the commit m$\n# e, edit = use commit, but stop for amending\n# s, squash = use commit, but meld into previou\n```\n\n\n\nこんな感じのが表示されるから\n\nこれで削除と書かれている行を削除すれば二個前のコミットを削除できる\n\nファイルも削除される\n\n削除ではなく編集したい場合はpickの代わりにeditと書く\n\n```git\ngit rebase -i HEAD~2\n```\n\n```git\n \nedit cd462c0 Update asdf\npick 558970a end\n\n# Rebase abdb3d0..558970a onto abdb3d0 (2 comma$\n#\n# Commands:\n# p, pick = use commit\n# r, reword = use commit, but edit the commit m$\n# e, edit = use commit, but stop for amending\n# s, squash = use commit, but meld into previou\n```\n\nとすると\n\n\n```git\nStopped at 4a813a6...  add edit1\nYou can amend the commit now, with\n\n  git commit --amend\n\nOnce you are satisfied with your changes, run\n\n  git rebase --continue\n```\n\nこのように表示される\n\nこれはeditと書いたところでstopしたということと\n\n何か変更を加えたらgit commit --amendしてそれば終わればgit rebase --continueしてということ\n\nなので\n\n```git\nファイルに変更を加える\ngit add .\ngit commit --amend\ngit rebase --continue\n```\n\nこれでOKなはず\n\n#stash\n\n```git\ngit stash\n```\n\nで現在のステージングされているファイル(add されていてcommitされていないもの)を退避されられる\n\n退避させたファイルは\n\n```git\ngit stash list\n```\n\nで確認できて\n\n```git \ngit stash apply\n```\n\nで復元\n\n```git\ngit stash clear\n```\n\nでstashのファイルを削除できる\n\n\n\n\n#ちなみに\n\natom使い始めたのですがとても使いやすいです\n\nとくにgitに関して\n\nadd commit などがテキストエディタ上でいろいろできます。\n\ngit plusという拡張ライブラリを使うとadd commit push pull 以外にもgitに関する細かいことができるようになって便利です。\n\n\nwslを使う場合コマンドラインがwindowsのが表示されてしまういますが\n\nplatformio-ide-terminalという拡張ライブラリを取得して\n\n設定で\n\nshell argumentsに\n\n```\nC:\\Windows\\System32\\bash.exe\n```\n\nと入れれば\n\nctrl + @ でubuntuのコマンドラインをテキストエディタで開けるようになります。\n\nおわり:sunny:\n\n\n','2020-04-23 13:50:56.792151','2020-04-23 13:50:56.792151'),(64,'マイグレーションについて','#はじめに\n先週からエンジニアとして働き始めました。\n\nといってもずっとgitの使い方でつまづいていて何もしてないんですが....\n\n\nマイグレーションに関して少し指摘を受けて忘れないように忘備録として残します。\n\n自分は結構おっちょこちょいなのでうっかり大切なデータ消しちゃったとかやりそうなのでマイグレーションとかは特に気を付けなければ…\n\n何か間違っている点やアドバイスなどがあればコメントしていただけるととても助かります。\n\n#マイグレーションファイルの作り方\n\nマイグレーションファイルを作成するときはあんま何も考えず\n\n> とりあえず変更出来てればよいか…\n\n位の考えだったのですが実際はそんなことはなく\n\n \n \n \n```\nrails db:migrate\nrails db:rollback\n```\n\nが問題なく実行できることを確認する必要があるようです。\n\n\n理由に関してはあんまりうまく理解できなかったのですが....\n\n\n#マイグレーションの流れ\n\nマイグレーションの流れとしては\n\n\nまず\n\n```\nrails db:migrate:status\n```\n\nで今の状況を確認します\n\nそうするとこんな感じに履歴が見れます\n\n\n```sql\ndatabase: tt_db\n\n Status   Migration ID    Migration Name\n--------------------------------------------------\n   up     20190224051828  Create users\n   up     20190224052935  Add address to users\n   up     20190224053300  Change address column\n   up     20190224054338  Add birthday not null\n   up     20190224055456  Add good to users\n```\n\nこのupというのはmigrationされた状態ということ\n\n今では5個のマイグレーションファイルがありすべてマイグレーションが実行されている状態であることが分かります。\n\n\nそしてそれを確認したら次に\n\n```\nrails db\n```\n\nでデータベースにアクセスします。\n\nそして\n\n```sql\nselect * from schema_migrations;\n```\n\nを実行します\n\nそうすると\n\n```sql\ntt_db=> select * from schema_migrations;\n    version\n----------------\n 20190224051828\n 20190224052935\n 20190224053300\n 20190224054338\n 20190224055456\n(5 rows)\n```\n\nこういった感じでマイグレーションファイル情報が出てきます。\n\n\nこれはrails db:migrate:statusで出てきたupの情報と一致しているはずです。\n\n\n次に現在のテーブル定義を確認しておきます\n\n```sql\ntt_db=> \\d users;\n                                           Table \"public.users\"\n     Column      |            Type             | Collation | Nullable |              Default\n-----------------+-----------------------------+-----------+----------+-----------------------------------\n id              | bigint                      |           | not null | nextval(\'users_id_seq\'::regclass)\n name            | character varying           |           |          |\n email           | character varying           |           |          |\n password        | character varying           |           |          |\n created_at      | timestamp without time zone |           | not null |\n updated_at      | timestamp without time zone |           | not null |\n address         | text                        |           |          |\n birthday        | date                        |           |          |\n password_digest | character varying           |           |          |\n good            | character varying           |           |          |\nIndexes:\n    \"users_pkey\" PRIMARY KEY, btree (id)\n```\n\nこんなかんじでpostgresqlの場合は\\d テーブル名でテーブルの情報が確認できます。\n\n\nそして次に\\qでデータベースから離脱してマイグレーションファイルを作成していきます。\n\n今回はheightという身長を保存するカラムを作成していきます。\n\nその場合は\n\n```\nrails g migration add_height_to_users\n```\n\nこれを実行\n\nそうするとdb/migrate以下にマイグレーションファイルがこんな感じで作成されているはずです。\n\n\n```ruby \nclass AddHeightToUsers < ActiveRecord::Migration[5.2]\n  def change\n  end\nend\n```\n\nここに変更する内容を書いていきますがrails db:migrate rails db:rollbackを確実に実行できるようにしていくために\n\n```ruby \nclass AddHeightToUsers < ActiveRecord::Migration[5.2]\n  def up\n　　　add_column :users, :height, :string\n  end\n\n  def down\n     remove_column :users, :height\n  end \nend\n```\n\nみたいにmigrateされるときとrollbackされるときの処理を別々に書いていきます。\n\n\nrails db:migrateを実行する前に現在のマイグレーションファイルの状態をrails db:migrate:statusで確認します\n\nそうすると\n\n```\ndatabase: tt_db\n\n Status   Migration ID    Migration Name\n--------------------------------------------------\n   up     20190224051828  Create users\n   up     20190224052935  Add address to users\n   up     20190224053300  Change address column\n   up     20190224054338  Add birthday not null\n   up     20190224055456  Add good to users\n  down    20190224063318  Add height to users\n```\n\nこんな感じになっているはずです。\n\nこの最後のdownがいま作ったマイグレーションファイルです。\n\nこれを確認したらrails db:migrateを実行します\n\n成功するのでrails dbでデータベースにアクセスして問題なく変わっているか確認します。\n\n\n```\ntt_db=> \\d users;\n                                           Table \"public.users\"\n     Column      |            Type             | Collation | Nullable |              Default\n-----------------+-----------------------------+-----------+----------+-----------------------------------\n id              | bigint                      |           | not null | nextval(\'users_id_seq\'::regclass)\n name            | character varying           |           |          |\n email           | character varying           |           |          |\n password        | character varying           |           |          |\n created_at      | timestamp without time zone |           | not null |\n updated_at      | timestamp without time zone |           | not null |\n address         | text                        |           |          |\n birthday        | date                        |           |          |\n password_digest | character varying           |           |          |\n good            | character varying           |           |          |\n height          | character varying           |           |          |\nIndexes:\n    \"users_pkey\" PRIMARY KEY, btree (id)\n```\n\nこんな感じで最後にheightカラムが作成されています。\n\n\nついでに\n\n　\nselect * from schema_migrations;で問題なく情報が一つ増えていることを確認します。\n\n```sql\ntt_db=> select * from schema_migrations;\n    version\n----------------\n 20190224051828\n 20190224052935\n 20190224053300\n 20190224054338\n 20190224055456\n 20190224063318\n(6 rows)\n```\n\nマイグレーションを実行する前は5rowsだったので問題なくできています。\n\nそしたらデータベースから離脱して\n\nrails db:migrate:statusでupが6つになっていることを確認します。\n\n\n```\ndatabase: tt_db\n\n Status   Migration ID    Migration Name\n--------------------------------------------------\n   up     20190224051828  Create users\n   up     20190224052935  Add address to users\n   up     20190224053300  Change address column\n   up     20190224054338  Add birthday not null\n   up     20190224055456  Add good to users\n   up     20190224063318  Add height to users\n```\n\n\n次にためしにデータを作成します。\n\n\n```ruby\nirb(main):001:0> user = User.new\n=> #<User id: nil, name: nil, email: nil, password: nil, created_at: nil, updated_at: nil, address: nil, birthday: nil, password_digest: nil, good: nil, height: nil>\nirb(main):002:0> user.name = \"pon\"\n=> \"pon\"\nirb(main):003:0> user.email = \"pon@gmail.com\"\n=> \"pon@gmail.com\"\nirb(main):004:0> user.password =\"pon\"\n=> \"pon\"\nirb(main):005:0> user.height = \"180cm\"\n=> \"180cm\"\nirb(main):006:0> user.save\n   (0.2ms)  BEGIN\n  User Create (0.7ms)  INSERT INTO \"users\" (\"name\", \"email\", \"password\", \"created_at\", \"updated_at\", \"height\") VALUES ($1, $2, $3, $4, $5, $6) RETURNING \"id\"  [[\"name\", \"pon\"], [\"email\", \"pon@gmail.com\"], [\"password\", \"pon\"], [\"created_at\", \"2019-02-24 06:45:18.618771\"], [\"updated_at\", \"2019-02-24 06:45:18.618771\"], [\"height\", \"180cm\"]]\n   (7.5ms)  COMMIT\n=> true\nirb(main):007:0>\n```\n\nrails dbでデータベースに接続してデータを確認すると\n\n```\n id | name |     email     | password |         created_at         |         updated_at         | address | birthday | password_digest | good | height\n----+------+---------------+----------+----------------------------+----------------------------+---------+----------+-----------------+------+--------\n  3 | pon  | pon@gmail.com | pon      | 2019-02-24 06:45:18.618771 | 2019-02-24 06:45:18.618771 |         |          |                 |      | 180cm\n(1 row)\n```\n\nこんな感じで情報が出てきます。\n\nここまでしたら\n\nrails db:rollbackで前の状態に戻します\n\n```\n== 20190224063318 AddHeightToUsers: reverting =================================\n-- remove_column(:users, :height)\n   -> 0.0007s\n== 20190224063318 AddHeightToUsers: reverted (0.0013s) ========================\n```\n\n問題なくrollbackできるはず\n\nrails db:migrate:statusを確認\n\n\n\n```\ndatabase: tt_db\n\n Status   Migration ID    Migration Name\n--------------------------------------------------\n   up     20190224051828  Create users\n   up     20190224052935  Add address to users\n   up     20190224053300  Change address column\n   up     20190224054338  Add birthday not null\n   up     20190224055456  Add good to users\n  down    20190224063318  Add height to users\n```\n\n\n一つdownになっているやつがいまrollbackしたものです。\n\n\nここでrails dbでデータベースにアクセスしてusersの情報をみてみると\n\n```sql\ntt_db=> select * from users;\n id | name |     email     | password |         created_at         |         updated_at         | address | birthday | password_digest | good\n----+------+---------------+----------+----------------------------+----------------------------+---------+----------+-----------------+------\n  3 | pon  | pon@gmail.com | pon      | 2019-02-24 06:45:18.618771 | 2019-02-24 06:45:18.618771 |         |          |                 |\n(1 row)\n```\n\nheightのカラムがなくなっています。\n\nここまでは良いのですがこのあとまたrails db:migrateを実行すると\n\n\n```sql\ntt_db=> select * from users;\n id | name |     email     | password |         created_at         |         updated_at         | address | birthday | password_digest | good | height\n----+------+---------------+----------+----------------------------+----------------------------+---------+----------+-----------------+------+--------\n  3 | pon  | pon@gmail.com | pon      | 2019-02-24 06:45:18.618771 | 2019-02-24 06:45:18.618771 |         |          |                 |      |\n(1 row)\n```\n\nこんな感じでheightの情報が消えています。\n\nこんな感じでカラムが一度消えてしまうと情報も消えてしまいます。\n\nこれはカラムの内容を変更するときに特に気を付けなくてはいけないです。\n\n\n\n\n\nemailというカラムをmailというカラムに変更したい場合に\n\nrails g migration change_users_email_to_mail\n\nとして\n\n```ruby\nclass ChangeUsersEmailToMail < ActiveRecord::Migration[5.2]\n  def up\n          remove_column :users, :email\n          add_column :users, :mail, :string\n  end\n\n  def down\n          remove_column :users, :mail\n          add_column :users, :email, :string\n  end\nend\n```\n\nとしてmigrate rollbackが通るようにして\n\nrails db:migrate:statusで現在の状況を確認して追加しようとしているのがdownとして問題なく入っているのを確認して\n\nrails db:migrateを実行すると\n\nusersテーブルの中身は\n\n```sql\ntt_db=> select * from users;\n id | name | password |         created_at         |         updated_at         | address | birthday | password_digest | good | height | mail\n----+------+----------+----------------------------+----------------------------+---------+----------+-----------------+------+--------+------\n  3 | pon  | pon      | 2019-02-24 06:45:18.618771 | 2019-02-24 06:45:18.618771 |         |          |                 |      |        |\n(1 row)\n```\n\nこんな感じでmailの中身が消えた状態になってしまっています。\n\n\nこれが本番の環境で大切な情報が消えてしまったとなったら大変です....\n\n\nなので気を付けるようにしましょう。\n\n#追記\n\nカラム名の変更であれば\n\nrename_columnをつかえるっぽいです。\n\nなのでrename_columnを使えばデータは消えずに問題ないですがカラムの型を変更する場合はどうしたらよいかわからないです。\n\n\n#ちなみに\n\n既にデプロイしているプロジェクトの大切な情報を含んでいるカラムを変更したい場合どうしたらよいのでしょうか？\n\nわかる方教えてください( ;∀;)\n\n\n\n\n\n\n\n','2020-04-23 13:51:13.670973','2020-04-23 13:51:13.670973'),(65,'GoとJsonのmarshal','#初めに\n\n自分が見返す用の忘備録\n\n#json\n\ngoでjson形式の文字列を生成したい場合はMarshalを使う\n\n\n```go \nary := []string{\"cat\",\"dog\",\"elephant\"}\nfmt.Println(ary)\n=> [cat dog elephant]\njson_ary, _ := json.Marshal(ary)\nfmt.Println(string(json_ary))\n=> [\"cat\",\"dog\",\"elephant\"]\n```\n\nこんな感じでjson.Marshalでjson形式に変換してくれる\n\n\nまた構造体にjsonのタグをつけることもできます\n\n```go \ntype Users struct {\n	User []User `json:\"users\"`\n}\n\ntype User struct {\n	Name  string `json:\"name\"`\n	Age   string `json:\"age\"`\n	Email string `json:\"email\"`\n}\n```\n\nこのようなjson形式のタグをつけた構造体をつかっていい感じにjson形式のusersを出力できます。\n\n参考\nhttp://cuto.unirita.co.jp/gostudy/post/standard-library-json/\n\n```go \npackage main\n\nimport (\n	\"bytes\"\n	\"encoding/json\"\n	\"fmt\"\n)\n\ntype Users struct {\n	User []User `json:\"users\"`\n}\n\ntype User struct {\n	Name  string `json:\"name\"`\n	Age   string `json:\"age\"`\n	Email string `json:\"email\"`\n}\n\nfunc main() {\n\n	taro := User{Name: \"taro\", Age: \"12\", Email: \"taro@gmail.com\"}\n	ziro := User{Name: \"ziro\", Age: \"3\", Email: \"ziro@gmail.com\"}\n\n	users := Users{\n		User: []User{taro, ziro},\n	}\n\n	json_users, err := json.Marshal(users)\n\n	if err != nil {\n		panic(\"error when users\")\n	}\n\n	out := new(bytes.Buffer)\n\n	json.Indent(out, json_users, \"\", \"    \")\n	fmt.Println(out.String())\n}\n```\n\nこれでこのような結果が得られます\n\n```json\n{\n    \"users\": [\n        {\n            \"name\": \"taro\",\n            \"age\": \"12\",\n            \"email\": \"taro@gmail.com\"\n        },\n        {\n            \"name\": \"ziro\",\n            \"age\": \"3\",\n            \"email\": \"ziro@gmail.com\"\n        }\n    ]\n}\n```\n\n','2020-04-23 13:51:32.939922','2020-04-23 13:51:32.939922'),(66,'Go file読み込み　まとめ','#はじめに\n\ngoのファイルの読み込みについていちいちググるのがめんどくなってきたので忘備録\n\n\n#ioutil.ReadFile\n\nioutil.ReadFileを使う\n\nかなり短くかけてよい\n\n```go \nf, _ := ioutil.ReadFile(\"hello.txt\")\nfmt.Print(string(f))\n```\n\n#byteのスライスを作成して読み込む\n\n文字で結構byteを使うけどなんでなのかわかってない\n\nとりあえず動く\n\n```go \nf, _ := os.Open(\"hello.txt\")\nary := make([]byte, 100)\nf.Read(ary)\nfmt.Println(string(b1))\n```\n\n#bufio.NewScanner\n\nbufio使うやつ\n\n```go \nf, _ := os.Open(\"hello.txt\")\nscanner := bufio.NewScanner(f)\nfor scanner.Scan() {\n  fmt.Println(scanner.Text())\n}\n```\n\n#readlineで読み込むやつ\n\n```go \n	f, err := os.Open(\"hello.txt\")\n	if err != nil {\n		panic(\"error\")\n	}\n	defer f.Close()\n	\n	reader := bufio.NewReaderSize(f, 1024)\n	\n	for {\n		line, _, err := reader.ReadLine()\n		fmt.Println(string(line))\n		if err == io.EOF {\n			break\n		} else if err != nil {\n			panic(err)\n		}\n	}\n```\n\n\n\n\n\n\n\n\n','2020-04-23 13:51:51.112355','2020-04-23 13:51:51.112355'),(67,'Golang 文字エンコーディングについて','#はじめに\n\nエンコーディング関係がほんとめんどくさくて参っているのでとりあえず自分の知識をまとめます。\n\n#エンコーディングの種類\n\n基本的にUTF8,Shift_JIS,EUC_JPの３つがある感じ。\n\nUTF8が一番汎用性があるというかどこでも使える感じだと思う。\n\nShift_JISはWindowsで使われていて、EUC_JPはMacで使われています。\n\n問題はShift_JISで結構厄介な文字化け問題がおきます。:frowning2:\n\n#文字コードの変換（transform.NewReader()）\n\n文字コードを変えるときのコードで一般的なのがtransform.NewReaderを使うこれ↓だと思います。\n\n\n```golang\nsample := \"こんにちは\"\n// Shift_JISからUTF8に変換\nstr := transform.NewReader(sample, japanese.Shift_JIS.NewDecoder())\n// UTF8からShift_JISに変換\nstr := transform.NewReader(sample, japanese.Shift_JIS.NewEncoder())\n// EUC_JPからUTF8に変換\nstr := transform.NewReader(sample, japanese.EUCJP.NewDecoder())\n// UTF8からEUC_JPに変換\nstr := transform.NewReader(sample, japanese.EUCJP.NewEncoder())\n```\n\nという感じ\n\nUTF8に変換するときはNewDecoder()を使いShift_JIS,EUC_JPに変換するときはNewEncoder()を使う感じっぽいですね。\n\nでもこれエラーとか出てくれないけど良いんですかね？\n\n正直エラーが出る場合があるかもしれないのでエラーを検知できるようにしてほしいな....\n\n例えば\n\n```golang \nstr := transform.NewReader(sample, unicode.UTF*.NewDecoder())\n```\n\nみたいにするとsampleがそのまま出力されるんですよね。\n\nなんかエラーが発生してないから大丈夫と思いきや問題あったみたいなことになりそうなので怖いです。\n\n\n\n\n#文字コードの変換(transform.Strings())\n\ntransform.Stringsを使ってエンコードを変える方法もあります。\n\nこれはエラーも補足できるので個人的にはこっちのほうが良いような気がします。\n\n```golang\n// UTF8からShiftJISに変換\nstr, n, err := transform.String(japanese.ShiftJIS.NewEncoder(), sample)\n// ShiftJISからUTF８に変換\nstr, n, err := transform.String(japanese.ShiftJIS.NewDecoder(), sample)\n// UTF8からEUC_JPに変換\nstr, n, err := transform.String(japanese.EUCJP.NewEncoder(), sample)\n// EUC_JPからUTF8に変換\nstr, n, err := transform.String(japanese.EUCJP.NewDecoder(), sample)\n```\n\nみたいな感じ。\n\n\n\n#UTF8からShiftJISに変換した際に文字化けする\n\nUTF8からShiftJISに変換した際に文字化けが発生することがあるようです。\n\n巷では「Shift_JISのだめ文字」と言われるそうですが、文字の2バイト目が「|,/,\\,@」などの文字コードと重なる場合に文字バケが起きてしまうそうです。\n\n\n説明が下手すぎで何言ってるかわからないと思うのでこちらを参考にしてください↓\n\nhttps://sites.google.com/site/fudist/Home/grep/sjis-damemoji-jp\nhttps://sites.google.com/site/fudist/Home/grep/sjis-damemoji-jp/table\n\n\nwindowsの文字化け問題は面倒なので即刻どうにかしてほしいものです。\n\n\n\n\n','2020-04-23 13:52:07.344188','2020-04-23 13:52:07.344188'),(68,'GoとFirestore(データ登録)','# はじめに\nGoとFirestoreを少し触ったのでそこで得た知識をわすれないよに書きます\n\nとりあえずデータ登録に関して....\n\n# secret.json\n\nデータを登録、取得する際にはjson形式のシークレットキー的なのを用意しなければいけません。\n\n設定 -> サービスとアカウントからキーの取得ができます。\n\n# Add\n\nデータ登録でデータのキーを自動生成する場合に使う\n\n```go\npackage main\n\nimport (\n	\"context\"\n	\"fmt\"\n\n	firebase \"firebase.google.com/go\"\n	\"google.golang.org/api/option\"\n)\n\nfunc main() {\n\n	ctx := context.Background()\n	opt := option.WithCredentialsFile(\"secret.json\")\n	app, err := firebase.NewApp(ctx, nil, opt)\n	if err != nil {\n		fmt.Println(err)\n	}\n\n	client, err := app.Firestore(ctx)\n\n	if err != nil {\n		fmt.Println(err)\n	}\n\n	_, _, err = client.Collection(\"Users\").Add(ctx, map[string]interface{}{\n		\"name\": \"First User\",\n		\"age\": 11,\n		\"email\": \"first@example.com\"\n	})\n	if err != nil {\n		fmt.Println(err)\n	}\n}\n\n```\n\nこれでfirestoreにはこのように登録される\n\n![f2.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/207921/7b8221ae-5a68-0059-cb9d-908deba60e68.png)\n\nキーは一意のものが自動生成される。\n\nユーザー登録の場合はfirestoreのauthenticationのuidと同じにするとよいかも\n\n# Doc(id).Set()\n\nキーを指定してデータを登録する\n\n```go\npackage main\n\nimport (\n	\"context\"\n	\"fmt\"\n\n	firebase \"firebase.google.com/go\"\n	\"google.golang.org/api/option\"\n)\n\nfunc main() {\n\n	ctx := context.Background()\n	opt := option.WithCredentialsFile(\"secret.json\")\n	app, err := firebase.NewApp(ctx, nil, opt)\n	if err != nil {\n		fmt.Println(err)\n	}\n\n	client, err := app.Firestore(ctx)\n\n	if err != nil {\n		fmt.Println(err)\n	}\n\n	_, err = client.Collection(\"Users\").Doc(\"1\").Set(ctx, map[string]interface{}{\n		\"name\":  \"Update\",\n		\"age\":   11,\n		\"email\": \"first@example.com\",\n	})\n	if err != nil {\n		fmt.Println(err)\n	}\n}\n\n```\n\nこれでこんな感じでデータが登録される。\n\n![f1.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/207921/7a16394a-148a-6614-59a0-e56403a24fd3.png)\n\n\nデータ作成もできるしすでに存在しているキーを指定すればデータの編集ができる。\n\n名前だけ変えたいばあいはfirestore.MergeAllを使わなきゃデータがすべて上書きされてしまう。\n\n正しい例↓\n\n```go\npackage main\n\nimport (\n	\"context\"\n	\"fmt\"\n\n	\"cloud.google.com/go/firestore\"\n	firebase \"firebase.google.com/go\"\n	\"google.golang.org/api/option\"\n)\n\nfunc main() {\n\n	ctx := context.Background()\n	opt := option.WithCredentialsFile(\"secret.json\")\n	app, err := firebase.NewApp(ctx, nil, opt)\n	if err != nil {\n		fmt.Println(err)\n	}\n\n	client, err := app.Firestore(ctx)\n\n	if err != nil {\n		fmt.Println(err)\n	}\n\n	_, err = client.Collection(\"Users\").Doc(\"1\").Set(ctx, map[string]interface{}{\n		\"name\": \"Update\",\n	}, firestore.MergeAll)\n	if err != nil {\n		fmt.Println(err)\n	}\n}\n```\n\n![f5.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/207921/289cacb1-7406-fc80-b5e1-a769f2cf4ade.png)\n\n\nMergeAllを書かないとこのようになる\n\n![f4.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/207921/c7ab6452-02fc-9a2a-ed13-a54d16a091fc.png)\n\n\nとりあえずデータ登録に関してはこんな感じ\n\n\nデータの構造としてはドキュメント(Users的な)があってその中にデータを登録していくわけだけどドキュメントの中にさらにドキュメントを作成することも可能\n\nこんな感じ\n\n![f6.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/207921/4acada3a-f1e6-10ed-99d0-f88e15ec5f94.png)\n\nusersドキュメントのなかにuserのデータがありuserのデータの中にfollower_idというドキュメントがありそのなかにfollower_idのデータが格納される感じ\n\nこんな感じでいくつも階層的にデータを登録していける\n\n登録のしかたは\n\nCollection().Doc().Collection().Add()\n\nみたいにして登録できる\n\nコード↓\n\n\n```go\npackage main\n\nimport (\n	\"context\"\n	\"fmt\"\n\n	firebase \"firebase.google.com/go\"\n	\"google.golang.org/api/option\"\n)\n\nfunc main() {\n\n	ctx := context.Background()\n	opt := option.WithCredentialsFile(\"secret.json\")\n	app, err := firebase.NewApp(ctx, nil, opt)\n	if err != nil {\n		fmt.Println(err)\n	}\n\n	client, err := app.Firestore(ctx)\n\n	if err != nil {\n		fmt.Println(err)\n	}\n\n	_, _, err = client.Collection(\"Users\").Doc(\"1\").Collection(\"follower_id\").Add(ctx, map[string]interface{}{\n		\"follower_id\": \"3\",\n	})\n	if err != nil {\n		fmt.Println(err)\n	}\n}\n\n```\n\nもちろんAdd()ではなくDoc().Set()も使える\n\n\n\n\nおわり:sunny:\n','2020-04-23 13:52:22.168692','2020-04-23 13:52:22.168692'),(69,'Webpackerを使わずにRails,React,Typescriptアプリのベースを作る','# はじめに\n\n仕事でReactを使うようになったので勉強がてら自分でReact,Typescript,Railsを使ったアプリを勉強していましたが\n\n意外と最初の設定でつまずいたのでまとめます。\n\n# Rails new\n\n```\nbundle init\n#Gemfileにてrailsのコメントアウトを外す\nbundle install --path vendor/bundle\nbundle exec rails new .\nbundle install\nbundle update\n```\n\n# Webpackerを除く\nGemfileからwebpackerを除きます。\n\n# React表示用のviewを作成\n\n```\nbundle exec rails g controller react-ui::home index\n```\n\n\n# tsconfigを作成\ntypescriptを使うためにはtsconfigを作成しなくてはいけない\n\nrailsのルートディレクトリにtsconfig.jsonファイルを作成して中身を以下の様にする\n\n```json\n{\n  \"compilerOptions\": {\n    \"strictNullChecks\": true,\n    \"noUnusedLocals\": true,\n    \"noImplicitThis\": true,\n    \"alwaysStrict\": true,\n    \"outDir\": \"./dist/\",\n    \"sourceMap\": true,\n    \"noImplicitAny\": false,\n    \"lib\": [\"dom\", \"ES2017\"],\n    \"module\": \"commonjs\",\n    \"target\": \"es5\",\n    \"jsx\": \"react\",\n    \"baseUrl\": \".\",\n    \"paths\": { \"import-png\": [\"types/import-jpg\"] },\n    \"typeRoots\": [\"types\", \"node_modules/@types\"]\n  }\n}\n\n```\n\n\n# npm install webpack -D\n\nwebpackを使える様にする\n\n```\nnpm install webpack -D\nnpm install webpack-cli -D\nnpm isntall webpack-dev-server -D\n```\n\n\n# webpack記載\n\nrailsのルートディレクトリにwebpack.config.jsファイルを作成する。\n\nwebpack.config.jsを以下の様に記載する\n\n```\nnpm install typescript\nnpm install html-webpack-plugin -D\nnpm install webpack-manifest-plugin -D\nnpm install ts-loader style-loader css-loader file-loader url-loader -D\n```\n\n不要なエラーが発生するので　vendor/bundle/ruby/2.6.0/gems 以下のwebpackerのフォルダを削除します。\n\n```javascript\nconst HtmlWebpackPlugin = require(\"html-webpack-plugin\")\nconst ManifestPlugin = require(\"webpack-manifest-plugin\")\nconst path = require(\'path\');\n\nmodule.exports = {\n    mode: \"development\",\n    entry: {\n        home: `${__dirname}/app/webpack/entry/home`\n    },\n\n    output: {\n        path: `${__dirname}/public/packs`,\n        publicPath: `${__dirname}/app/webpack`,\n        filename: \"[name].js\"\n    },\n\n    module: {\n        rules: [{\n                test: /\\.(tsx|ts)$/,\n                loader: \"ts-loader\"\n            },\n            {\n                test: /\\.css/,\n                use: [\n                    \"style-loader\",\n                    {\n                        loader: \"css-loader\",\n                        options: { url: true }\n                    }\n                ]\n            },\n            {\n                test: /\\.(jpg|png)$/,\n                loader: \"file-loader?name=/public/[name].[ext]\"\n            },\n            { test: /\\.(eot|svg|woff|ttf|gif)$/, loader: \"url-loader\" }\n        ]\n    },\n\n    watchOptions: {\n        poll: 500\n    },\n\n    resolve: {\n        extensions: [\".ts\", \".tsx\", \".js\"]\n    },\n\n    plugins: [\n        new HtmlWebpackPlugin({\n            template: `${__dirname}/app/webpack/index.html`,\n            filename: \"index.html\"\n        }),\n        new ManifestPlugin({\n            fileName: \"manifest.json\",\n            publicPath: \"/packs/\",\n            writeToFileEmit: true\n        })\n    ],\n    devServer: {\n        publicPath: \"/packs/\",\n        historyApiFallback: true,\n        inline: true,\n        hot: true,\n        port: 3035,\n        contentBase: \"/packs/\"\n    }\n};\n```\n\napp/webpack以下にindex.htmlを作成して以下の様に記載します。\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n</head>\n\n<body>\n\n</body>\n\n</html>\n```\n\n\n\n# package.jsonにscriptを追加\n\npackage.jsonが作成されているはずなのでそのファイルを開きscriptを以下の様に設定する\n\n```javascript\n\"scripts\": {\n    \"start\": \"webpack-dev-server --hot --inline --contentbase public/packs/  --mode development\"\n},\n```\n\nこれで npm start をコマンドを打ったときにwebpack-dev-serverが起動してくれる\n\n# reactを使えるようにする\n\n```\nnpm install react -D\nnpm install react-dom -D\n```\n\nwebpack.config.jsのentryからjavascriptを読み込むので\n\n```\n${__dirname}/app/webpack/entry/home\n```\n\nのフォルダにindex.tsxを作成します。\n\nそして中身を以下の様にします。\n\n```tsx\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\n\nrender(<div>Home</div>, document.getElementById(\"root\"));\n```\n\n\n# Rails側で読み込むロジック追加\n\nwebpackerを使わないのでjavascript_pack_tagは使えません。\n\nですので\n\nreact_ui/home/index.html.erbを以下の様にします。\n\n```erb\n<div id=\"root\"></div>\n\n<% if Rails.env == \"development\" %>\n<script src=\"http://localhost:3035/packs/home.js\"></script>\n<% else %>\n<script src=\"/packs/home.js\"></script>\n<% end %>\n```\n\nconfig/routes.rbに\n\n```\nroot to: \"react_ui/home#index\"\n```\n\nを追加\n\nlayouts/application.html.erbの\n\n```\n    <%= javascript_pack_tag \'application\', \'data-turbolinks-track\': \'reload\' %>\n```\n\nを削除します。\n\n# 動作確認\n\n```\nbundle exec rails s\nnpm start\n```\n\nを実行してlocalhost:3000にアクセスすれはHomeが表示されるはずです。\n\nあとは好きにreactを書いていけばOKです。\n\n\n\n','2020-04-23 13:52:41.040554','2020-04-23 13:52:41.040554'),(70,'webサイトを作る上でモックアップを作ってみた','# きっかけ\n\n自分で何かサイトを作るときはだいたいなんとなく作り初めていたけどデザインでいろいろ迷ったりすることが多いので\n\nモックアップを作ってみた\n\n# モックアップ\n\nそもそもモックアップ自体よくわかっていなかったのだけれど\n\nコーディングはせず、何かしらのツールを使って実際のwebサイトのデザインを作成するものをモックアップと言うらしい。\n\n実際の完成イメージを作成できるのでコーディング時にあれこれデザインで悩まず済む\n\n自分の場合は\n\nhttps://moqups.com/\n\nこのサイトを使って作成してみたが結構使いやすかった。\n\n有料版にするとモックアップから自動的にhtmlを生成したりしてくれるそうで、結構便利そう。\n\n# 試しに作って見たもの\n\n![Screenshot from 2019-11-07 11-02-00.png](https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/207921/527ae9a1-4789-2f65-0073-e82b86ed1dc6.png)\n\n\n\nモックアップを作成することで必要な機能が見えて来たりするし\n\n個人で何かサイト作るときもモックアップを作ったほうがかなり効率的に開発できそう。\n\nおわり:sunny:\n','2020-04-23 13:52:54.083416','2020-04-23 13:52:54.083416');
/*!40000 ALTER TABLE `articles` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `categories`
--

DROP TABLE IF EXISTS `categories`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `categories` (
  `id` bigint NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT NULL,
  `created_at` datetime(6) NOT NULL,
  `updated_at` datetime(6) NOT NULL,
  `category_type` int DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `categories`
--

LOCK TABLES `categories` WRITE;
/*!40000 ALTER TABLE `categories` DISABLE KEYS */;
INSERT INTO `categories` VALUES (1,'Ruby on Rails','2020-04-20 11:56:02.253124','2020-04-20 11:56:02.253124',1),(2,'Revel','2020-04-20 11:56:11.313133','2020-04-20 11:56:11.313133',1),(3,'React','2020-04-20 11:56:25.288331','2020-04-20 11:56:25.288331',1),(4,'Ruby','2020-04-20 11:57:13.469555','2020-04-20 11:57:13.469555',0),(5,'Golang','2020-04-20 11:57:21.957519','2020-04-20 11:57:21.957519',0),(6,'JavaScript','2020-04-20 11:57:31.216193','2020-04-20 11:57:31.216193',0),(7,'TypeScript','2020-04-20 11:57:36.823412','2020-04-20 11:57:36.823412',0),(8,'HTML','2020-04-20 11:57:45.047149','2020-04-20 11:57:45.047149',0),(9,'CSS','2020-04-20 11:57:50.625355','2020-04-20 11:57:50.625355',0),(10,'SQL','2020-04-23 13:29:29.416612','2020-04-23 13:29:29.416612',0);
/*!40000 ALTER TABLE `categories` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `schema_migrations`
--

DROP TABLE IF EXISTS `schema_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `schema_migrations` (
  `version` varchar(255) NOT NULL,
  PRIMARY KEY (`version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `schema_migrations`
--

LOCK TABLES `schema_migrations` WRITE;
/*!40000 ALTER TABLE `schema_migrations` DISABLE KEYS */;
INSERT INTO `schema_migrations` VALUES ('20200419110339'),('20200419111443'),('20200419111740'),('20200420113657'),('20200420113753'),('20200420114902'),('20200426003035');
/*!40000 ALTER TABLE `schema_migrations` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2020-04-26 20:35:13
